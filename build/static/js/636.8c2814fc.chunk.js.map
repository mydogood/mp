{"version":3,"file":"static/js/636.8c2814fc.chunk.js","mappings":"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","sources":["webpack://my-do-good/./src/components/sections/profileSection/styles.module.sass?50c6","components/sections/profileSection/ui/UserForm.tsx","components/sections/profileSection/ProfileSection.tsx","pages/Profile/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileSection\":\"styles_profileSection__+yNrA\",\"avatarContainer\":\"styles_avatarContainer__ogjhH\",\"defaultAvatar\":\"styles_defaultAvatar__FGC3U\",\"userAvatar\":\"styles_userAvatar__U84Gv\",\"graySquare\":\"styles_graySquare__dj9zh\",\"avatarButtons\":\"styles_avatarButtons__Wj0US\",\"inputContainer\":\"styles_inputContainer__3P64v\",\"inputLabel\":\"styles_inputLabel__2KZz1\",\"inputAvatar\":\"styles_inputAvatar__0d4f-\",\"inputTitle\":\"styles_inputTitle__wvCtR\",\"removeAvatarBtn\":\"styles_removeAvatarBtn__Hoamz\",\"formContainer\":\"styles_formContainer__gdB9E\",\"formContainerTitle\":\"styles_formContainerTitle__eb8qc\",\"formContainerSubTitle\":\"styles_formContainerSubTitle__nbd0S\",\"input\":\"styles_input__7CTV3\",\"passwordDescription\":\"styles_passwordDescription__ke9Oy\",\"setPasswordBtn\":\"styles_setPasswordBtn__e2pyI\",\"saveChangeBtn\":\"styles_saveChangeBtn__PO6QY\",\"setPasswordModal\":\"styles_setPasswordModal__Gs5Jq\",\"setPasswordModalTitle\":\"styles_setPasswordModalTitle__wbCb3\",\"cancelBtn\":\"styles_cancelBtn__A2ZjL\",\"saveBtn\":\"styles_saveBtn__UYd+9\",\"setPasswordModalForm\":\"styles_setPasswordModalForm__Xe1vU\",\"passwordInputContainer\":\"styles_passwordInputContainer__fWZIw\",\"setPasswordDrawer\":\"styles_setPasswordDrawer__VWr65\",\"setPasswordDrawerTitle\":\"styles_setPasswordDrawerTitle__OrQnq\",\"setPasswordDrawerForm\":\"styles_setPasswordDrawerForm__agf35\",\"setPasswordDrawerBtnContainer\":\"styles_setPasswordDrawerBtnContainer__o11-V\"};","import React, {useState, useEffect} from 'react';\nimport {useForm, Controller, SubmitHandler, UseFormRegister, useFormContext} from 'react-hook-form';\nimport {Modal, Drawer, Tag, message, Result} from 'antd';\nimport styles from '../styles.module.sass'\nimport {useMediaQuery} from \"react-responsive\";\nimport {fetchDataFromSalesForce} from \"../../../../salesforceAuth\";\nimport {NavLink, useParams} from \"react-router-dom\";\nimport {updateDataInSalesForce} from \"../../../../salesforceAuth\";\n\n\ntype FormData = {\n    fullName?: string;\n    email?: string;\n    password: string;\n    confirmPassword: string;\n    memberPassword: string;\n};\n\nconst UserForm: React.FC<{ setAvatarInitials: React.Dispatch<React.SetStateAction<string | null>> }> = ({ setAvatarInitials }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const { register, handleSubmit, formState: { errors, isValid }, control, watch, reset} = useForm<FormData>({mode: \"onChange\"});\n    const [data, setData] = useState<FormData []>([]);\n    const [messageApi, contextHolder] = message.useMessage();\n    const isMobile = useMediaQuery({ maxWidth: 610 })\n    const { clientId } = useParams<{ clientId: string }>();\n    const [error, setError] = useState<string | null>(null);\n\n    const success = () => {\n        messageApi.open({\n            type: 'success',\n            content: 'Password updated successfully!',\n        });\n    };\n\n    const decline = () => {\n        messageApi.open({\n            type: 'success',\n            content: 'Failed to update password. Please try again later.',\n        });\n    };\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const salesForceData = await fetchDataFromSalesForce(`query/?q=SELECT+Id,Member_Portal_Password__c,Full_Name__c,Email+FROM+Contact+WHERE+(Membership_Status__c = \\'Active\\'+OR+Membership_Status__c = \\'Testing\\')+AND+RecordTypeId = \\'01236000000yGps\\'+AND+Id='${clientId}'`);\n\n                const transformedData = salesForceData.records.map((record: any) => ({\n                    key: record.Id,\n                    fullName: record.Full_Name__c,\n                    email: record.Email,\n                    memberPassword: record.Member_Portal_Password__c,\n                }));\n                setData(transformedData);\n            } catch (error) {\n                console.log(error)\n                setError('Failed')\n\n            }\n        }\n\n        void fetchData();\n    }, [clientId]);\n\n\n    const showModal = () => {\n        setIsModalOpen(true);\n    };\n\n    const handleOk = () => {\n        setIsModalOpen(false);\n    };\n\n    const handleCancel = () => {\n        reset();\n        setIsModalOpen(false);\n    };\n\n    const onSubmit: SubmitHandler<FormData> = async (data) => {\n        const endpoint = `/sobjects/Contact/${clientId}`;\n        const updateData = {\n            Member_Portal_Password__c: data.password\n        };\n\n        try {\n            await updateDataInSalesForce(endpoint, updateData);\n            handleOk();\n            success()\n        } catch (error) {\n            console.error('Failed to update password:', error);\n            decline()\n        }\n    };\n\n    const password = watch('password', '');\n    const confirmPassword = watch('confirmPassword', '');\n\n\n    return (\n        <div className={styles.formContainer}>\n            {contextHolder}\n            <h2 className={styles.formContainerTitle}>My account</h2>\n            <hr/>\n            <h4 className={styles.formContainerSubTitle}>Personal information</h4>\n\n                <div className={styles.inputContainer}>\n                    <small className={styles.inputLabel}>Full Name</small>\n                    <p className={styles.input}>{data[0]?.fullName || 'Loading...'}</p>\n                </div>\n                <div className={styles.inputContainer}>\n                    <small className={styles.inputLabel}>Email</small>\n                    <p className={styles.input}>{data[0]?.email || 'Loading...'}</p>\n                </div>\n                <hr style={{opacity: '50%'}}/>\n                <h4 className={styles.formContainerSubTitle}>Account changes</h4>\n                <p>Password</p>\n                {data[0]?.memberPassword ? (\n                    <p className={styles.passwordDescription}>You can change password</p>\n\n                ) : (\n                    <p className={styles.passwordDescription}>You can set a permanent password if you don't want to use temporary login codes.</p>\n                )}\n                <button onClick={showModal} className={styles.setPasswordBtn}>{data[0]?.memberPassword ? \"Change Password\" : \"Set Password\"}</button>\n                <hr style={{opacity: '50%'}}/>\n                {isMobile ? (\n                    <Drawer\n                        footerStyle={{ border: 'none' }}\n                        closeIcon={false}\n                        width={'100%'}\n                        placement=\"right\"\n                        onClose={handleCancel}\n                        open={isModalOpen}\n                    >\n                        <section className={styles.setPasswordDrawer}>\n                            <form>\n                                <div className={styles.setPasswordDrawerTitle}>\n                                    <h3>{data[0]?.memberPassword ? \"Change Password\" : \"Set Password\"}</h3>\n                                </div>\n                                <div className={styles.setPasswordDrawerForm}>\n                                    <div className={styles.passwordInputContainer}>\n                                        <label className={styles.inputLabel}>Create Password</label>\n                                        <input\n                                            placeholder={'Enter your password'}\n                                            className={styles.input}\n                                            type=\"password\"\n                                            {...register('password', {\n                                                minLength: {\n                                                    value: 8,\n                                                    message: 'Password must be at least 8 characters',\n                                                },\n                                            })}\n                                        />\n                                        <div>{errors?.password && <p>{errors.password.message}</p>}</div>\n                                    </div>\n                                    <div className={styles.passwordInputContainer}>\n                                        <label className={styles.inputLabel}>Confirm Password</label>\n                                        <input\n                                            placeholder={'Enter your password'}\n                                            className={styles.input}\n                                            type=\"password\"\n                                            {...register('confirmPassword', {\n                                                validate: (value) =>\n                                                    value === password || 'Passwords do not match',\n                                            })}\n                                        />\n                                        <div>{errors?.confirmPassword && (\n                                            <p>{errors.confirmPassword.message}</p>\n                                        )}</div>\n                                    </div>\n                                    <div className={styles.setPasswordDrawerBtnContainer}>\n                                        <button type={\"button\"} onClick={handleCancel} className={styles.cancelBtn}>Cancel</button>\n                                        <button onClick={handleSubmit(onSubmit)} disabled={!password || password !== confirmPassword || !isValid} className={styles.saveBtn}>Save</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </section>\n                    </Drawer>\n                ) : (\n                    <Modal width={'665px'} centered={true} closeIcon={false} footer={null} open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\n                        <section className={styles.setPasswordModal}>\n                            <form >\n                                <div className={styles.setPasswordModalTitle}>\n                                    <h3>{data[0]?.memberPassword ? \"Change Password\" : \"Set Password\"}</h3>\n                                    <button type={\"button\"} onClick={handleCancel} className={styles.cancelBtn}>Cancel</button>\n                                    <button onClick={handleSubmit(onSubmit)} disabled={!password || password !== confirmPassword || !isValid} className={styles.saveBtn}>Save</button>\n                                </div>\n\n                                <div className={styles.setPasswordModalForm}>\n                                    <div className={styles.passwordInputContainer}>\n                                        <label className={styles.inputLabel}>Create Password</label>\n                                        <input\n                                            placeholder={'Enter your password'}\n                                            className={styles.input}\n                                            type=\"password\"\n                                            {...register('password', {\n                                                minLength: {\n                                                    value: 8,\n                                                    message: 'Password must be at least 8 characters',\n                                                },\n                                            })}\n                                        />\n                                        <div>{errors?.password && <p>{errors.password.message}</p>}</div>\n                                    </div>\n                                    <div className={styles.passwordInputContainer}>\n                                        <label className={styles.inputLabel}>Confirm Password</label>\n                                        <input\n                                            placeholder={'Enter your password'}\n                                            className={styles.input}\n                                            type=\"password\"\n                                            {...register('confirmPassword', {\n                                                validate: (value) =>\n                                                    value === password || 'Passwords do not match',\n                                            })}\n                                        />\n                                        <div>{errors?.confirmPassword && (\n                                            <p>{errors.confirmPassword.message}</p>\n                                        )}</div>\n                                    </div>\n                                </div>\n                            </form>\n                        </section>\n                    </Modal>\n                )}\n        </div>\n    );\n\n}\n\nexport default UserForm;","import React, { FC, useState } from 'react';\nimport {useMediaQuery} from \"react-responsive\";\nimport styles from './styles.module.sass'\nimport UserForm from \"./ui/UserForm\";\n\n\nconst ProfileSection: FC = () => {\n    const [avatarInitials, setAvatarInitials] = useState<string | null>(null);\n    const isMobile = useMediaQuery({ maxWidth: 610 })\n    const isTablet = useMediaQuery({ maxWidth: 1024 })\n\n    return (\n        <section className={styles.profileSection}>\n                <UserForm setAvatarInitials={setAvatarInitials}/>\n        </section>\n    );\n};\n\nexport default ProfileSection;","import { FC } from \"react\"\nimport {useMediaQuery} from \"react-responsive\"\nimport Header from \"../../components/layout/Header\";\nimport ProfileSection from \"../../components/sections/profileSection/ProfileSection\";\n\n\nconst Profile: FC = () => {\n    const isMobile = useMediaQuery({ maxWidth: 610 })\n    return (\n        <main style={{backgroundColor: '#FFFFFF', height: '100vh'}}>\n            <Header/>\n            <ProfileSection/>\n        </main>\n    )\n}\n\nexport default Profile"],"names":["_ref","setAvatarInitials","_data$","_data$2","_data$3","_data$4","_data$5","_data$6","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","_useForm","useForm","mode","register","handleSubmit","_useForm$formState","formState","errors","isValid","watch","control","reset","_useState3","_useState4","data","setData","_message$useMessage","message","useMessage","_message$useMessage2","messageApi","contextHolder","isMobile","useMediaQuery","maxWidth","clientId","useParams","_useState5","_useState6","setError","useEffect","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","salesForceData","transformedData","wrap","_context","prev","next","fetchDataFromSalesForce","concat","sent","records","map","record","key","Id","fullName","Full_Name__c","email","Email","memberPassword","Member_Portal_Password__c","t0","console","log","stop","apply","arguments","fetchData","handleOk","handleCancel","onSubmit","_ref2","_callee2","endpoint","updateData","_context2","password","updateDataInSalesForce","open","type","content","error","_x","confirmPassword","_jsxs","className","styles","children","_jsx","style","opacity","onClick","Drawer","footerStyle","border","closeIcon","width","placement","onClose","_objectSpread","placeholder","minLength","value","validate","disabled","Modal","centered","footer","onOk","onCancel","UserForm","backgroundColor","height","Header","ProfileSection"],"sourceRoot":""}