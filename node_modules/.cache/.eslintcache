[{"/Users/shannoncoakley/Documents/mp/src/index.tsx":"1","/Users/shannoncoakley/Documents/mp/src/reportWebVitals.ts":"2","/Users/shannoncoakley/Documents/mp/src/App.tsx":"3","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/contexts/IncentivesContext.tsx":"4","/Users/shannoncoakley/Documents/mp/src/pages/index.tsx":"5","/Users/shannoncoakley/Documents/mp/src/getSalesForceData.ts":"6","/Users/shannoncoakley/Documents/mp/src/components/layout/Layout.tsx":"7","/Users/shannoncoakley/Documents/mp/src/components/layout/Loader.tsx":"8","/Users/shannoncoakley/Documents/mp/src/salesforceAuth.ts":"9","/Users/shannoncoakley/Documents/mp/src/pages/Meetings/index.tsx":"10","/Users/shannoncoakley/Documents/mp/src/pages/Profile/index.tsx":"11","/Users/shannoncoakley/Documents/mp/src/pages/Home/index.tsx":"12","/Users/shannoncoakley/Documents/mp/src/pages/Incentives/index.tsx":"13","/Users/shannoncoakley/Documents/mp/src/pages/Bonus/index.tsx":"14","/Users/shannoncoakley/Documents/mp/src/pages/Login/index.tsx":"15","/Users/shannoncoakley/Documents/mp/src/components/layout/ClientIdManager.tsx":"16","/Users/shannoncoakley/Documents/mp/src/components/layout/Header.tsx":"17","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/PartnersSection.tsx":"18","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/OverviewSection.tsx":"19","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/MatchesSection.tsx":"20","/Users/shannoncoakley/Documents/mp/src/components/sections/meetingsSection/MeetingsSection.tsx":"21","/Users/shannoncoakley/Documents/mp/src/components/sections/profileSection/ProfileSection.tsx":"22","/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/CartIncentivesSection.tsx":"23","/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/RedeemedIncentivesSection.tsx":"24","/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/SelectedIncentivesSection.tsx":"25","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/mobile/index.tsx":"26","/Users/shannoncoakley/Documents/mp/src/components/login/Login.tsx":"27","/Users/shannoncoakley/Documents/mp/src/components/logo/index.tsx":"28","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/MatchPartnerDrawer.tsx":"29","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/PartnerDrawer.tsx":"30","/Users/shannoncoakley/Documents/mp/src/components/layout/BurgerMenu.tsx":"31","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/PartnerModal.tsx":"32","/Users/shannoncoakley/Documents/mp/src/components/sections/meetingsSection/ClosedMeetingsTable.tsx":"33","/Users/shannoncoakley/Documents/mp/src/components/sections/meetingsSection/PendingMeetingsTable.tsx":"34","/Users/shannoncoakley/Documents/mp/src/components/sections/meetingsSection/DeclineMeetingsTable.tsx":"35","/Users/shannoncoakley/Documents/mp/src/components/sections/profileSection/ui/UserForm.tsx":"36","/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/CheckoutDrawer.tsx":"37","/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/SelectedIncentivesDrawer.tsx":"38","/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/CharityDrawer.tsx":"39","/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/IncentiveCustomizationDrawer.tsx":"40","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/mobile/MobilePartnersSection.tsx":"41","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/ui/AcceptRequestModal.tsx":"42","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/ui/RequestModal.tsx":"43","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/ui/RequestTextModal.tsx":"44","/Users/shannoncoakley/Documents/mp/src/components/sections/meetingsSection/ui/DeclineMeetingDetailsDrawer.tsx":"45","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/ui/NoDQModal.tsx":"46","/Users/shannoncoakley/Documents/mp/src/components/sections/meetingsSection/ui/AcceptMeetingDetailsDrawer.tsx":"47","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/ui/TreeCategories.tsx":"48","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/mobile/PartnerFilterDrawer.tsx":"49"},{"size":947,"mtime":1719496239000,"results":"50","hashOfConfig":"51"},{"size":425,"mtime":1719496239000,"results":"52","hashOfConfig":"51"},{"size":2772,"mtime":1719496239000,"results":"53","hashOfConfig":"51"},{"size":14995,"mtime":1719496239000,"results":"54","hashOfConfig":"51"},{"size":1259,"mtime":1719496239000,"results":"55","hashOfConfig":"51"},{"size":8953,"mtime":1719496239000,"results":"56","hashOfConfig":"51"},{"size":631,"mtime":1719496239000,"results":"57","hashOfConfig":"51"},{"size":166,"mtime":1719496239000,"results":"58","hashOfConfig":"51"},{"size":3891,"mtime":1719496239000,"results":"59","hashOfConfig":"51"},{"size":641,"mtime":1719496239000,"results":"60","hashOfConfig":"51"},{"size":478,"mtime":1719496239000,"results":"61","hashOfConfig":"51"},{"size":9248,"mtime":1719496239000,"results":"62","hashOfConfig":"51"},{"size":2517,"mtime":1719496239000,"results":"63","hashOfConfig":"51"},{"size":7046,"mtime":1719496239000,"results":"64","hashOfConfig":"51"},{"size":223,"mtime":1719496239000,"results":"65","hashOfConfig":"51"},{"size":515,"mtime":1719496239000,"results":"66","hashOfConfig":"51"},{"size":1750,"mtime":1719496239000,"results":"67","hashOfConfig":"51"},{"size":14699,"mtime":1719496239000,"results":"68","hashOfConfig":"51"},{"size":8320,"mtime":1719496239000,"results":"69","hashOfConfig":"51"},{"size":6254,"mtime":1719496239000,"results":"70","hashOfConfig":"51"},{"size":1309,"mtime":1719496239000,"results":"71","hashOfConfig":"51"},{"size":590,"mtime":1719496239000,"results":"72","hashOfConfig":"51"},{"size":8466,"mtime":1719496239000,"results":"73","hashOfConfig":"51"},{"size":3942,"mtime":1719496239000,"results":"74","hashOfConfig":"51"},{"size":18322,"mtime":1719496239000,"results":"75","hashOfConfig":"51"},{"size":1730,"mtime":1719496239000,"results":"76","hashOfConfig":"51"},{"size":4588,"mtime":1719496239000,"results":"77","hashOfConfig":"51"},{"size":512,"mtime":1719496239000,"results":"78","hashOfConfig":"51"},{"size":4830,"mtime":1719496239000,"results":"79","hashOfConfig":"51"},{"size":17110,"mtime":1719496239000,"results":"80","hashOfConfig":"51"},{"size":2496,"mtime":1719496239000,"results":"81","hashOfConfig":"51"},{"size":4920,"mtime":1719496239000,"results":"82","hashOfConfig":"51"},{"size":10023,"mtime":1719496239000,"results":"83","hashOfConfig":"51"},{"size":10059,"mtime":1719496239000,"results":"84","hashOfConfig":"51"},{"size":9026,"mtime":1719496239000,"results":"85","hashOfConfig":"51"},{"size":11272,"mtime":1719496239000,"results":"86","hashOfConfig":"51"},{"size":8934,"mtime":1719496239000,"results":"87","hashOfConfig":"51"},{"size":2984,"mtime":1719496239000,"results":"88","hashOfConfig":"51"},{"size":6389,"mtime":1719496239000,"results":"89","hashOfConfig":"51"},{"size":1844,"mtime":1719496239000,"results":"90","hashOfConfig":"51"},{"size":12402,"mtime":1719496239000,"results":"91","hashOfConfig":"51"},{"size":6615,"mtime":1720626375095,"results":"92","hashOfConfig":"51"},{"size":7819,"mtime":1719496239000,"results":"93","hashOfConfig":"51"},{"size":3547,"mtime":1719496239000,"results":"94","hashOfConfig":"51"},{"size":3336,"mtime":1719496239000,"results":"95","hashOfConfig":"51"},{"size":2929,"mtime":1720626504619,"results":"96","hashOfConfig":"51"},{"size":3228,"mtime":1719496239000,"results":"97","hashOfConfig":"51"},{"size":8804,"mtime":1719496239000,"results":"98","hashOfConfig":"51"},{"size":5131,"mtime":1719496239000,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13iuwbz",{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"202"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284"},"/Users/shannoncoakley/Documents/mp/src/index.tsx",[],[],"/Users/shannoncoakley/Documents/mp/src/reportWebVitals.ts",[],[],"/Users/shannoncoakley/Documents/mp/src/App.tsx",[],[],"/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/contexts/IncentivesContext.tsx",["285","286","287","288"],[],"import React, {\n  createContext,\n  useContext,\n  useState,\n  FC,\n  ReactNode,\n  useEffect,\n} from \"react\";\n\nimport {\n  useSalesForceData,\n  useSalesForceDataWithTwoQueries,\n} from \"../../../../getSalesForceData\";\nimport { updateDataInSalesForce } from \"../../../../salesforceAuth\";\nimport { SelectedIncentivesDataType } from \"../../incentivesSection/SelectedIncentivesSection\";\n\ninterface DataType {\n  key: string;\n  incentive: string;\n  moreInfo: string | JSX.Element;\n  meetingsRequired: number;\n}\n\ninterface IncentivesContextProps {\n  selectedIncentives: DataType[];\n  setSelectedIncentives: React.Dispatch<React.SetStateAction<DataType[]>>;\n  setIncentiveCounts: React.Dispatch<\n    React.SetStateAction<{ [key: string]: number }>\n  >;\n  addSelectedIncentive: (incentive: DataType) => void;\n  removeSelectedIncentive: (key: string) => void;\n  totalMeetingsRequired: number;\n  incentiveCounts: { [key: string]: number };\n  submitConfirmed: boolean; // Добавили это\n  setSubmitConfirmed: React.Dispatch<React.SetStateAction<boolean>>;\n  resetSubmitConfirmed: () => void;\n  savedSelectedIncentives: DataType[];\n  setSavedSelectedIncentives: React.Dispatch<React.SetStateAction<DataType[]>>;\n  savedIncentiveCounts: { [key: string]: number };\n  setSavedIncentiveCounts: React.Dispatch<\n    React.SetStateAction<{ [key: string]: number }>\n  >;\n  cartItems: SelectedIncentivesDataType[];\n  setCartItems: React.Dispatch<\n    React.SetStateAction<SelectedIncentivesDataType[]>\n  >;\n}\n\nconst IncentivesContext = createContext<IncentivesContextProps | undefined>(\n  undefined\n);\n\nexport const IncentivesProvider: FC<{ children: ReactNode }> = ({\n  children,\n}) => {\n  const [selectedIncentives, setSelectedIncentives] = useState<DataType[]>([]);\n  const [incentiveCounts, setIncentiveCounts] = useState<{\n    [key: string]: number;\n  }>({});\n  const [submitConfirmed, setSubmitConfirmed] = useState(false);\n\n  const [savedSelectedIncentives, setSavedSelectedIncentives] = useState<\n    DataType[]\n  >([]);\n  const [savedIncentiveCounts, setSavedIncentiveCounts] = useState<{\n    [key: string]: number;\n  }>({});\n  const [cartItems, setCartItems] = useState<SelectedIncentivesDataType[]>([]);\n\n  // Saving data to localStorage every time it changes\n  useEffect(() => {\n    const storedSelectedIncentives = JSON.parse(\n      localStorage.getItem(\"selectedIncentives\") || \"[]\"\n    );\n    const storedIncentiveCounts = JSON.parse(\n      localStorage.getItem(\"incentiveCounts\") || \"{}\"\n    );\n    const cartItems = JSON.parse(\n      localStorage.getItem(\"incentiveCartItems\") || \"[]\"\n    );\n\n    if (storedSelectedIncentives.length > 0)\n      setSelectedIncentives(storedSelectedIncentives);\n    if (Object.keys(storedIncentiveCounts).length > 0)\n      setIncentiveCounts(storedIncentiveCounts);\n    if (cartItems.length > 0) setCartItems(cartItems);\n  }, []);\n\n  // Retrieving data from localStorage when loading a component\n  useEffect(() => {\n    localStorage.setItem(\n      \"selectedIncentives\",\n      JSON.stringify(selectedIncentives)\n    );\n    localStorage.setItem(\"incentiveCounts\", JSON.stringify(incentiveCounts));\n    localStorage.setItem(\"incentiveCartItems\", JSON.stringify(cartItems));\n  }, [selectedIncentives, incentiveCounts, cartItems]);\n\n  const resetSubmitConfirmed = () => {\n    setSubmitConfirmed(false);\n  };\n  const addSelectedIncentive = (incentive: DataType) => {\n    const existingIndex = selectedIncentives.findIndex(\n      (item) => item.key === incentive.key\n    );\n\n    if (existingIndex !== -1) {\n      setIncentiveCounts((prevCounts) => ({\n        ...prevCounts,\n        [incentive.key]: (prevCounts[incentive.key] || 0) + 1,\n      }));\n    } else {\n      setSelectedIncentives((prevSelectedIncentives) => [\n        ...prevSelectedIncentives,\n        incentive,\n      ]);\n      setIncentiveCounts((prevCounts) => ({\n        ...prevCounts,\n        [incentive.key]: 1,\n      }));\n    }\n  };\n\n  const removeSelectedIncentive = (key: string) => {\n    setSelectedIncentives((prevSelectedIncentives) =>\n      prevSelectedIncentives.filter((item) => item.key !== key)\n    );\n    setIncentiveCounts((prevCounts) => ({\n      ...prevCounts,\n      [key]: (prevCounts[key] || 0) - 1,\n    }));\n  };\n\n  const totalMeetingsRequired = selectedIncentives.reduce((total, item) => {\n    return total + item.meetingsRequired * (incentiveCounts[item.key] || 1);\n  }, 0);\n\n  return (\n    <IncentivesContext.Provider\n      value={{\n        selectedIncentives,\n        addSelectedIncentive,\n        removeSelectedIncentive,\n        totalMeetingsRequired,\n        incentiveCounts,\n        setSelectedIncentives,\n        setIncentiveCounts,\n        submitConfirmed,\n        setSubmitConfirmed,\n        resetSubmitConfirmed,\n        savedSelectedIncentives,\n        setSavedSelectedIncentives,\n        savedIncentiveCounts,\n        setSavedIncentiveCounts,\n        cartItems,\n        setCartItems,\n      }}\n    >\n      {children}\n    </IncentivesContext.Provider>\n  );\n};\n\nexport const useIncentivesContext = (): IncentivesContextProps => {\n  const context = useContext(IncentivesContext);\n  if (!context) {\n    throw new Error(\n      \"useIncentivesContext must be used within an IncentivesProvider\"\n    );\n  }\n  return context;\n};\n\ninterface PartnersDataType {\n  filterCategory?: string[];\n  Related_Membership_Member__c: string;\n  Related_Membership__c: string;\n  key: string;\n  clientKey?: string;\n  partnerName: string;\n  overview: string;\n  hasRequested: boolean;\n  declineReason?: string | JSX.Element;\n  Stage_M__c?: string;\n  Stage_MP__c?: string;\n  Sweepstakes_Type__c?: string;\n  Interest_in_Partner__c?: string;\n  RecordTypeId?: string;\n  Client_Campaign__c?: string;\n  Meeting_Source__c?: string;\n  Intro_Type__c?: string;\n  Request_Submitted_Date_M__c?: string;\n  Survey_Option_Name__c: string[];\n}\n\ninterface PartnerContextType {\n  acceptedList: PartnersDataType[];\n  setAcceptedList: React.Dispatch<React.SetStateAction<PartnersDataType[]>>;\n  setRequestedList: React.Dispatch<React.SetStateAction<PartnersDataType[]>>;\n  setDeclinedList: React.Dispatch<React.SetStateAction<PartnersDataType[]>>;\n  requestedList: PartnersDataType[];\n  declinedList: PartnersDataType[];\n  savedAcceptedList: PartnersDataType[];\n  savedRequestedList: PartnersDataType[];\n  savedDeclinedList: PartnersDataType[];\n  setSavedAcceptedList: React.Dispatch<\n    React.SetStateAction<PartnersDataType[]>\n  >;\n  setSavedRequestedList: React.Dispatch<\n    React.SetStateAction<PartnersDataType[]>\n  >;\n  setSavedDeclinedList: React.Dispatch<\n    React.SetStateAction<PartnersDataType[]>\n  >;\n  addAcceptedPartner: (partnerName: PartnersDataType) => void;\n  addRequestedPartner: (partnerName: PartnersDataType) => void;\n  addDeclinedPartner: (partnerName: PartnersDataType) => void;\n  removeAcceptedPartner: (partnerName: PartnersDataType) => void;\n  removeRequestedPartner: (partnerName: PartnersDataType) => void;\n  removeDeclinePartner: (partnerName: PartnersDataType) => void;\n  removeSavedDeclinePartner: (partnerName: PartnersDataType) => void;\n  submitConfirmed: boolean; // Добавили это\n  setSubmitConfirmed: React.Dispatch<React.SetStateAction<boolean>>;\n  resetSubmitConfirmed: () => void;\n}\n\nconst PartnerContext = createContext<PartnerContextType | undefined>(undefined);\n\nexport const PartnerContextProvider: FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [acceptedList, setAcceptedList] = useState<PartnersDataType[]>([]);\n  const [requestedList, setRequestedList] = useState<PartnersDataType[]>([]);\n  const [declinedList, setDeclinedList] = useState<PartnersDataType[]>([]);\n  const [submitConfirmed, setSubmitConfirmed] = useState(false);\n  const [savedAcceptedList, setSavedAcceptedList] = useState<\n    PartnersDataType[]\n  >([]);\n  const [savedRequestedList, setSavedRequestedList] = useState<\n    PartnersDataType[]\n  >([]);\n  const [savedDeclinedList, setSavedDeclinedList] = useState<\n    PartnersDataType[]\n  >([]);\n\n  // Сохранение данных в localStorage при каждом изменении\n  useEffect(() => {\n    const storedAcceptedList = JSON.parse(\n      localStorage.getItem(\"acceptedList\") || \"[]\"\n    );\n    const storedRequestedList = JSON.parse(\n      localStorage.getItem(\"requestedList\") || \"[]\"\n    );\n    const storedDeclinedList = JSON.parse(\n      localStorage.getItem(\"declinedList\") || \"[]\"\n    );\n\n    if (storedAcceptedList.length > 0) setAcceptedList(storedAcceptedList);\n    if (storedRequestedList.length > 0) setRequestedList(storedRequestedList);\n    if (storedDeclinedList.length > 0) setDeclinedList(storedDeclinedList);\n  }, []);\n\n  // Получение данных из localStorage при загрузке компонента\n  useEffect(() => {\n    localStorage.setItem(\"acceptedList\", JSON.stringify(acceptedList));\n    localStorage.setItem(\"requestedList\", JSON.stringify(requestedList));\n    localStorage.setItem(\"declinedList\", JSON.stringify(declinedList));\n  }, [acceptedList, requestedList, declinedList]);\n\n  const resetSubmitConfirmed = () => {\n    setSubmitConfirmed(false);\n  };\n  const addAcceptedPartner = (partner: PartnersDataType) => {\n    if (!acceptedList.some((item) => item.key === partner.key)) {\n      setAcceptedList([...acceptedList, partner]);\n    }\n  };\n\n  const addRequestedPartner = (partner: PartnersDataType) => {\n    if (!requestedList.some((item) => item.key === partner.key)) {\n      setRequestedList([...requestedList, partner]);\n    }\n  };\n\n  const addDeclinedPartner = (partner: PartnersDataType) => {\n    if (!declinedList.some((item) => item.key === partner.key)) {\n      setDeclinedList([...declinedList, partner]);\n    }\n  };\n\n  const removeAcceptedPartner = (partnerName: PartnersDataType) => {\n    const updatedList = acceptedList.filter(\n      (partner) => partner.key !== partnerName.key\n    );\n    setAcceptedList(updatedList);\n  };\n\n  const removeRequestedPartner = (partnerName: PartnersDataType) => {\n    const updatedList = requestedList.filter(\n      (partner) => partner.key !== partnerName.key\n    );\n    setRequestedList(updatedList);\n  };\n\n  const removeDeclinePartner = (partnerName: PartnersDataType) => {\n    const updatedList = declinedList.filter(\n      (partner) => partner.key !== partnerName.key\n    );\n    setDeclinedList(updatedList);\n  };\n\n  const removeSavedDeclinePartner = (partnerName: PartnersDataType) => {\n    const updatedList = savedDeclinedList.filter(\n      (partner) => partner.key !== partnerName.key\n    );\n    setSavedDeclinedList(updatedList);\n  };\n\n  return (\n    <PartnerContext.Provider\n      value={{\n        acceptedList,\n        requestedList,\n        declinedList,\n        setAcceptedList,\n        setRequestedList,\n        setDeclinedList,\n        addAcceptedPartner,\n        addRequestedPartner,\n        addDeclinedPartner,\n        removeAcceptedPartner,\n        removeRequestedPartner,\n        removeDeclinePartner,\n        submitConfirmed,\n        setSubmitConfirmed,\n        resetSubmitConfirmed,\n        savedAcceptedList,\n        savedRequestedList,\n        savedDeclinedList,\n        setSavedAcceptedList,\n        setSavedRequestedList,\n        setSavedDeclinedList,\n        removeSavedDeclinePartner,\n      }}\n    >\n      {children}\n    </PartnerContext.Provider>\n  );\n};\n\nexport const usePartnerContext = () => {\n  const context = useContext(PartnerContext);\n  if (!context) {\n    throw new Error(\"usePartnerContext must be used within a PartnerProvider\");\n  }\n  return context;\n};\n\ninterface GetPartnersDataType {\n  key: string;\n  clientKey?: string;\n  partnerName: string;\n  overview: string;\n  hasRequested: boolean;\n  website?: string;\n  richMerge?: string;\n  surveyOptionName?: string;\n}\n\nexport interface GetIncentiveDataType {\n  key: string;\n  incentive: string;\n  moreInfo: string | JSX.Element;\n  meetingsRequired: number;\n  Incentive_Category__c: string;\n  Product_Type__c: string;\n  Points__c?: number;\n  CreatedDate?: string;\n}\n\ntype DataContextType = {\n  incentiveFromSalesForce: GetIncentiveDataType[];\n};\n\ninterface SalesForcePartner {\n  Id: string;\n  Client_Id__c?: string;\n  Client_Name__c: string;\n  Quick_Overview__c: string;\n  Client_Website__c?: string;\n  Rich_Merge__c?: string;\n}\n\ninterface SalesForceIncentive {\n  Id: string;\n  Incentive_Copy__c: string;\n  Website__c: string;\n  Image__c?: string;\n  Meetings_Needed__c: number;\n  Incentive_Category__c: string;\n  Product_Type__c: string;\n  Points__c?: number;\n  Customization_Options__c?: string;\n  Needs_to_be_shipped__c?: string;\n  CreatedDate?: string;\n}\n\nconst GetPartnersAndIncentivesContext = createContext<\n  DataContextType | undefined\n>(undefined);\n\nexport const GetPartnersAndIncentivesContextProvider: FC<{\n  children: React.ReactNode;\n}> = ({ children }) => {\n  const incentiveFromSalesForce = useSalesForceData(\n    \"query/?q=SELECT+Id,Incentive_Copy__c,Website__c,Image__c,Meetings_Needed__c,Incentive_Category__c,Product_Type__c,Points__c,CreatedDate,Needs_to_be_shipped__c,Customization_Options__c+FROM+Incentive__c+WHERE+Live__c=true\",\n    (record: SalesForceIncentive) => {\n      let moreInfoElement: JSX.Element | string = \"-\";\n\n      if (record.Website__c) {\n        try {\n          const url = new URL(record.Website__c);\n          let domain = url.hostname;\n\n          // Если 'www.' отсутствует в начале хоста, добавьте его\n          if (!domain.startsWith(\"www.\")) {\n            domain = \"www.\" + domain;\n          }\n\n          moreInfoElement = (\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ textDecoration: \"underline\", color: \"black\" }}\n              href={record.Website__c}\n            >\n              {domain}\n            </a>\n          );\n        } catch (error) {\n          console.error(\n            `Invalid URL for record ${record.Id}:`,\n            record.Website__c\n          );\n          moreInfoElement = record.Website__c;\n        }\n      }\n\n      return {\n        key: record.Id,\n        incentive: record.Incentive_Copy__c,\n        moreInfo: moreInfoElement,\n        meetingsRequired: record.Meetings_Needed__c,\n        Incentive_Category__c: record.Incentive_Category__c,\n        Product_Type__c: record.Product_Type__c,\n        Website__c: record.Website__c,\n        Image__c: record.Image__c,\n        Points__c: record.Points__c,\n        Needs_to_be_shipped__c: record.Needs_to_be_shipped__c,\n        Customization_Options__c: record.Customization_Options__c,\n        CreatedDate: record.CreatedDate,\n      };\n    }\n  );\n\n  return (\n    <GetPartnersAndIncentivesContext.Provider\n      value={{ incentiveFromSalesForce }}\n    >\n      {children}\n    </GetPartnersAndIncentivesContext.Provider>\n  );\n};\n\nexport const useGetPartnersAndIncentivesContext = () => {\n  const context = useContext(GetPartnersAndIncentivesContext);\n  if (!context) {\n    throw new Error(\n      \"useGetPartnersAndIncentivesContext must be used within a PartnerProvider\"\n    );\n  }\n  return context;\n};\n","/Users/shannoncoakley/Documents/mp/src/pages/index.tsx",["289"],[],"import { FC, lazy } from \"react\";\nimport { Outlet, RouteObject } from \"react-router-dom\";\n\nimport Loader from \"../components/layout/Loader\";\nimport DefaultLayout from \"../components/layout/Layout\";\n\nconst routes: RouteObject[] = [\n  {\n    Component: DefaultLayout,\n    loader: () => <Loader spinning />,\n    children: [\n      {\n        Component: lazy<FC>(() => import(\"./Login\")),\n        path: \"/\",\n        index: true,\n      },\n      {\n        Component: lazy<FC>(() => import(\"./Home\")),\n        path: \"/:clientId/home\",\n        index: true,\n      },\n      {\n        Component: lazy<FC>(() => import(\"./Meetings\")),\n        path: \"/:clientId/meetings\",\n        index: true,\n      },\n      {\n        Component: lazy<FC>(() => import(\"./Incentives\")),\n        path: \"/:clientId/incentives\",\n        index: true,\n      },\n      {\n        Component: lazy<FC>(() => import(\"./Profile\")),\n        path: \"/:clientId/profile\",\n        index: true,\n      },\n      {\n        Component: lazy<FC>(() => import(\"./Bonus\")),\n        path: \"/:clientId/bonus\",\n        index: true,\n      },\n      // {\n      //     Component: lazy<FC>(() => import(\"./Home\")),\n      //     path: \"/:clientId/\",\n      //     index: true,\n      // },\n    ],\n  },\n];\n\nexport default routes;\n","/Users/shannoncoakley/Documents/mp/src/getSalesForceData.ts",["290","291","292","293","294"],[],"import { useState, useEffect, useRef, useCallback } from \"react\";\nimport {\n  fetchDataFromSalesForce,\n  updateDataInSalesForce,\n} from \"./salesforceAuth\";\n\ntype Transformer<T, U> = (record: T) => U;\n\nexport function useSalesForceData<T, U>(\n  query: string,\n  transformer: Transformer<T, U>\n) {\n  const [data, setData] = useState<U[]>([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const salesForceData = await fetchDataFromSalesForce(query);\n        const transformedData = salesForceData.records.map(transformer);\n        setData(transformedData);\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    }\n    void fetchData();\n  }, []);\n\n  return data;\n}\n\ntype RecordType = {\n  Client_Id__c: string;\n};\n\nexport function useSalesForceDataWithTwoQueries<T, U>(\n  firstQuery: string,\n  secondQueryTemplate: string,\n  transformer: Transformer<T, U>\n) {\n  const [data, setData] = useState<U[]>([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const firstSalesForceData = await fetchDataFromSalesForce(firstQuery);\n\n        if (\n          firstSalesForceData &&\n          firstSalesForceData.records &&\n          firstSalesForceData.records.length > 0\n        ) {\n          const promises = firstSalesForceData.records.map(\n            async (record: RecordType) => {\n              const clientId = record.Client_Id__c;\n              const secondQuery = secondQueryTemplate.replace(\n                \"record.Client_Id__c\",\n                clientId\n              );\n\n              const secondSalesForceData = await fetchDataFromSalesForce(\n                secondQuery\n              );\n\n              return {\n                ...record,\n                ...(secondSalesForceData.records.length > 0\n                  ? secondSalesForceData.records[0]\n                  : {}),\n              };\n            }\n          );\n\n          const combinedRecords = await Promise.all(promises);\n\n          const transformedData = combinedRecords.map(transformer);\n          setData(transformedData);\n        } else {\n          console.warn(\"No records found in first request\");\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    }\n\n    void fetchData();\n  }, [firstQuery, secondQueryTemplate]);\n\n  return data;\n}\n\ntype SalesForcePartner = {\n  Id: string;\n  Client_Id__c?: string;\n  Account_ID__c?: string;\n  Member_Account_ID__c?: string;\n  Client_Name__c: string;\n  Account_Name_Merge_Only__c: string;\n  Quick_Overview__c: string;\n  Client_Website__c?: string;\n  Website?: string;\n  Rich_Merge__c?: string;\n  Stage_M__c?: string;\n  Stage_MP__c?: string;\n  Sweepstakes_Type__c?: string;\n  Client_Campaign_ID__c?: string;\n  Interest_in_Partner__c?: string;\n  RecordTypeId?: string;\n  Client_Campaign__c?: string;\n  Meeting_Source__c?: string;\n  Intro_Type__c?: string;\n  Request_Submitted_Date_M__c?: string;\n  Related_Membership__c: string;\n  Related_Membership_Member__c: string;\n  Survey_Option_Name__c: string[];\n};\n\nexport function useSalesForceDataWithThreeQueries<T, U>(\n  firstQuery: string,\n  secondQuery: string,\n  thirdQueryGenerator: (recordIds: string[]) => string,\n  transformer: (\n    primaryData: SalesForcePartner,\n    relatedData?: SalesForcePartner\n  ) => U\n): {\n  data: U[];\n  fetchData: () => void;\n} {\n  const [data, setData] = useState<U[]>([]);\n\n  const fetchData = useCallback(async () => {\n    try {\n      let allRecords: {\n        primaryData: SalesForcePartner;\n        relatedData?: SalesForcePartner;\n      }[] = [];\n\n      // Processing the first request\n      const firstSalesForceData = await fetchDataFromSalesForce(firstQuery);\n      if (firstSalesForceData && firstSalesForceData.records) {\n        firstSalesForceData.records.forEach((record: any) => {\n          allRecords.push({ primaryData: record });\n        });\n      }\n\n      // Processing the second request\n      const secondSalesForceData = await fetchDataFromSalesForce(secondQuery);\n      if (secondSalesForceData && secondSalesForceData.records) {\n        secondSalesForceData.records.forEach((record: any) => {\n          allRecords.push({ primaryData: record });\n        });\n      }\n\n      // Getting the ID for the third request only after the first two requests have completed\n      const recordIds = allRecords.map((record) => record.primaryData.Id);\n\n      // Processing the third request\n      const thirdQuery = thirdQueryGenerator(recordIds);\n      const thirdSalesForceData = await fetchDataFromSalesForce(thirdQuery);\n\n      for (const relatedRecord of thirdSalesForceData.records) {\n        const match = allRecords.find(\n          (record) => record.primaryData.Id === relatedRecord.Client_Name__c\n        );\n        if (match) {\n          // Changes to Survey_Option_Name__c processing logic\n          if (!match.relatedData) {\n            match.relatedData = {\n              ...relatedRecord,\n              Survey_Option_Name__c: Array.isArray(\n                relatedRecord.Survey_Option_Name__c\n              )\n                ? relatedRecord.Survey_Option_Name__c\n                : [relatedRecord.Survey_Option_Name__c],\n            };\n          } else {\n            match.relatedData.Survey_Option_Name__c = [\n              ...(match.relatedData.Survey_Option_Name__c || []),\n              ...(Array.isArray(relatedRecord.Survey_Option_Name__c)\n                ? relatedRecord.Survey_Option_Name__c\n                : [relatedRecord.Survey_Option_Name__c]),\n            ];\n          }\n        }\n      }\n\n      // Data Conversion\n      const transformedData = allRecords.map((record) =>\n        transformer(record.primaryData, record.relatedData)\n      );\n      setData(transformedData);\n    } catch (error) {\n      console.error(\"Failed to fetch data:\", error);\n    }\n  }, [firstQuery, secondQuery, thirdQueryGenerator, transformer]);\n\n  useEffect(() => {\n    void fetchData();\n  }, [fetchData]);\n\n  return {\n    data,\n    fetchData,\n  };\n}\n\nexport function usePartnerDetails(partnerKey: string | undefined) {\n  const [data, setData] = useState<null | any>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!partnerKey) return;\n    async function fetchData() {\n      setLoading(true);\n      try {\n        const response = await fetchDataFromSalesForce(\n          `query/?q=SELECT+Rich_Merge__c+FROM+Client_Pitch__c+WHERE+Active__c=true+AND+Custom_Outreach__c=true+AND+Client_Id__c='${partnerKey}'`\n        );\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching partner details:\", error);\n        setData(null);\n      } finally {\n        setLoading(false);\n      }\n    }\n    void fetchData();\n  }, [partnerKey]);\n  return { data, loading };\n}\n\ninterface ContactInfo {\n  Id: string;\n  Member__c: string;\n  Points_Balance__c: string;\n  Pending_Points__c: string;\n  Member_Survey_Link__c: string;\n  Non_Profit_Top_Choice__c?: string;\n  Charity_Name__c?: string;\n  MailingStreet?: string;\n  MailingCity?: string;\n  MailingState?: string;\n  MailingPostalCode?: string;\n  MailingCountry?: string;\n  Mailing_Address_Verified_Date__c?: string;\n  AccountId: string;\n  Partner_Referral_Link__c: string;\n  Shortened_PR_Link__c: string;\n  Email: string;\n}\n\nexport const getMemberInfoFromContact = async (\n  criteria: string\n): Promise<ContactInfo | null> => {\n  const endpoint = `query/?q=SELECT+Id,Member__c,Points_Balance__c,Pending_Points__c,Partner_Referral_Link__c,Shortened_PR_Link__c,Email,Member_Survey_Link__c,Non_Profit_Top_Choice__c,Mailing_Address_Verified_Date__c,MailingStreet,MailingCity,MailingState,MailingPostalCode,MailingCountry,Charity_Name__c,AccountId+FROM+Contact+WHERE+RecordTypeId='01236000000yGps'+AND+Id='${criteria}'`;\n\n  try {\n    const response = await fetchDataFromSalesForce(endpoint);\n    if (response && response.records && response.records.length > 0) {\n      const record = response.records[0];\n      return {\n        Id: record.Id,\n        Member__c: record.Member__c,\n        Pending_Points__c: record.Pending_Points__c,\n        Partner_Referral_Link__c: record.Partner_Referral_Link__c,\n        Points_Balance__c: record.Points_Balance__c,\n        Member_Survey_Link__c: record.Member_Survey_Link__c,\n        Non_Profit_Top_Choice__c: record.Non_Profit_Top_Choice__c,\n        Charity_Name__c: record.Charity_Name__c,\n        MailingStreet: record.MailingStreet,\n        MailingCity: record.MailingCity,\n        MailingState: record.MailingState,\n        MailingPostalCode: record.MailingPostalCode,\n        MailingCountry: record.MailingCountry,\n        Email: record.Email,\n        Mailing_Address_Verified_Date__c:\n          record.Mailing_Address_Verified_Date__c,\n        AccountId: record.AccountId,\n        Shortened_PR_Link__c: record.Shortened_PR_Link__c,\n      };\n    }\n    return null;\n  } catch (error) {\n    console.error(\"Error fetching Member Info:\", error);\n    throw error;\n  }\n};\n","/Users/shannoncoakley/Documents/mp/src/components/layout/Layout.tsx",["295","296"],[],"import { Layout } from \"antd\"\nimport { FC, PropsWithChildren, Suspense, useEffect } from \"react\"\nimport { Outlet, useLocation } from \"react-router-dom\"\nimport Header from \"./Header\";\nimport Loader from \"./Loader\";\nimport ClientIdManager from \"./ClientIdManager\";\n\nconst DefaultLayout: FC = () => {\n    const { pathname } = useLocation()\n    useEffect(() => {\n        window.scrollTo(0, 0)\n    }, [pathname])\n\n    return (\n        <Layout>\n            <ClientIdManager />\n            <Suspense fallback={<Loader spinning/>}>\n                <Outlet />\n            </Suspense>\n        </Layout>\n    )\n}\n\nexport default DefaultLayout\n","/Users/shannoncoakley/Documents/mp/src/components/layout/Loader.tsx",[],[],"/Users/shannoncoakley/Documents/mp/src/salesforceAuth.ts",["297","298","299","300"],[],"import axios from \"axios\";\nimport qs from \"qs\";\n\nconst CLIENT_ID =\n  \"3MVG9uudbyLbNPZNMgo7YG07X4w.bR5HADiTZbscSN3vFmxXWWQ0YPq2akjxE32VRCLhZsfZ8R0UmQ4mPVfkd\";\nconst CLIENT_SECRET =\n  \"64E366FD9060A3FDE31A7E15DC2F3FF41B28B6674720C0995EE5E4CB280859CD\";\nconst USERNAME = \"eugeniy@bncom.test\";\nconst PASSWORD = \"AD0819llANnnjbEd03a0K6nI387dSzTfm\";\nconst LOGIN_URL =\n  \"https://bncomtest-dev-ed.develop.my.salesforce.com/services/data/v58.0/\";\nconst REFRESH_TOKEN =\n  \"5Aep861QbHyftz0nI_frvZE7krnzpmXRZGEmK3oh6m3eon3ZQNv6suCmHQytjRybGZHJpPlsn.696N.ZHiWMxVM\";\nconst INITIAL_ACCESS_TOKEN =\n  \"00D36000000pFo4!AQcAQB.TsAThh5LGfnGkSK5Gu9CMlGVraIvL6yUd_lUexen2ZkAPL7YJj.k8n.d7q_x7rigTMAYKwIAsSi1G.aV3k53AaOrR\";\nconst SALESFORCE_API_BASE_URL =\n  \"https://mydogood.my.salesforce.com/services/data/v58.0/\";\nconst SALESFORCE_TOKEN_ENDPOINT =\n  \"https://mydogood.my.salesforce.com/services/oauth2/token\";\ninterface SalesforceAuthResponse {\n  access_token: string;\n}\n\nconst salesforceApi = axios.create({\n  baseURL: SALESFORCE_API_BASE_URL,\n  headers: {\n    Authorization: `Bearer ${INITIAL_ACCESS_TOKEN}`,\n  },\n});\n\nconst getNewAccessToken = async (): Promise<string> => {\n  try {\n    const response = await axios.post(\n      SALESFORCE_TOKEN_ENDPOINT,\n      qs.stringify({\n        grant_type: \"refresh_token\",\n        client_id: CLIENT_ID,\n        client_secret: CLIENT_SECRET,\n        refresh_token: REFRESH_TOKEN,\n      }),\n      {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n      }\n    );\n    return response.data.access_token;\n  } catch (error) {\n    console.error(\"Error refreshing Salesforce token:\", error);\n    throw error;\n  }\n};\n\nexport const fetchDataFromSalesForce = async (endpoint: string) => {\n  try {\n    const response = await salesforceApi.get(endpoint);\n    return response.data;\n  } catch (error) {\n    // Checking if the error is an object AxiosError\n    if (axios.isAxiosError(error)) {\n      if (error.response && error.response.status === 401) {\n        const newAccessToken = await getNewAccessToken();\n        salesforceApi.defaults.headers[\n          \"Authorization\"\n        ] = `Bearer ${newAccessToken}`;\n        const response = await salesforceApi.get(endpoint);\n        return response.data;\n      }\n      console.error(\"Error fetching data from SalesForce:\", error);\n    } else {\n      console.error(\"Unknown error occurred:\", error);\n    }\n    throw error;\n  }\n};\n\nexport const updateDataInSalesForce = async (endpoint: string, data: any) => {\n  try {\n    const response = await salesforceApi.patch(endpoint, data);\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      if (error.response && error.response.status === 401) {\n        const newAccessToken = await getNewAccessToken();\n        salesforceApi.defaults.headers[\n          \"Authorization\"\n        ] = `Bearer ${newAccessToken}`;\n        const response = await salesforceApi.patch(endpoint, data);\n        return response.data;\n      }\n      console.error(\"Error updating data in SalesForce:\", error);\n    } else {\n      console.error(\"Unknown error occurred:\", error);\n    }\n    throw error;\n  }\n};\n\nexport const createDataInSalesForce = async (endpoint: string, data: any) => {\n  try {\n    const response = await salesforceApi.post(endpoint, data);\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      if (error.response && error.response.status === 401) {\n        const newAccessToken = await getNewAccessToken();\n        salesforceApi.defaults.headers[\n          \"Authorization\"\n        ] = `Bearer ${newAccessToken}`;\n        const response = await salesforceApi.post(endpoint, data);\n        return response.data;\n      }\n      console.error(\"Error creating data in SalesForce:\", error);\n    } else {\n      console.error(\"Unknown error occurred:\", error);\n    }\n    throw error;\n  }\n};\n","/Users/shannoncoakley/Documents/mp/src/pages/Meetings/index.tsx",["301","302","303","304"],[],"import { FC } from \"react\"\nimport {useMediaQuery} from \"react-responsive\"\nimport Header from \"../../components/layout/Header\";\nimport {IncentivesProvider, PartnerContextProvider} from \"../../components/sections/homeSection/contexts/IncentivesContext\";\nimport styles from \"../Home/styles.module.sass\";\nimport MeetingsSection from \"../../components/sections/meetingsSection/MeetingsSection\";\n\n\nconst Meetings: FC = () => {\n    const isMobile = useMediaQuery({ maxWidth: 610 })\n    return (\n        <main style={{backgroundColor: '#FFFFFF'}}>\n            <Header/>\n            <MeetingsSection/>\n        </main>\n    )\n}\n\nexport default Meetings","/Users/shannoncoakley/Documents/mp/src/pages/Profile/index.tsx",["305"],[],"import { FC } from \"react\"\nimport {useMediaQuery} from \"react-responsive\"\nimport Header from \"../../components/layout/Header\";\nimport ProfileSection from \"../../components/sections/profileSection/ProfileSection\";\n\n\nconst Profile: FC = () => {\n    const isMobile = useMediaQuery({ maxWidth: 610 })\n    return (\n        <main style={{backgroundColor: '#FFFFFF', height: '100vh'}}>\n            <Header/>\n            <ProfileSection/>\n        </main>\n    )\n}\n\nexport default Profile","/Users/shannoncoakley/Documents/mp/src/pages/Home/index.tsx",["306","307"],[],"import { FC, useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Button, message, Modal } from \"antd\";\nimport { useParams } from \"react-router-dom\";\nimport { CopyOutlined } from \"@ant-design/icons\";\n\nimport Header from \"../../components/layout/Header\";\nimport PartnersSection from \"../../components/sections/homeSection/PartnersSection\";\nimport MatchesSection from \"../../components/sections/homeSection/MatchesSection\";\nimport OverviewSection from \"../../components/sections/homeSection/OverviewSection\";\nimport MobileHomeSections from \"../../components/sections/homeSection/mobile\";\nimport {\n  IncentivesProvider,\n  PartnerContextProvider,\n} from \"../../components/sections/homeSection/contexts/IncentivesContext\";\nimport styles from \"./styles.module.sass\";\nimport { getMemberInfoFromContact } from \"../../getSalesForceData\";\n\ninterface ContactInfo {\n  Id: string;\n  Member__c: string;\n  Points_Balance__c: string;\n  Pending_Points__c: string;\n  Member_Survey_Link__c: string;\n  Non_Profit_Top_Choice__c?: string;\n  Charity_Name__c?: string;\n  MailingStreet?: string;\n  MailingCity?: string;\n  MailingState?: string;\n  MailingPostalCode?: string;\n  MailingCountry?: string;\n  Mailing_Address_Verified_Date__c?: string;\n  AccountId: string;\n  Partner_Referral_Link__c: string;\n  Shortened_PR_Link__c: string;\n  Email: string;\n}\nconst Home: FC = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [contactData, setContactData] = useState<ContactInfo | null>(null);\n  const [messageApi, contextHolder] = message.useMessage();\n\n  const { clientId } = useParams<{ clientId: string }>();\n\n  const isMobile = useMediaQuery({ maxWidth: 610 });\n  const isTablet = useMediaQuery({ maxWidth: 1024 });\n\n  useEffect(() => {\n    if (!isMobile && !isTablet && !clientId) {\n      setIsModalOpen(true);\n    }\n    const getContactData = async () => {\n      try {\n        const memberId = await getMemberInfoFromContact(`${clientId}`);\n        setContactData(memberId);\n      } catch (error) {\n        console.error(\"Error fetching partner details:\", error);\n      }\n    };\n    getContactData();\n  }, [clientId, isMobile, isTablet]);\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const copyToClipboard = (text: string) => {\n    const textField = document.createElement(\"textarea\");\n    textField.innerText = text;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\");\n    textField.remove();\n    // alert(\"Link copied to clipboard!\");\n    messageApi.info(\"Link copied!\");\n  };\n\n  return (\n    <main style={{ backgroundColor: \"#FFFFFF\" }}>\n      <Modal\n        // title=\"Basic Modal\"\n        maskClosable={true}\n        centered={true}\n        width={\"665px\"}\n        footer={null}\n        style={{\n          height: \"75vh\",\n          overflow: \"auto\",\n        }}\n        open={isModalOpen}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        {contextHolder}\n        {contactData && (\n          <section>\n            <div>\n              <h3>Refer a new partner: 5,000 Points</h3>\n              <ol>\n                <li>\n                  Refer a vendor who is not a DoGood partner by sharing this\n                  link:&nbsp;\n                  <span>\n                    <a\n                      href={contactData.Shortened_PR_Link__c}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      Vendor Referral Link\n                    </a>{\" \"}\n                    <Button\n                      type=\"text\"\n                      onClick={() =>\n                        copyToClipboard(contactData.Shortened_PR_Link__c)\n                      }\n                      icon={<CopyOutlined />}\n                    ></Button>\n                  </span>\n                </li>\n                <li>\n                  If the vendor signs up as a new DoGood Partner, you will earn\n                  5,000 points.\n                </li>\n              </ol>\n              <p>\n                Many of our members will share their meeting request link with\n                vendors, who cold-email them and request that they ask to meet\n                via DoGood.\n              </p>\n            </div>\n            <div>\n              <h3>Refer a new member: 1,000 Points</h3>\n              <ol>\n                <li>\n                  Refer a new member to DoGood using this link:{\" \"}\n                  <span>\n                    <a\n                      href=\"https://join.mydogood.com/refer-a-member/\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      Member Referral Link\n                    </a>{\" \"}\n                    <Button\n                      type=\"text\"\n                      onClick={() =>\n                        copyToClipboard(\n                          \"https://join.mydogood.com/refer-a-member/\"\n                        )\n                      }\n                      icon={<CopyOutlined />}\n                    ></Button>\n                  </span>\n                </li>\n                <li>\n                  The member must meet the following criteria:\n                  <ol type=\"a\">\n                    <li>Director Level+</li>\n                    <li>IT, IT Security, Marketing, or HR leader</li>\n                    <li>\n                      Organization must have 1,000+ employees or $100M+ revenue\n                    </li>\n                  </ol>\n                </li>\n                <li>\n                  After the member completes their first meeting, you will earn\n                  1,000 points.{\" \"}\n                </li>\n              </ol>\n            </div>\n            <div>\n              <h3>Record a video testimonial: 500 points</h3>\n              <ol>\n                <li>\n                  Click&nbsp;\n                  <a\n                    href=\"https://vocalvideo.com/c/dogood\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    here\n                  </a>{\" \"}\n                  and record a video testimonial. Earn 500 points.\n                </li>\n              </ol>\n              <p>\n                *Members are limited to receiving points for this action once\n                every 12 months\n              </p>\n            </div>\n            <div>\n              <h3>Post your referral links on LinkedIn: 250 points</h3>\n              <ol>\n                <li>\n                  Post the below message on LinkedIn (you may edit the copy as\n                  needed)\n                </li>\n                <li>\n                  Send us a link to the post or share a screenshot. Earn 250\n                  points.{\" \"}\n                </li>\n              </ol>\n              <p>\n                *Members are limited to receiving points for this action once\n                every 3 months\n              </p>\n            </div>\n            <div>\n              <ul>\n                <li>\n                  Do you struggle to find ways to give back to the community\n                  besides simply monetary donations?\n                </li>\n                <li>\n                  Does your team get annoyed when you meet with vendors that are\n                  selling something new or innovative and drag them into\n                  considering alternative approaches that slow them down?\n                </li>\n                <li>\n                  If both of these things are true, consider joining this DoGood\n                  organization. They will send you a list of potential vendors\n                  to meet with, and you can simply peruse the list periodically\n                  with no pressure until you find one that interests you.\n                </li>\n                <li>\n                  Spend 30 minutes with them and they will donate to your\n                  favorite charity.\n                </li>\n                <li>\n                  If you are an IT, Marketing, or HR decision maker in your\n                  organization and decide to signup, please consider listing me\n                  ({contactData.Email}) as a referral and they will make an\n                  additional $25 donation to my favorite charity.\n                </li>\n                <li>\n                  Learn more here:{\" \"}\n                  <span>\n                    <a\n                      href=\"https://join.mydogood.com/refer-a-member/\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      join.mydogood.com/refer-a-member\n                    </a>{\" \"}\n                  </span>\n                </li>\n              </ul>\n            </div>\n          </section>\n        )}\n      </Modal>\n\n      <Header />\n\n      {isMobile ? (\n        <MobileHomeSections />\n      ) : (\n        <div className={styles.mainContainer}>\n          <PartnersSection />\n          <OverviewSection showModal={showModal} />\n          <MatchesSection />\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","/Users/shannoncoakley/Documents/mp/src/pages/Incentives/index.tsx",["308"],[],"import { FC, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Affix, Badge, Tabs } from \"antd\";\nimport { PlusCircleFilled, ShoppingCartOutlined } from \"@ant-design/icons\";\nimport { useIncentivesContext } from \"../../components/sections/homeSection/contexts/IncentivesContext\";\nimport Header from \"../../components/layout/Header\";\nimport SelectedIncentivesSection from \"../../components/sections/incentivesSection/SelectedIncentivesSection\";\nimport RedeemedIncentivesSection from \"../../components/sections/incentivesSection/RedeemedIncentivesSection\";\nimport CartSection from \"../../components/sections/incentivesSection/CartIncentivesSection\";\nimport styles from \"./styles.module.sass\";\n\n\nconst Incentives: FC = () => {\n\tconst incentiveContext = useIncentivesContext();\n\tconst cartItems = incentiveContext.cartItems || [];\n\tconst tabItems = [\n\t\t{ key: \"1\", tab: \"Available Incentives\", content: <SelectedIncentivesSection /> },\n\t\t{ key: \"2\", tab: \"Redeemed Incentives\", content: <RedeemedIncentivesSection /> },\n\t\t{\n\t\t\tkey: \"3\",\n\t\t\ttab: (\n\t\t\t\t<span className={styles.cartTab}>\n\t\t\t\t\t{\n\t\t\t\t\t\tcartItems.length > 0 ? (\n\t\t\t\t\t\t\t<Badge count={<PlusCircleFilled style={{ color: '#FAAA4D' }} />} offset={[0, 15]}>\n\t\t\t\t\t\t\t\t<ShoppingCartOutlined style={{ fontSize: '20px' }} />\n\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<ShoppingCartOutlined style={{ fontSize: '20px' }} />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</span>\n\t\t\t),\n\t\t\tcontent: <CartSection />,\n\t\t  },\n\t];\n\tconst [activeTab, setActiveTab] = useState<string>(\"1\")\n\n\tconst handleTabChange = (key: string) => {\n\t\tsetActiveTab(key);\n\t};\n\n\treturn (\n\t\t<main style={{ backgroundColor: '#FFFFFF' }}>\n\t\t\t<Header />\n\t\t\t<Affix offsetTop={0}>\n\t\t\t\t<section className={styles.tabsContainer}>\n\t\t\t\t\t<Tabs\n\t\t\t\t\t\tdefaultActiveKey=\"1\"\n\t\t\t\t\t\tonChange={handleTabChange}\n\t\t\t\t\t\ttabBarStyle={{\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\tbackgroundColor: '#FFFFFF',\n\t\t\t\t\t\t\tmarginLeft: '3%',\n\t\t\t\t\t\t\ttextTransform: 'uppercase',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{tabItems.map((item) => (\n\t\t\t\t\t\t\t<Tabs.TabPane key={item.key} tab={item.tab} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Tabs>\n\t\t\t\t</section>\n\t\t\t</Affix>\n\t\t\t<section className={styles.mainContainer}>\n\t\t\t\t<div className={styles.scrollableContent}>\n\t\t\t\t\t{tabItems.map((item) => (\n\t\t\t\t\t\t<div key={item.key} className={styles.tabContent} style={{ display: item.key === activeTab ? 'block' : 'none' }}>\n\t\t\t\t\t\t\t{item.content}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</main>\n\t)\n}\n\nexport default Incentives\n","/Users/shannoncoakley/Documents/mp/src/pages/Bonus/index.tsx",[],[],"/Users/shannoncoakley/Documents/mp/src/pages/Login/index.tsx",["309"],[],"import { FC } from \"react\"\nimport Logo from \"../../components/logo/index\"\nimport Login from \"../../components/login/Login\";\n\n\nconst LoginPage: FC = () => {\n    return (\n        <Login/>\n    )\n}\n\n\n\nexport default LoginPage ;","/Users/shannoncoakley/Documents/mp/src/components/layout/ClientIdManager.tsx",["310","311","312"],[],"\nimport React, { FC, useEffect } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\n\nconst ClientIdManager: FC = () => {\n    const { clientId } = useParams<{ clientId: string }>();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    useEffect(() => {\n\n        if (clientId && (clientId.length < 15 || clientId.length > 18)) {\n            navigate('/', { replace: true });\n        }\n    }, [clientId]);\n    return null;\n};\n\nexport default ClientIdManager;\n","/Users/shannoncoakley/Documents/mp/src/components/layout/Header.tsx",["313","314"],[],"import { Menu } from \"antd\";\nimport React, { FC, useState } from \"react\";\nimport { NavLink, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport type { MenuProps } from \"antd\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport BurgerMenu from \"./BurgerMenu\";\nimport Logo from \"../logo/index\";\nimport styles from \"./style.module.sass\";\n\ntype MenuItem = Required<MenuProps>[\"items\"][number];\n\nfunction getItem(\n  label: React.ReactNode,\n  key: React.Key,\n  icon?: React.ReactNode\n): MenuItem {\n  return { key, icon, label } as MenuItem;\n}\n\nconst Header: FC = () => {\n  const location = useLocation();\n  const isMobile = useMediaQuery({ maxWidth: 610 });\n  const { clientId } = useParams<{ clientId: string }>();\n\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"clientId\");\n    navigate(\"/\");\n  };\n\n  const itemsMenu = [\n    { label: \"Home\", path: `/${clientId}/home` },\n    { label: \"Meetings\", path: `/${clientId}/meetings` },\n    { label: \"Incentives\", path: `/${clientId}/incentives` },\n    { label: \"Profile\", path: `/${clientId}/profile` },\n  ];\n\n  return (\n    <header className={styles.header}>\n      <div>\n        <Logo />\n      </div>\n      {isMobile ? (\n        <BurgerMenu />\n      ) : (\n        <Menu\n          mode=\"horizontal\"\n          selectedKeys={[location.pathname]}\n          className={styles.menu}\n        >\n          {itemsMenu.map((item) => (\n            <Menu.Item key={item.path}>\n              <NavLink to={item.path}>{item.label}</NavLink>\n            </Menu.Item>\n          ))}\n          <Menu.Item key=\"/logout\" onClick={handleLogout}>\n            Log Out\n          </Menu.Item>\n        </Menu>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/PartnersSection.tsx",["315","316","317","318","319","320","321","322","323","324","325","326"],[],"import { FC, useContext, useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\";\nimport type { TableProps } from \"antd\";\nimport { Space, Table, Drawer, Pagination, Spin } from \"antd\";\nimport type {\n  ColumnsType,\n  FilterValue,\n  SorterResult,\n} from \"antd/es/table/interface\";\nimport {\n  GetIncentiveDataType,\n  useGetPartnersAndIncentivesContext,\n  usePartnerContext,\n} from \"./contexts/IncentivesContext\";\nimport PartnerDrawer from \"./PartnerDrawer\";\nimport PartnerModal from \"./PartnerModal\";\nimport styles from \"./styles.module.sass\";\nimport { ReactComponent as Filter } from \"../../../images/svgIcons/filter.svg\";\nimport { ReactComponent as AcceptIcon } from \"../../../images/svgIcons/acceptIcon.svg\";\nimport { ReactComponent as DeclineIcon } from \"../../../images/svgIcons/declineIcon.svg\";\nimport { ReactComponent as ProgressIcon } from \"../../../images/svgIcons/progressIcon.svg\";\nimport { ReactComponent as DefaultIcon } from \"../../../images/svgIcons/defaultIcon.svg\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  usePartnerDetails,\n  useSalesForceData,\n  useSalesForceDataWithThreeQueries,\n  useSalesForceDataWithTwoQueries,\n} from \"../../../getSalesForceData\";\nimport { fetchDataFromSalesForce } from \"../../../salesforceAuth\";\n\ninterface PartnersDataType {\n  key: string;\n  partnerName: string;\n  clientKey?: string;\n  overview: string;\n  hasRequested: boolean;\n  website?: string;\n  richMerge?: string;\n  surveyOptionName?: string[];\n  Stage_M__c?: string;\n  Stage_MP__c?: string;\n  Sweepstakes_Type__c?: string;\n  Client_Campaign_ID__c?: string;\n  Interest_in_Partner__c?: string;\n  RecordTypeId?: string;\n  Client_Campaign__c?: string;\n  Meeting_Source__c?: string;\n  Intro_Type__c?: string;\n  Request_Submitted_Date_M__c?: string;\n  Related_Membership__c: string;\n  Related_Membership_Member__c: string;\n  Survey_Option_Name__c: string[];\n  filterCategory?: string[];\n  Client_Logo__c?: string;\n  Client_Decline_Reason__c?: string;\n}\n\ninterface SalesForcePartner {\n  Id: string;\n  Client_Id__c?: string;\n  Account_ID__c?: string;\n  Client_Name__c: string;\n  Account_Name_Merge_Only__c: string;\n  Quick_Overview__c: string;\n  Client_Website__c?: string;\n  Website?: string;\n  Rich_Merge__c?: string;\n  Stage_M__c?: string;\n  Stage_MP__c?: string;\n  Sweepstakes_Type__c?: string;\n  Client_Campaign_ID__c?: string;\n  Interest_in_Partner__c?: string;\n  RecordTypeId?: string;\n  Client_Campaign__c?: string;\n  Meeting_Source__c?: string;\n  Intro_Type__c?: string;\n  Request_Submitted_Date_M__c?: string;\n  Related_Membership__c: string;\n  Related_Membership_Member__c: string;\n  Survey_Option_Name__c: string[];\n  Client_Logo__c?: string;\n}\n\nconst QUERY1 = (clientId: string | undefined) =>\n  `query/?q=SELECT+Id,Client_Id__c,Client_Name__c,Related_Membership_Member__c,Quick_Overview__c,Client_Website__c,Client_Logo__c,Stage_M__c,Stage_MP__c,Sweepstakes_Type__c+FROM+Meeting__c+WHERE+Stage_M__c='Request+Queued'+AND+MemberC__c='${clientId}'`;\nconst QUERY2 = `query/?q=SELECT+Id,Account_ID__c,Related_Membership__c,Account_Name_Merge_Only__c,Website,Client_Logo__c,Quick_Overview__c,Client_Campaign_ID__c+FROM+Account+WHERE+RecordTypeId='01236000000OodE'+AND+(Client_Campaign_Status__c='Active'+OR+Client_Campaign_Status__c='Testing')`;\nconst QUERY3 = (recordIds: string[]) =>\n  `query/?q=SELECT+Client_Name__c,Survey_Option_Name__c+FROM+Survey__c+WHERE+Client_Name__c+IN+(${recordIds\n    .map((id) => `'${id}'`)\n    .join(\",\")})`;\nconst transformer = (primaryData: SalesForcePartner, relatedData?: any) => {\n  const surveyOptions = Array.isArray(relatedData?.Survey_Option_Name__c)\n    ? relatedData.Survey_Option_Name__c\n    : Array.isArray(relatedData?.Survey_Option_Name__c)\n    ? [relatedData.Survey_Option_Name__c]\n    : [];\n\n  return {\n    key: primaryData.Id,\n    clientKey: primaryData.Client_Id__c || primaryData.Account_ID__c,\n    website: primaryData.Client_Website__c || primaryData.Website,\n    partnerName:\n      primaryData.Client_Name__c || primaryData.Account_Name_Merge_Only__c,\n    overview: primaryData.Quick_Overview__c || \"No quick overview\",\n    hasRequested: primaryData.Stage_M__c === \"Request Queued\",\n    richMerge: primaryData.Rich_Merge__c,\n    Survey_Option_Name__c: surveyOptions,\n    Stage_M__c: primaryData.Stage_M__c || \"\",\n    Stage_MP__c: primaryData.Stage_MP__c || \"\",\n    Sweepstakes_Type__c: primaryData.Sweepstakes_Type__c || \"\",\n    Client_Campaign_ID__c: primaryData.Client_Campaign_ID__c,\n    Related_Membership__c: primaryData.Related_Membership__c,\n    Related_Membership_Member__c: primaryData.Related_Membership_Member__c,\n    Client_Logo__c: primaryData.Client_Logo__c,\n  };\n};\ntype MeetingRecord = {\n  Client_Id__c: string;\n};\ntype Transformer<T, U> = (input: T) => U;\nconst QUERY_REQUESTED_MEETINGS = (clientId: string | undefined) =>\n  `query/?q=SELECT+Client_Id__c+FROM+Meeting__c+WHERE+Stage_M__c!='Request Queued'+AND+MemberC__c='${clientId}'`;\n\nconst clientIDTransformer: Transformer<MeetingRecord, string> = (\n  record: MeetingRecord\n) => record.Client_Id__c;\n\nconst PartnersSection: FC = () => {\n  const [filteredInfo, setFilteredInfo] = useState<\n    Record<string, FilterValue | null>\n  >({});\n  const [sortedInfo, setSortedInfo] = useState<SorterResult<PartnersDataType>>(\n    {}\n  );\n  const [open, setOpen] = useState(false);\n  const [selectedPartner, setSelectedPartner] =\n    useState<PartnersDataType | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [viewOnlyRequested, setViewOnlyRequested] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  const [loadingPartnerDetails, setLoadingPartnerDetails] = useState(false);\n  const [appliedViewOnlyRequested, setAppliedViewOnlyRequested] =\n    useState(true);\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n  const {\n    requestedList,\n    declinedList,\n    acceptedList,\n    savedAcceptedList,\n    setSavedAcceptedList,\n  } = usePartnerContext();\n  const { incentiveFromSalesForce } = useGetPartnersAndIncentivesContext();\n  const { clientId } = useParams<{ clientId: string }>();\n\n  const { data: partnersFromSalesForce, fetchData } =\n    useSalesForceDataWithThreeQueries(\n      QUERY1(clientId),\n      QUERY2,\n      QUERY3,\n      transformer\n    );\n\n  const requestedClientIDs = useSalesForceData(\n    QUERY_REQUESTED_MEETINGS(clientId),\n    clientIDTransformer\n  );\n\n  useEffect(() => {\n    if (partnersFromSalesForce && partnersFromSalesForce.length > 0) {\n      const filteredPartners = partnersFromSalesForce.filter(\n        (partner, index, self) => {\n          return (\n            self.findIndex((p) => p.clientKey === partner.clientKey) === index\n          );\n        }\n      );\n      setSavedAcceptedList(filteredPartners);\n    }\n  }, [partnersFromSalesForce]);\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  const showDrawer = async (partner: PartnersDataType) => {\n    setSelectedPartner(partner);\n    setLoadingPartnerDetails(true);\n    try {\n      const response = await fetchDataFromSalesForce(\n        `query/?q=SELECT+Rich_Merge__c+FROM+Client_Pitch__c+WHERE+Active__c=true+AND+Custom_Outreach__c=true+AND+(Client_Id__c='${partner.clientKey}'+OR+Client_Id__c='${partner.key}')`\n      );\n      if (\n        response &&\n        response.records &&\n        response.records[0] &&\n        response.records[0].Rich_Merge__c\n      ) {\n        setSelectedPartner((prev) => ({\n          ...prev!,\n          richMerge: response.records[0].Rich_Merge__c,\n        }));\n      } else {\n        console.error(\"Invalid data format:\", response);\n      }\n    } catch (error) {\n      console.error(\"Error fetching partner details:\", error);\n    } finally {\n      setLoadingPartnerDetails(false);\n    }\n\n    setOpen(true);\n  };\n\n  const onCloseDrawer = () => {\n    setSelectedPartner(null);\n    setOpen(false);\n    setTimeout(() => {\n      fetchData();\n    }, 5000);\n  };\n\n  const handleChangePage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const getPartnerStatus = (partner: PartnersDataType) => {\n    if (acceptedList.some((item) => item.key === partner.key)) {\n      return \"accepted\";\n    } else if (requestedList.some((item) => item.key === partner.key)) {\n      return \"requested\";\n    } else if (declinedList.some((item) => item.key === partner.key)) {\n      return \"declined\";\n    }\n    return \"\";\n  };\n\n  const handleChange: TableProps<PartnersDataType>[\"onChange\"] = (\n    pagination,\n    filters,\n    sorter\n  ) => {\n    console.log(\"Various parameters\", pagination, filters, sorter);\n    setFilteredInfo(filters);\n    setSortedInfo(sorter as SorterResult<PartnersDataType>);\n  };\n\n  const handleViewOnlyRequestedChange = (checked: boolean) => {\n    setCurrentPage(1);\n    setViewOnlyRequested(checked);\n  };\n\n  const handleApply = (\n    value: string,\n    viewOnlyRequested: boolean,\n    selectedCategories: string[]\n  ) => {\n    setSearchValue(value);\n    setAppliedViewOnlyRequested(viewOnlyRequested);\n    setSelectedCategories(selectedCategories);\n    handleOk();\n  };\n\n  const filteredData = useMemo(() => {\n    let filtered = [...savedAcceptedList]; // Клонировать массив, чтобы избежать мутации\n\n    if (searchValue) {\n      filtered = filtered.filter(\n        (partner) =>\n          partner.partnerName\n            .toLowerCase()\n            .includes(searchValue.toLowerCase()) ||\n          partner.overview.toLowerCase().includes(searchValue.toLowerCase())\n      );\n    }\n\n    if (selectedCategories.length) {\n      filtered = filtered\n        .map((partner) => {\n          const matchingCategories = selectedCategories.filter((category) =>\n            partner.Survey_Option_Name__c?.some((option) => option === category)\n          );\n\n          if (matchingCategories.length) {\n            return {\n              ...partner,\n              filterCategory: matchingCategories,\n            };\n          }\n          return partner;\n        })\n        .filter(\n          (partner) => partner.filterCategory && partner.filterCategory.length\n        );\n    }\n\n    if (requestedClientIDs && requestedClientIDs.length > 0) {\n      filtered = filtered.filter(\n        (partner) =>\n          partner.clientKey && !requestedClientIDs.includes(partner.clientKey)\n      );\n    }\n\n    if (appliedViewOnlyRequested) {\n      filtered = filtered.filter((item) => item.hasRequested);\n    }\n\n    return filtered;\n  }, [\n    savedAcceptedList,\n    searchValue,\n    appliedViewOnlyRequested,\n    selectedCategories,\n    requestedClientIDs,\n  ]);\n\n  const sortedData = useMemo(() => {\n    if (sortedInfo && sortedInfo.columnKey === \"name\") {\n      if (sortedInfo.order === \"ascend\") {\n        return [...filteredData].sort((a, b) =>\n          a.partnerName.localeCompare(b.partnerName)\n        );\n      } else if (sortedInfo.order === \"descend\") {\n        return [...filteredData].sort((a, b) =>\n          b.partnerName.localeCompare(a.partnerName)\n        );\n      }\n    }\n    return filteredData; // Если sortedInfo.order не 'ascend' или 'descend', возвращаем исходные данные\n  }, [filteredData, sortedInfo]);\n\n  const startIndex = (currentPage - 1) * 10;\n  const endIndex = startIndex + 10;\n  const paginatedData = sortedData\n    ? sortedData.slice(startIndex, endIndex)\n    : [];\n\n  const columns: ColumnsType<PartnersDataType> = [\n    {\n      title: \"NAME\",\n      dataIndex: \"partnerName\",\n      key: \"name\",\n      filteredValue: filteredInfo.partnerName || null,\n      onFilter: (value, record) =>\n        record.partnerName.includes(value.toString()),\n      sorter: (a, b) => a.partnerName.localeCompare(b.partnerName),\n      sortOrder: sortedInfo.columnKey === \"name\" ? sortedInfo.order : null,\n      render: (text, record) => {\n        const displayText =\n          record.hasRequested && record.partnerName\n            ? record.partnerName.slice(0)\n            : text;\n        const partnerStatus = getPartnerStatus(record);\n\n        return (\n          <div className={styles.partnersNameContainer}>\n            <span className={styles.partnersName}>\n              {partnerStatus === \"requested\" ? (\n                <ProgressIcon className={styles.statusIcon} />\n              ) : partnerStatus === \"accepted\" ? (\n                <AcceptIcon className={styles.statusIcon} />\n              ) : partnerStatus === \"declined\" ? (\n                <DeclineIcon className={styles.statusIcon} />\n              ) : (\n                <DefaultIcon className={styles.statusIcon} />\n              )}\n              {displayText}\n            </span>\n            {record.hasRequested && (\n              <span className={styles.orangeStar}> ★</span>\n            )}\n          </div>\n        );\n      },\n    },\n    {\n      title: \"Quick Overview\",\n      dataIndex: \"overview\",\n      key: \"overview\",\n      width: \"65%\",\n      render: (text, record) => {\n        const partnerStatus = getPartnerStatus(record);\n        return <span>{text}</span>;\n      },\n    },\n  ];\n\n  return (\n    <section className={styles.partnersContainer}>\n      <PartnerModal\n        isModalOpen={isModalOpen}\n        onShowModal={showModal}\n        onOk={handleOk}\n        OnCancel={handleCancel}\n        onViewOnlyRequestedChange={handleViewOnlyRequestedChange}\n        onApply={handleApply}\n      />\n      <div className={styles.partnersTitleContainer}>\n        <div className={styles.partnersTitle}>\n          <h2>Partners</h2>\n          <small>Click a partner name below for more information</small>\n        </div>\n        <button onClick={showModal} className={styles.filterBtn}>\n          {\" \"}\n          <Filter /> Filter\n        </button>\n      </div>\n      <Space style={{ marginBottom: 16 }}></Space>\n      <Table\n        onRow={(record) => ({\n          onClick: () => showDrawer(record),\n        })}\n        columns={columns}\n        pagination={false}\n        dataSource={paginatedData}\n        onChange={handleChange}\n        className={styles.table}\n      />\n      <Pagination\n        showSizeChanger={false}\n        defaultPageSize={10}\n        className={styles.paginationPartners}\n        defaultCurrent={currentPage}\n        total={filteredData.length}\n        onChange={handleChangePage}\n      />\n      <small className={styles.requested}>\n        Partners who have requested to meet with you.\n      </small>\n      <PartnerDrawer\n        isOpen={open}\n        onClose={onCloseDrawer}\n        partnerDetails={selectedPartner}\n      />\n    </section>\n  );\n};\n\nexport default PartnersSection;\n","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/OverviewSection.tsx",["327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367"],[],"import { FC, useState, useEffect, useContext } from \"react\";\nimport { List, message } from \"antd\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport {\n  useIncentivesContext,\n  usePartnerContext,\n} from \"./contexts/IncentivesContext\";\nimport styles from \"./styles.module.sass\";\nimport { ReactComponent as DeleteIcon } from \"../../../images/svgIcons/deleteIcon.svg\";\nimport {\n  createDataInSalesForce,\n  fetchDataFromSalesForce,\n  updateDataInSalesForce,\n} from \"../../../salesforceAuth\";\nimport { getMemberInfoFromContact } from \"../../../getSalesForceData\";\n\ninterface DataType {\n  key: string;\n  incentive: string;\n  moreInfo: string | JSX.Element;\n  meetingsRequired: number;\n}\n\nconst NumberWithCommas = (x: number) => {\n  return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n\ninterface OverviewProps {\n  showModal: () => void;\n}\n\nconst OverviewSection: FC<OverviewProps> = ({ showModal }) => {\n  const {\n    selectedIncentives,\n    removeSelectedIncentive,\n    totalMeetingsRequired,\n    incentiveCounts,\n    setSelectedIncentives,\n    setIncentiveCounts,\n    savedIncentiveCounts,\n    setSavedIncentiveCounts,\n    savedSelectedIncentives,\n    setSavedSelectedIncentives,\n  } = useIncentivesContext();\n  const {\n    acceptedList,\n    requestedList,\n    declinedList,\n    removeAcceptedPartner,\n    removeRequestedPartner,\n    removeDeclinePartner,\n    setSavedAcceptedList,\n    setSavedRequestedList,\n    setSavedDeclinedList,\n    setAcceptedList,\n    setDeclinedList,\n    setRequestedList,\n    savedAcceptedList,\n  } = usePartnerContext();\n  const partnerContext = usePartnerContext();\n  const incentivesContext = useIncentivesContext();\n  const { clientId } = useParams<{ clientId: string }>();\n  const [contact, setContact] = useState<any>();\n  const [pendingMeetings, setPendingMeetings] = useState([]);\n  const navigate = useNavigate();\n\n  const isMobile = useMediaQuery({ maxWidth: 610 });\n  const isTablet = useMediaQuery({ maxWidth: 1024 });\n\n  const handleBeforeUnload = (e: BeforeUnloadEvent) => {\n    if (\n      acceptedList.length > 0 ||\n      requestedList.length > 0 ||\n      declinedList.length > 0\n    ) {\n      e.preventDefault();\n      e.returnValue = \"Unsaved changes will be lost.\";\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    getMemberInfoFromContact(`${clientId}`).then((res) => {\n      setContact(res);\n    });\n\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [acceptedList, requestedList, declinedList]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // Запрашиваем данные из Salesforce. В вашем случае, это данные о партнерах.\n        const salesForceData = await fetchDataFromSalesForce(\n          `query/?q=SELECT+Id,Client_Name__c,Stage_MP__c,DQ_Partner__c,DQ_Question__c+FROM+Meeting__c+WHERE+(Stage_MP__c!=\\'N/A\\'+AND+Stage_MP__c!=\\'Canceled by Client\\'+AND+Stage_MP__c!=\\'Canceled by Member\\'+AND+Stage_MP__c!=\\'Meeting Completed\\')+AND+MemberC__c='${clientId}'`\n        );\n        const transformedData = salesForceData.records.map((record: any) => ({\n          key: record.Id,\n          partnerName: record.Client_Name__c,\n          stage: record.Stage_MP__c || \"\",\n          incentive: record.Incentive_Copy1__c || \"\",\n          meetingDate: record.Meeting_Date_M__c || \"\",\n          scheduleMeeting: record.Stage_M__c,\n          calendarLink: record.CMT_Calendar_Link__c,\n          showFeedbackLink:\n            record.Member_Feedback_Date__c === null &&\n            record.Meeting_Date_M__c &&\n            new Date(record.Meeting_Date_M__c) <= new Date(),\n          memberFeedbackDate: record.Member_Feedback_Date__c,\n          memberFeedbackLink: record.Member_Feedback_Link__c,\n          meetingCompletedDate: record.Meeting_Completed_Date__c,\n        }));\n        setPendingMeetings(transformedData);\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    }\n\n    void fetchData();\n  }, []);\n\n  const updatedSavedAcceptedList = savedAcceptedList.filter(\n    (partner) =>\n      !acceptedList.some(\n        (acceptedPartner) => acceptedPartner.key === partner.key\n      ) &&\n      !declinedList.some(\n        (declinedPartner) => declinedPartner.key === partner.key\n      ) &&\n      !requestedList.some(\n        (requestedPartner) => requestedPartner.key === partner.key\n      )\n  );\n\n  return (\n    <section className={styles.overviewContainer}>\n      <h2>Your Points</h2>\n      <div className={styles.yourPointsContainer}>\n        <div className={styles.yourPointsRow}>\n          <h3>\n            Points Balance: {NumberWithCommas(contact?.Points_Balance__c)}\n          </h3>\n        </div>\n        <div className={styles.yourPointsRow}>\n          <h3>\n            Pending Points: {NumberWithCommas(contact?.Pending_Points__c)}\n          </h3>\n        </div>\n        <button\n          className={styles.submitBtn}\n          onClick={() => {\n            navigate(`/${clientId}/incentives`);\n          }}\n        >\n          Redeem Points/View Incentives\n        </button>\n      </div>\n\n      <h2>Pending Meetings</h2>\n      <div className={styles.yourPointsContainer}>\n        {pendingMeetings.length == 0 && <p>No Pending Meeting</p>}\n        {pendingMeetings.map((meeting: any) => (\n          <div className={styles.yourPointsRow}>\n            <h3>\n              {meeting.partnerName}: {meeting.stage}\n            </h3>\n          </div>\n        ))}\n      </div>\n      {isTablet ? (\n        <></>\n      ) : (\n        <div\n          className={styles.yourPendingMeetingsContainer}\n          onClick={showModal}\n        >\n          <p className={styles.yellowParagraph}>\n            Want to earn up to 5,000 bonus points? Click here!\n          </p>\n        </div>\n      )}\n      {/* <h4>Pending Accepted Meetings</h4>\n\t\t\t<List\n\t\t\t\tsize=\"small\"\n\t\t\t\tbordered={false}\n\t\t\t\tsplit={false}\n\t\t\t\tdataSource={acceptedList}\n\t\t\t\trenderItem={(item) => <List.Item className={styles.listItem}>{item.partnerName} <DeleteIcon onClick={() => removeAcceptedPartner(item)} className={styles.deleteIcon} /></List.Item>}\n\n\t\t\t/>\n\t\t\t<h4>Pending Requested Meetings</h4>\n\t\t\t<List\n\t\t\t\tsize=\"small\"\n\t\t\t\tbordered={false}\n\t\t\t\tsplit={false}\n\t\t\t\tdataSource={requestedList}\n\t\t\t\trenderItem={(item) => <List.Item className={styles.listItem}>{item.partnerName} <DeleteIcon onClick={() => removeRequestedPartner(item)} className={styles.deleteIcon} /></List.Item>}\n\n\t\t\t/>\n\t\t\t<h4>Declined Meetings</h4>\n\t\t\t<List\n\t\t\t\tsize=\"small\"\n\t\t\t\tbordered={false}\n\t\t\t\tsplit={false}\n\t\t\t\tdataSource={declinedList}\n\t\t\t\trenderItem={(item) => <List.Item className={styles.listItem}>{item.partnerName} <DeleteIcon onClick={() => removeDeclinePartner(item)} className={styles.deleteIcon} /></List.Item>}\n\n\t\t\t/>\n\t\t\t<h4>Selected Incentives & Quantities</h4>\n\t\t\t<List\n\t\t\t\tsize={'small'}\n\t\t\t\tstyle={{ minHeight: '120px' }}\n\t\t\t\tbordered={false}\n\t\t\t\tsplit={false}\n\t\t\t\tdataSource={selectedIncentives}\n\t\t\t\trenderItem={(item) => <List.Item className={`${styles.listItem} lastListItem`}>{item.incentive} ({incentiveCounts[item.key] || 0})<DeleteIcon className={styles.deleteIcon} onClick={() => removeSelectedIncentive(item.key)} /></List.Item>}\n\t\t\t/>\n\t\t\t<ul className={styles.totalList}>\n\t\t\t\t<li className={styles.totalListItem}>\n\t\t\t\t\t<p>Total Meetings Required</p>\n\t\t\t\t\t{totalMeetingsRequired}\n\t\t\t\t</li>\n\t\t\t\t<li className={styles.totalListItem}>\n\t\t\t\t\t<p>Your Pending Meetings</p>\n\t\t\t\t\t{acceptedList.length}\n\t\t\t\t</li>\n\t\t\t\t<li className={styles.totalListItem}>\n\t\t\t\t\t{totalMeetingsRequired - acceptedList.length >= 1 && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p>Meetings You Need To Add</p>\n\t\t\t\t\t\t\t{totalMeetingsRequired - acceptedList.length}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t{contextHolder}\n\t\t\t<button className={styles.submitBtn} onClick={() => {\n\t\t\t\tincentivesContext.setSubmitConfirmed(true);\n\t\t\t\tpartnerContext.setSubmitConfirmed(true)\n\t\t\t\tupdatePartnersInSalesForce();\n\t\t\t\tsetSavedAcceptedList(updatedSavedAcceptedList);\n\t\t\t\tsetAcceptedList([]);\n\t\t\t\tsetDeclinedList([]);\n\t\t\t\tsetRequestedList([]);\n\t\t\t\tsetIncentiveCounts({})\n\t\t\t\tsetSelectedIncentives([])\n\t\t\t}}>Submit and Confirm Meetings</button> */}\n    </section>\n  );\n};\nexport default OverviewSection;\n","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/MatchesSection.tsx",["368","369","370","371","372","373","374"],[],"import React, { FC, useEffect, useState } from 'react';\nimport { Space, Table, Pagination, Menu, Checkbox } from 'antd';\nimport type { ColumnsType, SorterResult } from 'antd/es/table/interface';\nimport { useGetPartnersAndIncentivesContext, useIncentivesContext, GetIncentiveDataType } from \"./contexts/IncentivesContext\";\nimport styles from './styles.module.sass'\nimport { fetchDataFromSalesForce } from '../../../salesforceAuth';\nimport { useParams } from 'react-router-dom';\nimport { getMemberInfoFromContact } from '../../../getSalesForceData';\nimport Link from 'antd/es/typography/Link';\nimport MatchPartnerDrawer, { MatchPartnersDataType } from './MatchPartnerDrawer';\n\n\nconst MatchesSection: FC = () => {\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [sortedInfo, setSortedInfo] = useState<SorterResult<GetIncentiveDataType>>({\n\t\tcolumnKey: 'incentive',\n\t\torder: 'ascend'\n\t});\n\tconst { addSelectedIncentive } = useIncentivesContext();\n\tconst { incentiveFromSalesForce } = useGetPartnersAndIncentivesContext();\n\tconst [activeCheckboxes, setActiveCheckboxes] = useState<string[]>(['All']);\n\tconst [data, setData] = useState<MatchPartnersDataType[]>([]);\n\tconst { clientId } = useParams<{ clientId: string }>();\n\tconst [matchData, setMatchData] = useState([])\n\tconst [suveryLink, setSurveyLink] = useState<string>();\n\tconst [richMerge, setRichMerge] = useState('');\n\tconst [selectedPartner, setSelectedPartner] = useState<MatchPartnersDataType | null>(null);\n\tconst [open, setOpen] = useState(false);\n\n\tconst menuValues = Array.from(new Set(incentiveFromSalesForce.map(item => item.Product_Type__c)));\n\tconst menuItems = ['All', ...menuValues];\n\tconst menu = (\n\t\t<Menu style={{ maxHeight: '250px', overflowY: 'auto' }}>\n\t\t\t{menuItems.map((item, index) => (\n\t\t\t\t<Menu.Item key={index}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tchecked={activeCheckboxes.includes(item)}\n\t\t\t\t\t\tonClick={(e) => handleFilterChange(e, item)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{item}\n\t\t\t\t\t</Checkbox>\n\t\t\t\t</Menu.Item>\n\t\t\t))}\n\t\t</Menu>\n\t);\n\n\tconst handleFilterChange = (event: React.MouseEvent, category: string) => {\n\t\tevent.stopPropagation(); // Останавливаем распространение события\n\n\t\tlet updatedCheckboxes = [...activeCheckboxes];\n\n\t\tif (category === 'All') {\n\t\t\tupdatedCheckboxes = ['All'];\n\t\t} else {\n\t\t\tif (updatedCheckboxes.includes('All')) {\n\t\t\t\tupdatedCheckboxes = [];\n\t\t\t}\n\t\t\tif (updatedCheckboxes.includes(category)) {\n\t\t\t\tupdatedCheckboxes = updatedCheckboxes.filter(item => item !== category);\n\t\t\t} else {\n\t\t\t\tupdatedCheckboxes.push(category);\n\t\t\t}\n\t\t}\n\n\t\tsetActiveCheckboxes(updatedCheckboxes);\n\t};\n\n\tconst handleAddClick = (record: GetIncentiveDataType) => {\n\t\taddSelectedIncentive(record);\n\t};\n\n\tconst handleChangePage = (page: number) => {\n\t\tsetCurrentPage(page);\n\t};\n\n\tlet filteredData = [...matchData];\n\n\tconst showDrawer = async (partner: MatchPartnersDataType) => {\n\t\tsetSelectedPartner(partner);\n\t\ttry {\n\t\t\tconst response = await fetchDataFromSalesForce(`query/?q=SELECT+Rich_Merge__c+FROM+Client_Pitch__c+WHERE+Active__c=true+AND+Custom_Outreach__c=true+AND+Client_Id__c='${partner.Partner_ID__c}'`);\n\n\t\t\tif (response && response.records && response.records[0] && response.records[0].Rich_Merge__c) {\n\t\t\t\tsetSelectedPartner(prev => ({\n\t\t\t\t\t...prev!,\n\t\t\t\t\trichMerge: response.records[0].Rich_Merge__c\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tconsole.error(\"Invalid data format:\", response);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error fetching partner details:\", error);\n\t\t} finally {\n\t\t}\n\n\t\tsetOpen(true);\n\t};\n\n\tconst onCloseDrawer = () => {\n\t\tsetSelectedPartner(null);\n\t\tsetOpen(false);\n\t\tsetTimeout(() => {\n\t\t\tfetchData();\n\t\t}, 5000);\n\t};\n\n\tuseEffect(() => {\n\t\tlet processedData = [...matchData];\n\n\t\tprocessedData.sort((a: any, b: any) => a.Partner_Name__c.localeCompare(b.Partner_Name__c));\n\n\t\tconst startIndex = (currentPage - 1) * 10;\n\t\tconst endIndex = startIndex + 10;\n\t\tconst paginatedData = processedData.slice(startIndex, endIndex);\n\t\tsetData(paginatedData);\n\t}, [sortedInfo, currentPage, matchData, activeCheckboxes]);\n\n\tasync function fetchData() {\n\t\ttry {\n\t\t\tconst salesForceData = await fetchDataFromSalesForce(`query/?q=SELECT+Id,Partner_Name__c,Matching_Topic_Partner__c,Member_Contact__c,Client_Campaign_ID__c,Account_ID__c,Partner_Id__c,Portal_Email__c,Removed_by_Member__c,Member_Responded__c+FROM+Survey_Match__c+WHERE+Member_Contact__c='${clientId}'+AND+Removed_by_Member__c=false+AND+Portal_Email__c=true+AND+Member_Responded__c=false`);\n\t\t\tsetMatchData(salesForceData.records)\n\t\t\tconst contactInfo = await getMemberInfoFromContact(`${clientId}`);\n\t\t\tif (contactInfo) {\n\t\t\t\tsetSurveyLink(contactInfo?.Member_Survey_Link__c);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to fetch data:', error);\n\t\t}\n\t}\n\tuseEffect(() => {\n\t\tvoid fetchData();\n\t}, []);\n\n\n\tconst columns: ColumnsType<MatchPartnersDataType> = [\n\t\t{\n\t\t\ttitle: 'Partner Name',\n\t\t\tdataIndex: 'Partner_Name__c',\n\t\t\tkey: 'Partner_Name__c',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Matching Priorities/Projects',\n\t\t\tdataIndex: 'Matching_Topic_Partner__c',\n\t\t\tkey: 'Matching_Topic_Partner__c',\n\t\t}\n\t];\n\treturn (\n\n\t\t<section className={styles.incentivesContainer}>\n\t\t\t<div className={styles.incentivesTitleContainer}>\n\t\t\t\t<div className={styles.incentivesTitle}>\n\t\t\t\t\t<h2>Partners Matching your Priorities/Projects</h2>\n\t\t\t\t\t{data.length > 0 && <Link target='_blank' href={suveryLink}><p>Click here to update your survey responses</p></Link>}\n\t\t\t\t\t{data.length == 0 && <Link target='_blank' href={suveryLink}><p>Fill out our member survey to see matches below</p></Link>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Space style={{ marginBottom: 16 }}>\n\t\t\t</Space>\n\t\t\t{data.length > 0 &&\n\t\t\t\t<>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tpagination={false}\n\t\t\t\t\t\tsize={\"middle\"}\n\t\t\t\t\t\tdataSource={data}\n\t\t\t\t\t\tclassName={`${styles.table}`}\n\t\t\t\t\t\tonRow={(record) => ({\n\t\t\t\t\t\t\tonClick: () => showDrawer(record)\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tbordered\n\t\t\t\t\t/>\n\t\t\t\t\t<Pagination showSizeChanger={false} defaultPageSize={10} className={styles.paginationIncentives} defaultCurrent={currentPage} total={filteredData.length} onChange={handleChangePage} />\n\t\t\t\t\t<MatchPartnerDrawer\n\t\t\t\t\t\tisOpen={open}\n\t\t\t\t\t\tonClose={onCloseDrawer}\n\t\t\t\t\t\tpartnerDetails={selectedPartner}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t}\n\t\t</section>\n\t);\n}\n\nexport default MatchesSection\n","/Users/shannoncoakley/Documents/mp/src/components/sections/meetingsSection/MeetingsSection.tsx",["375"],[],"import { FC } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Tabs } from \"antd\";\nimport styles from \"./styles.module.sass\";\nimport DeclineMeetingsTable from \"./DeclineMeetingsTable\";\nimport ClosedMeetingsTable from \"./ClosedMeetingsTable\";\nimport PendingMeetingsTable from \"./PendingMeetingsTable\";\n\nconst MeetingsSection: FC = () => {\n  const isMobile = useMediaQuery({ maxWidth: 610 });\n  const tabItems = [\n    { key: \"1\", tab: \"Pending Meetings\", content: <PendingMeetingsTable /> },\n    { key: \"2\", tab: \"Closed Meetings\", content: <ClosedMeetingsTable /> },\n    { key: \"3\", tab: \"Declined Meetings\", content: <DeclineMeetingsTable /> },\n  ];\n\n  return (\n    <section className={styles.meetingsContainer}>\n      <h2 className={styles.meetingsContainerTitle}>Meetings</h2>\n      <Tabs\n        defaultActiveKey=\"1\"\n        tabBarStyle={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"#FFFFFF\",\n          marginLeft: \"3%\",\n          textTransform: \"uppercase\",\n        }}\n      >\n        {tabItems.map((item) => (\n          <Tabs.TabPane key={item.key} tab={item.tab}>\n            {item.content}\n          </Tabs.TabPane>\n        ))}\n      </Tabs>\n    </section>\n  );\n};\n\nexport default MeetingsSection;\n","/Users/shannoncoakley/Documents/mp/src/components/sections/profileSection/ProfileSection.tsx",["376","377","378"],[],"import React, { FC, useState } from 'react';\nimport {useMediaQuery} from \"react-responsive\";\nimport styles from './styles.module.sass'\nimport UserForm from \"./ui/UserForm\";\n\n\nconst ProfileSection: FC = () => {\n    const [avatarInitials, setAvatarInitials] = useState<string | null>(null);\n    const isMobile = useMediaQuery({ maxWidth: 610 })\n    const isTablet = useMediaQuery({ maxWidth: 1024 })\n\n    return (\n        <section className={styles.profileSection}>\n                <UserForm setAvatarInitials={setAvatarInitials}/>\n        </section>\n    );\n};\n\nexport default ProfileSection;","/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/CartIncentivesSection.tsx",["379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396"],[],"import { FC, useState, useEffect, useContext } from \"react\";\nimport { Button, Col, Image, List, Row, message } from \"antd\";\n\nimport styles from \"./styles.module.sass\";\nimport { ReactComponent as DeleteIcon } from \"../../../images/svgIcons/deleteIcon.svg\";\nimport {\n  createDataInSalesForce,\n  fetchDataFromSalesForce,\n  updateDataInSalesForce,\n} from \"../../../salesforceAuth\";\nimport { getMemberInfoFromContact } from \"../../../getSalesForceData\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useIncentivesContext } from \"../homeSection/contexts/IncentivesContext\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport CheckoutDrawer from \"./CheckoutDrawer\";\n\ninterface DataType {\n  key: string;\n  incentive: string;\n  moreInfo: string | JSX.Element;\n  meetingsRequired: number;\n}\n\nconst NumberWithCommas = (x: number) => {\n  return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n\nconst CartSection: FC = () => {\n  const { clientId } = useParams<{ clientId: string }>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [contact, setContact] = useState<any>();\n  const [pendingMeetings, setPendingMeetings] = useState([]);\n  const [openCheckoutDrawer, setOpenCheckoutDrawer] = useState(false);\n  const navigate = useNavigate();\n  const incentiveContext = useIncentivesContext();\n  const cartItems = incentiveContext.cartItems || [];\n\n  const removeCartItem = (cartItemId: any) => {\n    const deleted = cartItems.filter((c) => c.cartItemId !== cartItemId);\n    incentiveContext.setCartItems(deleted);\n  };\n\n  const getTotalPoints = () => {\n    const total = cartItems.reduce((sum, item: any) => sum + item.Points__c, 0);\n    return total;\n  };\n\n  const getCartCount = (value: any) => {\n    const filteredCartItems = cartItems.filter((item) => item.key == value.key);\n    return filteredCartItems.length;\n  };\n\n  const onFinish = async () => {\n    try {\n      setIsLoading(true);\n\n      // Constructing incentiveData based on cartItems and customizationList\n      const incentiveDataList = cartItems.map((item: any, index: number) => ({\n        Incentive__c: item.incentiveId,\n        Points__c: item.Points__c,\n        Member_Contact__c: clientId,\n        Customization__c: item.Customization__c || null, // Using null if no customization found\n      }));\n\n      console.log(\"incentiveDataList\", incentiveDataList); // incentive data\n\n      try {\n        // Create Member_Incentive__c records in Salesforce\n        for (const incentiveData of incentiveDataList) {\n          await createDataInSalesForce(\n            `/sobjects/Member_Incentive__c/`,\n            incentiveData\n          );\n        }\n\n        // Reset cart items, close modal, and reset loading state\n        incentiveContext.setCartItems([]);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Failed to update password:\", error);\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data from Salesforce:\", error);\n      alert(\"Authorization error. Please try again later.\");\n      setIsLoading(false);\n    }\n  };\n\n  const redeemPoints = () => {\n    if (\n      contact?.Points_Balance__c - getTotalPoints() >= 0 &&\n      cartItems.length > 0\n    ) {\n      if (cartItems.every((item) => item.Needs_to_be_shipped__c === false)) {\n        setOpenCheckoutDrawer(false);\n        onFinish();\n      } else {\n        setOpenCheckoutDrawer(true);\n      }\n    }\n  };\n\n  const onCloseCheckoutDrawer = () => {\n    setOpenCheckoutDrawer(false);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const salesForceData = await fetchDataFromSalesForce(\n          `query/?q=SELECT+Id,Client_Name__c,Stage_MP__c+FROM+Meeting__c+WHERE+(Stage_MP__c!=\\'N/A\\'+AND+Stage_MP__c!=\\'Canceled by Client\\'+AND+Stage_MP__c!=\\'Canceled by Member\\'+AND+Stage_MP__c!=\\'Meeting Completed\\')+AND+MemberC__c='${clientId}'`\n        );\n        const transformedData = salesForceData.records.map((record: any) => ({\n          key: record.Id,\n          partnerName: record.Client_Name__c,\n          stage: record.Stage_MP__c || \"\",\n          incentive: record.Incentive_Copy1__c || \"\",\n          meetingDate: record.Meeting_Date_M__c || \"\",\n          scheduleMeeting: record.Stage_M__c,\n          calendarLink: record.CMT_Calendar_Link__c,\n          showFeedbackLink:\n            record.Member_Feedback_Date__c === null &&\n            record.Meeting_Date_M__c &&\n            new Date(record.Meeting_Date_M__c) <= new Date(),\n          memberFeedbackDate: record.Member_Feedback_Date__c,\n          memberFeedbackLink: record.Member_Feedback_Link__c,\n          meetingCompletedDate: record.Meeting_Completed_Date__c,\n        }));\n        setPendingMeetings(transformedData);\n\n        getMemberInfoFromContact(`${clientId}`).then((res) => {\n          setContact(res);\n        });\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    }\n\n    void fetchData();\n  }, [clientId]);\n\n  console.log(\"cartItems\", cartItems);\n  return (\n    <section className={styles.cartIncentivesContainer}>\n      <div className={styles.cartListContainer}>\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={cartItems}\n          pagination={false}\n          renderItem={(item) => (\n            <List.Item\n              key={item.cartItemId}\n              className={styles.cartListItemContainer}\n            >\n              <Row>\n                <Col sm={8}>\n                  <Image\n                    width=\"100%\"\n                    src={item.Image__c || \"https://via.placeholder.com/200\"}\n                    alt=\"Your Image\"\n                  />\n                </Col>\n                <Col\n                  sm={16}\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <div className={styles.cartListItemInfoContainer}>\n                    <p>{item.incentive}</p>\n                    <p className={styles.cartListItemPointsText}>\n                      {NumberWithCommas(item.Points__c || 0)} points\n                    </p>\n                  </div>\n                  <p>\n                    {item.Customization__c\n                      ? `Customization: ${item.Customization__c}`\n                      : \"\"}\n                  </p>\n                  <Button\n                    className={styles.cartListItemActionBtn}\n                    onClick={() => removeCartItem(item.cartItemId)}\n                  >\n                    <span className={styles.cartItemActionBtn}>Remove</span>\n                    {/* <span>{getCartCount(item)}</span>\n                    <span className={styles.cartItemActionBtn}>+</span> */}\n                  </Button>\n                </Col>\n              </Row>\n            </List.Item>\n          )}\n        />\n      </div>\n      <div className={styles.cartPointsContainer}>\n        <div className={styles.totalPoints}>\n          <strong>Total Points Needed: </strong>\n          <span>{getTotalPoints()}</span>\n        </div>\n        <div className={styles.totalPoints}>\n          <strong>Your Points Balance: </strong>\n          <span>{contact?.Points_Balance__c}</span>\n        </div>\n        <div className={styles.totalPoints}>\n          <strong>Points Remaining: </strong>\n          <span>{contact?.Points_Balance__c - getTotalPoints()}</span>\n        </div>\n        <div className={styles.submitContainer}>\n          <Button\n            // className={styles.submitBtn}\n            style={{\n              marginTop: \"10px\",\n              margin: \"10px auto\",\n              width: \"fit-content\",\n              display: \"block\",\n            }}\n            onClick={redeemPoints}\n            loading={isLoading}\n            disabled={contact?.Points_Balance__c - getTotalPoints() < 0}\n          >\n            Redeem Points\n          </Button>\n          {contact?.Points_Balance__c - getTotalPoints() < 0 && (\n            <p\n              style={{ color: \"red\", fontWeight: \"bold\", textAlign: \"center\" }}\n            >You don't have enough points to checkout!</p>\n          )}\n        </div>\n      </div>\n      {contact && (\n        <CheckoutDrawer\n          totalPoints={getTotalPoints()}\n          isOpen={openCheckoutDrawer}\n          onClose={onCloseCheckoutDrawer}\n          contactInfo={contact}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default CartSection;\n","/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/RedeemedIncentivesSection.tsx",["397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416"],[],"import React, { FC, useEffect, useState } from 'react';\nimport { Space, Table, Pagination, Menu, Checkbox, List, Row, Col } from 'antd';\nimport type { ColumnsType, SorterResult } from 'antd/es/table/interface';\nimport styles from './styles.module.sass'\nimport { fetchDataFromSalesForce } from '../../../salesforceAuth';\nimport { useParams } from 'react-router-dom';\nimport { getMemberInfoFromContact } from '../../../getSalesForceData';\nimport Link from 'antd/es/typography/Link';\n\n\nconst RedeemedIncentivesSection: FC = () => {\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [activeCheckboxes, setActiveCheckboxes] = useState<string[]>(['All']);\n\tconst [data, setData] = useState<any[]>([]);\n\tconst { clientId } = useParams<{ clientId: string }>();\n\tconst [matchData, setMatchData] = useState([])\n\tconst [suveryLink, setSurveyLink] = useState<string>();\n\tconst [richMerge, setRichMerge] = useState('');\n\tconst [selectedPartner, setSelectedPartner] = useState<any | null>(null);\n\tconst [open, setOpen] = useState(false);\n\n\tconst handleChangePage = (page: number) => {\n\t\tsetCurrentPage(page);\n\t};\n\n\tlet filteredData = [...matchData];\n\n\tconst onCloseDrawer = () => {\n\t\tsetSelectedPartner(null);\n\t\tsetOpen(false);\n\t\tsetTimeout(() => {\n\t\t\tfetchData();\n\t\t}, 5000);\n\t};\n\n\tuseEffect(() => {\n\t\tlet processedData = [...matchData];\n\n\t\tprocessedData.sort((a: any, b: any) => a.Incentive_Copy__c.localeCompare(b.Incentive_Copy__c));\n\n\t\tconst startIndex = (currentPage - 1) * 10;\n\t\tconst endIndex = startIndex + 10;\n\t\tconst paginatedData = processedData.slice(startIndex, endIndex);\n\t\tsetData(paginatedData);\n\t}, [currentPage, matchData, activeCheckboxes]);\n\n\tasync function fetchData() {\n\t\ttry {\n\t\t\tconst salesForceData = await fetchDataFromSalesForce(`query/?q=SELECT+Incentive_Copy__c,Points__c,CreatedDate,Shipment_Status__c,Favorite__c,Incentive__c+FROM+Member_Incentive__c+WHERE+Member_Contact__c='${clientId}'+AND+Requirements_Fulfilled__c=true`);\n\t\t\tsetMatchData(salesForceData.records)\n\t\t} catch (error) {\n\t\t\tconsole.error('Failed to fetch data:', error);\n\t\t}\n\t}\n\tuseEffect(() => {\n\t\tvoid fetchData();\n\t}, []);\n\n\tfunction formatDate(date: any) {\n\t\treturn (new Date(date)).toISOString().split('T')[0]; // YYYY-MM-DD format\n\t}\n\n\tconst columns: ColumnsType<any> = [\n\t\t{\n\t\t\ttitle: 'Incentive Name',\n\t\t\tdataIndex: 'Incentive_Copy__c',\n\t\t\tkey: 'Incentive_Copy__c',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Status',\n\t\t\tdataIndex: 'Shipment_Status__c',\n\t\t\tkey: 'Shipment_Status__c',\n\t\t}\n\t];\n\treturn (\n\n\t\t<section className={styles.incentivesContainer}>\n\t\t\t{data.length > 0 &&\n\t\t\t\t<>\n\t\t\t\t\t{/* <Table\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tpagination={false}\n\t\t\t\t\t\tsize={\"middle\"}\n\t\t\t\t\t\tdataSource={data}\n\t\t\t\t\t\tclassName={`${styles.table}`}\n\t\t\t\t\t\tbordered\n\t\t\t\t\t/>\n\t\t\t\t\t<Pagination showSizeChanger={false} defaultPageSize={10} className={styles.paginationIncentives} defaultCurrent={currentPage} total={filteredData.length} onChange={handleChangePage} /> */}\n\t\t\t\t\t<section className={styles.redeemIncentivesListContainer}>\n\t\t\t\t\t\t<List\n\t\t\t\t\t\t\titemLayout=\"horizontal\"\n\t\t\t\t\t\t\tdataSource={data}\n\t\t\t\t\t\t\tpagination={false}\n\t\t\t\t\t\t\trenderItem={(item) => (\n\t\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t\t<div className={styles.redeemListItemContainer}>\n\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>{item.Incentive_Copy__c}</h3>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col span={15}>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Status</p>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col span={9}>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{item.Shipment_Status__c}</p>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col span={15}>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Points</p>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col span={9}>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{item.Points__c}</p>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col span={15}>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>Sent Date</p>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<Col span={9}>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{formatDate(item.CreatedDate)}</p>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</section>\n\t\t\t\t</>\n\t\t\t}\n\t\t</section>\n\t);\n}\n\nexport default RedeemedIncentivesSection","/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/SelectedIncentivesSection.tsx",["417","418","419","420","421","422","423","424","425","426","427","428","429","430","431"],[],"import React, { FC, useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport {\n  Button,\n  Checkbox,\n  Col,\n  Dropdown,\n  Image,\n  List,\n  Menu,\n  MenuProps,\n  Pagination,\n  Row,\n  Space,\n  Table,\n  Tag,\n} from \"antd\";\nimport type { ColumnsType, SorterResult } from \"antd/es/table/interface\";\nimport {\n  GetIncentiveDataType,\n  useGetPartnersAndIncentivesContext,\n  useIncentivesContext,\n  usePartnerContext,\n} from \"../homeSection/contexts/IncentivesContext\";\nimport { ReactComponent as Filter } from \"../../../images/svgIcons/filter.svg\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./styles.module.sass\";\nimport { DownOutlined, StarFilled, StarOutlined } from \"@ant-design/icons\";\nimport SelectedIncentivesDrawer from \"./SelectedIncentivesDrawer\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  createDataInSalesForce,\n  fetchDataFromSalesForce,\n  updateDataInSalesForce,\n} from \"../../../salesforceAuth\";\nimport IncentiveCustomizationDrawer from \"./IncentiveCustomizationDrawer\";\nimport { getMemberInfoFromContact } from \"../../../getSalesForceData\";\nimport CharityDrawer from \"./CharityDrawer\";\nimport Link from \"antd/es/typography/Link\";\n\nexport interface SelectedIncentivesDataType {\n  key: string;\n  incentive: string;\n  moreInfo: string | JSX.Element;\n  meetingsRequired: number;\n  requirementsFulfilled?: string | JSX.Element;\n  status?: string | JSX.Element;\n  Meetings_Needed__c?: string;\n  Meetings_Completed__c?: string;\n  Customization__c?: string;\n  Points__c?: number;\n  Website__c?: string;\n  Image__c?: string;\n  favorite?: string;\n  cartItemId?: string;\n  Needs_to_be_shipped__c?: boolean;\n  incentiveId?: string;\n}\n\nconst NumberWithCommas = (x: number) => {\n  return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n\nconst SelectedIncentivesSection: FC = () => {\n  const [selectCartItemId, setSelectCartItemId] = useState<string>(\"\");\n  const incentiveContext = useIncentivesContext();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [openCustomizationDrawer, setOpenCustomizationDrawer] = useState(false);\n  const [openCharityDrawer, setOpenCharityDrawer] = useState(false);\n  const [selectedIncentive, setSelectedIncentive] =\n    useState<SelectedIncentivesDataType | null>(null);\n  const { incentiveFromSalesForce } = useGetPartnersAndIncentivesContext();\n  const { clientId } = useParams<{ clientId: string }>();\n  const [currentPage, setCurrentPage] = useState(1);\n  const isMobile = useMediaQuery({ maxWidth: 610 });\n  const [data, setData] = useState<SelectedIncentivesDataType[]>([]);\n  const [activeCheckboxes, setActiveCheckboxes] = useState<string[]>([\"All\"]);\n  const [sortBy, setSortBy] = useState(\"az\");\n  const [memberContactData, setMemberContactData] = useState<any[]>([]);\n  const [contactData, setContactData] = useState<any>([]);\n  const [loading, setLoading] = useState(false);\n  const [sortedInfo, setSortedInfo] = useState<\n    SorterResult<GetIncentiveDataType>\n  >({\n    columnKey: \"incentive\",\n    order: \"ascend\",\n  });\n  const cartItems = incentiveContext.cartItems;\n\n  let filteredData = [...incentiveFromSalesForce];\n\n  if (activeCheckboxes.length && !activeCheckboxes.includes(\"All\")) {\n    filteredData = filteredData.filter((item) =>\n      activeCheckboxes.includes(item.Product_Type__c)\n    );\n  }\n\n  useEffect(() => {\n    let processedData = [...incentiveFromSalesForce];\n\n    processedData.sort((a, b) => a.incentive.localeCompare(b.incentive));\n\n    if (activeCheckboxes.length && !activeCheckboxes.includes(\"All\")) {\n      processedData = processedData.filter((item) =>\n        activeCheckboxes.includes(item.Product_Type__c)\n      );\n    }\n\n    processedData = processedData.map((data) => ({\n      ...data,\n      favorite: memberContactData?.find((d) => d.Incentive__c === data.key)\n        ?.Favorite__c,\n    }));\n\n    if (sortedInfo.columnKey) {\n      processedData.sort((a, b) => {\n        if (sortBy === \"az\") {\n          // Incentive name\n          return a.incentive.localeCompare(b.incentive);\n        } else if (sortBy === \"za\") {\n          return b.incentive.localeCompare(a.incentive);\n        } else if (sortBy === \"lowToHigh\") {\n          return a.Points__c\n            ? b.Points__c\n              ? a.Points__c - b.Points__c\n              : 1\n            : b.Points__c\n            ? -1\n            : 0;\n        } else if (sortBy === \"highToLow\") {\n          return a.Points__c\n            ? b.Points__c\n              ? b.Points__c - a.Points__c\n              : -1\n            : b.Points__c\n            ? 1\n            : 0;\n        } else {\n          return (\n            new Date(b.CreatedDate || 0).getTime() -\n            new Date(a.CreatedDate || 0).getTime()\n          );\n        }\n      });\n    }\n\n    const startIndex = (currentPage - 1) * 8;\n    const endIndex = startIndex + 8;\n    let paginatedData = processedData.slice(0, endIndex);\n    paginatedData = paginatedData.sort(sortByFavorite);\n    setData(paginatedData);\n  }, [\n    sortBy,\n    currentPage,\n    incentiveFromSalesForce,\n    activeCheckboxes,\n    memberContactData,\n    sortedInfo.columnKey,\n  ]);\n\n  async function fetchData() {\n    try {\n      const salesForceData = await fetchDataFromSalesForce(\n        `query/?q=SELECT+Incentive_Copy__c,Favorite__c,Incentive__c,Id+FROM+Member_Incentive__c+WHERE+Member_Contact__c='${clientId}'`\n      );\n      setMemberContactData(salesForceData.records);\n      getMemberInfoFromContact(`${clientId}`).then((res) => {\n        setContactData(res);\n      });\n      console.log(\"--- contactData (Member Info)\", contactData);\n    } catch (error) {\n      console.error(\"Failed to fetch data:\", error);\n    }\n  }\n\n  // Sorting function to prioritize 'favorite' status\n  const sortByFavorite = (a: any, b: any) => {\n    if (a.favorite === \"Active\" && b.favorite === \"Inactive\") {\n      return -1; // 'active' comes before 'inactive'\n    } else if (a.favorite === \"Inactive\" && b.favorite === \"Active\") {\n      return 1; // 'inactive' comes after 'active'\n    } else {\n      return 0; // no change in order\n    }\n  };\n\n  useEffect(() => {\n    void fetchData();\n  }, []);\n\n  const onCloseDrawer = () => {\n    setSelectedIncentive(null);\n    setOpenDrawer(false);\n  };\n\n  const onCloseCustomizationDrawer = async () => {\n    setOpenCustomizationDrawer(false);\n  };\n\n  const onSubmitCustomization = async (customizationString: string) => {\n    const updatedData = {\n      Customization__c: customizationString.toString(),\n    };\n\n    // Find the index of the object in cartItems with the matching id\n    const index = cartItems.findIndex(\n      (item) => item.cartItemId === selectCartItemId\n    );\n\n    // If the object is found, update its Customization__c field\n    if (index !== -1) {\n      const updatedItem = { ...cartItems[index], ...updatedData }; // Merge updatedData with existing item data\n      const updatedCartItems = [...cartItems]; // Create a copy of cartItems array\n      updatedCartItems[index] = updatedItem; // Replace the item at index with the updated one\n      console.log(\"--- updatedCartItems\", updatedCartItems);\n\n      // Update cartItems using incentiveContext.setCartItems\n      incentiveContext.setCartItems(updatedCartItems);\n    } else {\n      console.log(\"Item not found in cartItems.\");\n    }\n\n    // if (id) {\n    //   const result = await updateDataInSalesForce(\n    //     `/sobjects/Member_Incentive__c/${id}`,\n    //     updatedData\n    //   );\n    //   console.log(\"--- result\", result);\n    //   console.log(memberContactData);\n    // } else {\n    //   console.error(\"No matching ID found for the selected incentive.\");\n    // }\n    setOpenCustomizationDrawer(false);\n  };\n\n  const onCloseCharityDrawer = () => {\n    setOpenCharityDrawer(false);\n  };\n\n  const showDrawer = (incentive: SelectedIncentivesDataType) => {\n    setSelectedIncentive(incentive);\n    setOpenDrawer(true);\n  };\n\n  const handleChangePage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const onLoadMore = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  const addFavorite = async (e: any) => {\n    setLoading(true);\n    if (memberContactData.find((m) => m.Incentive__c === e.key)) {\n      const id = memberContactData.find((m) => m.Incentive__c === e.key)?.Id;\n      const updatedData = {\n        Favorite__c: \"Active\",\n      };\n      await updateDataInSalesForce(\n        `/sobjects/Member_Incentive__c/${id}`,\n        updatedData\n      );\n      fetchData();\n      setLoading(false);\n    } else {\n      const newData = {\n        Member_Contact__c: clientId,\n        Favorite__c: \"Active\",\n        Incentive__c: e.key,\n      };\n      await createDataInSalesForce(`/sobjects/Member_Incentive__c/`, newData);\n      fetchData();\n      setLoading(false);\n    }\n  };\n\n  const cancelFavorite = async (e: any) => {\n    try {\n      const id = memberContactData.find((m) => m.Incentive__c === e.key)?.Id;\n      if (id) {\n        setLoading(true);\n        const updatedData = {\n          Favorite__c: \"Inactive\",\n        };\n        await updateDataInSalesForce(\n          `/sobjects/Member_Incentive__c/${id}`,\n          updatedData\n        );\n        fetchData();\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  const columns: ColumnsType<SelectedIncentivesDataType> = [\n    {\n      title: \"Incentive Name\",\n      dataIndex: \"incentive\",\n      key: \"incentive\",\n    },\n    {\n      title: \"Website\",\n      key: \"Website__c\",\n      render: (value) => (\n        <div style={{ maxWidth: \"300px\" }}>{value.Website__c}</div>\n      ),\n    },\n    {\n      title: \"Points\",\n      dataIndex: \"Points__c\",\n      key: \"Points__c\",\n    },\n    {\n      title: \"Favorite\",\n      key: \"favorite\",\n      render: (value) => {\n        // console.log('-- value', value, row)\n        return (\n          <>\n            {value?.favorite === \"Active\" ? (\n              <StarFilled onClick={() => cancelFavorite(value)} />\n            ) : (\n              <StarOutlined onClick={() => addFavorite(value)} />\n            )}\n          </>\n        );\n      },\n    },\n    {\n      title: \"Add to Cart\",\n      key: \"Points__c\",\n      render: (value) => {\n        return (\n          <Button\n            onClick={(e) => {\n              e.stopPropagation();\n              setSelectedIncentive(value);\n              onAddToCart(value);\n            }}\n          >\n            Add to Cart\n          </Button>\n        );\n      },\n    },\n  ];\n\n  const onAddToCart = (value: any) => {\n    console.log(\"---- cartitems: \", cartItems);\n    console.log(\"--- value\", value);\n\n    // Make changes to the item's properties\n    if (value.Customization_Options__c) {\n      setOpenCustomizationDrawer(true);\n    }\n    if (value.Product_Type__c === \"Charitable\") {\n      setOpenCharityDrawer(true);\n    }\n\n    // Generate a UUID for the cart item ID\n    const cartItemId = uuidv4();\n    setSelectCartItemId(cartItemId);\n    // Create a new object with the updated key and additional property incentiveId\n    const { key, ...rest } = value; // Destructure value, leaving out the key\n    const newValue = { incentiveId: key, key: cartItemId, cartItemId, ...rest }; // Create new object with incentiveId, cartItemId, and remaining properties\n\n    // Add the item to the cart\n    incentiveContext.setCartItems([...cartItems, newValue]);\n  };\n\n  const getCartCount = (value: any) => {\n    const filteredCartItems = cartItems.filter(\n      (item) => item.incentiveId == value.key\n    );\n    return filteredCartItems.length;\n  };\n\n  const removeCartItem = (item: any) => {\n    const filteredCartItems = cartItems.filter(\n      (c) => c.incentiveId == item.key\n    );\n    filteredCartItems.pop();\n    const deleted = cartItems.filter((c) => c.incentiveId !== item.key);\n    incentiveContext.setCartItems([...deleted, ...filteredCartItems]);\n    return filteredCartItems.length;\n  };\n\n  const menuValues = Array.from(\n    new Set(incentiveFromSalesForce.map((item) => item.Product_Type__c))\n  ).sort((a: any, b: any) => a?.localeCompare(b));\n  const menuItems = [\"All\", ...menuValues];\n  const menu = (\n    <Menu style={{ maxHeight: \"250px\", overflowY: \"auto\" }}>\n      {menuItems.map((item, index) => (\n        <Menu.Item key={index}>\n          <Checkbox\n            checked={activeCheckboxes.includes(item)}\n            onClick={(e) => handleFilterChange(e, item)}\n          >\n            {item}\n          </Checkbox>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  const handleFilterChange = (event: React.MouseEvent, category: string) => {\n    event.stopPropagation(); // Останавливаем распространение события\n\n    let updatedCheckboxes = [...activeCheckboxes];\n\n    if (category === \"All\") {\n      updatedCheckboxes = [\"All\"];\n    } else {\n      if (updatedCheckboxes.includes(\"All\")) {\n        updatedCheckboxes = [];\n      }\n      if (updatedCheckboxes.includes(category)) {\n        updatedCheckboxes = updatedCheckboxes.filter(\n          (item) => item !== category\n        );\n      } else {\n        updatedCheckboxes.push(category);\n      }\n    }\n\n    setActiveCheckboxes(updatedCheckboxes);\n  };\n\n  const handleMenuClick: MenuProps[\"onClick\"] = (e) => {\n    // message.info('Click on menu item.');\n    console.log(\"click\", e);\n    setSortBy(e.key);\n  };\n\n  const items: MenuProps[\"items\"] = [\n    {\n      label: \"Sort A-Z\",\n      key: \"az\",\n    },\n    {\n      label: \"Sort Z-A\",\n      key: \"za\",\n    },\n    {\n      label: \"Points Low to High\",\n      key: \"lowToHigh\",\n    },\n    {\n      label: \"Points High to Low\",\n      key: \"highToLow\",\n    },\n    {\n      label: \"Newest First\",\n      key: \"newestFirst\",\n    },\n  ];\n\n  const menuProps = {\n    items,\n    onClick: handleMenuClick,\n  };\n\n  console.log(\"--- data: \", data);\n\n  return (\n    <>\n      <section className={styles.incentivesTableContainer}>\n        <div className={styles.incentivesTableHeaderContainer}>\n          <div className={styles.incentivesTitleContainer}>\n            <Dropdown menu={menuProps} trigger={[\"click\"]}>\n              <Button className={styles.sortBtn}>\n                <Space>\n                  Sort by\n                  <DownOutlined />\n                </Space>\n              </Button>\n            </Dropdown>\n            <Dropdown overlay={menu} trigger={[\"click\"]}>\n              <button className={styles.filterBtn}>\n                <Filter /> Filter\n              </button>\n            </Dropdown>\n          </div>\n          <div className={styles.pointsBalanceContainer}>\n            <h3>\n              <span className={styles.pointsBalanceLabel}>Points Balance:</span>{\" \"}\n              {NumberWithCommas(contactData?.Points_Balance__c)}\n            </h3>\n            <Link\n              target=\"_blank\"\n              href=\"https://form.jotform.com/240324768989170\"\n            >\n              <p className={styles.suggestIncentiveText}>\n                Suggest an Incentive\n              </p>\n            </Link>\n          </div>\n        </div>\n        <Row gutter={[32, 32]} className={styles.incentivesItemsContainer}>\n          {data.map((item) => (\n            <Col\n              key={item.key}\n              md={6}\n              sm={12}\n              xs={12}\n              className={styles.incentivesItemContainer}\n            >\n              <div style={{ position: \"relative\", width: \"100%\" }}>\n                <Image\n                  width=\"100%\"\n                  src={item.Image__c || \"https://via.placeholder.com/200\"}\n                  alt=\"Your Image\"\n                />\n                {item?.favorite === \"Active\" ? (\n                  <StarFilled\n                    className={styles.favoriteBtn}\n                    onClick={() => cancelFavorite(item)}\n                  />\n                ) : (\n                  <StarOutlined\n                    className={styles.favoriteBtn}\n                    onClick={() => addFavorite(item)}\n                  />\n                )}\n              </div>\n              {!getCartCount(item) && (\n                <Button\n                  className={styles.addToCartBtn}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setSelectedIncentive(item);\n                    onAddToCart(item);\n                  }}\n                >\n                  + Add\n                </Button>\n              )}\n\n              {getCartCount(item) > 0 && (\n                <Button\n                  className={styles.addToCartBtn}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    setSelectedIncentive(item);\n                  }}\n                >\n                  <span\n                    onClick={() => removeCartItem(item)}\n                    className={styles.cartItemActionBtn}\n                  >\n                    -\n                  </span>\n                  {getCartCount(item)}\n                  <span\n                    className={styles.cartItemActionBtn}\n                    onClick={() => onAddToCart(item)}\n                  >\n                    +\n                  </span>\n                </Button>\n              )}\n              <div className={styles.incentivesItemInfoContainer}>\n                <Link\n                  target=\"_blank\"\n                  href={item.Website__c}\n                  className={styles.incentivesItemWebsiteText}\n                >\n                  {item.incentive}\n                </Link>\n                <p className={styles.incentivesItemPointsText}>\n                  {item.Points__c} points\n                </p>\n              </div>\n              <hr className={styles.divider} />\n            </Col>\n          ))}\n        </Row>\n        <div className={styles.loadMoreContainer} onClick={() => onLoadMore()}>\n          <Button>Load More</Button>\n        </div>\n        <SelectedIncentivesDrawer\n          selectedIncentivesDetails={selectedIncentive}\n          isOpen={openDrawer}\n          onClose={onCloseDrawer}\n        />\n        <IncentiveCustomizationDrawer\n          isOpen={openCustomizationDrawer}\n          onClose={onCloseCustomizationDrawer}\n          onSubmit={onSubmitCustomization}\n        />\n        <CharityDrawer\n          isOpen={openCharityDrawer}\n          onClose={onCloseCharityDrawer}\n          contactInfo={contactData}\n        />\n      </section>\n    </>\n  );\n};\n\nexport default SelectedIncentivesSection;\n","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/mobile/index.tsx",["432","433","434","435","436","437","438","439"],[],"import React, { useEffect, useState } from \"react\";\nimport { message, Tabs } from \"antd\";\nimport type { TabsProps } from \"antd\";\nimport MobilePartnersSection from \"./MobilePartnersSection\";\nimport OverviewSection from \"../OverviewSection\";\nimport MobileIncentivesSection from \"./MobileIncentivesSection\";\nimport MatchesSection from \"../MatchesSection\";\nimport { useParams } from \"react-router-dom\";\nimport { getMemberInfoFromContact } from \"../../../../getSalesForceData\";\n\nconst { TabPane } = Tabs;\n\ninterface ContactInfo {\n  Id: string;\n  Member__c: string;\n  Points_Balance__c: string;\n  Pending_Points__c: string;\n  Member_Survey_Link__c: string;\n  Non_Profit_Top_Choice__c?: string;\n  Charity_Name__c?: string;\n  MailingStreet?: string;\n  MailingCity?: string;\n  MailingState?: string;\n  MailingPostalCode?: string;\n  MailingCountry?: string;\n  Mailing_Address_Verified_Date__c?: string;\n  AccountId: string;\n  Partner_Referral_Link__c: string;\n  Shortened_PR_Link__c: string;\n  Email: string;\n}\nconst MobileHomeSections: React.FC = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <Tabs\n      centered\n      defaultActiveKey=\"1\"\n      tabBarStyle={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#FFFFFF\",\n      }}\n    >\n      <TabPane tab=\"PARTNERS\" key=\"1\">\n        <MobilePartnersSection />\n      </TabPane>\n      <TabPane tab=\"PARTNER MATCHES\" key=\"2\">\n        <MatchesSection />\n      </TabPane>\n      <TabPane tab=\"OVERVIEW\" key=\"3\">\n        <OverviewSection showModal={showModal} />\n      </TabPane>\n    </Tabs>\n  );\n};\n\nexport default MobileHomeSections;\n","/Users/shannoncoakley/Documents/mp/src/components/login/Login.tsx",["440","441","442","443","444","445","446"],[],"import React, {FC, useEffect, useState} from 'react';\nimport { Button, Checkbox, Form, Input, message } from 'antd';\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {useMediaQuery} from \"react-responsive\";\nimport {ReactComponent as LogoImg} from '../../images/svgIcons/do_good_logo_login.svg'\nimport styles from './style.module.sass'\nimport {fetchDataFromSalesForce} from \"../../salesforceAuth\";\n\n\nconst onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n};\n\ntype FieldType = {\n    email?: string;\n    password?: string;\n};\n\ninterface Login {\n    key: string\n}\n\nconst Login: FC = () => {\n    const [formData, setFormData] = useState({ email: '', password: '' });\n    const [messageApi, contextHolder] = message.useMessage();\n    const [emailData, setEmailData] = useState({\n        to: 'scoakley@mydogood.com',\n        subject: 'Need help logging into member portal',\n        body: 'I need help logging into the DoGood member portal.',\n    });\n\n    const error = () => {\n        messageApi.open({\n            type: 'error',\n            content: 'Click the \"Need help logging in?',\n        });\n    };\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const storedClientId = localStorage.getItem('clientId');\n\n        if (storedClientId) {\n            navigate(`/${storedClientId}/profile`, { replace: true });\n        }\n    }, []);\n\n\n    const onFinish = async (values: any) => {\n        try {\n            const query = `query/?q=SELECT+Id,Email,Member_Portal_Password__c+FROM+Contact+WHERE+RecordTypeId='01236000000yGps'+AND+(Membership_Status__c='Active'+OR+Membership_Status__c='Testing')+AND+Email='${formData.email}'+AND+Member_Portal_Password__c='${formData.password}'`;\n            const salesForceData = await fetchDataFromSalesForce(`${query}`);\n\n            if (salesForceData.records.length === 1) {\n                const clientId = salesForceData.records[0].Id;\n                localStorage.setItem('clientId', clientId);\n                navigate(`/${clientId}/home`, {replace: true});\n            } else {\n                error()\n            }\n        } catch (error) {\n            alert('Authorization error. Please try again later.');\n        }\n    };\n\n    return (\n        <section className={styles.loginSection}>\n            {contextHolder}\n            <article className={styles.formSection}>\n                <LogoImg/>\n                <h1 className={styles.title}>Log in</h1>\n                <div className={styles.formContainer}>\n                    <Form\n                        className={styles.form}\n                        name=\"basic\"\n                        layout={'vertical'}\n                        initialValues={{ remember: true }}\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                        autoComplete=\"off\"\n                    >\n                        <Form.Item<FieldType>\n                            className={styles.formItem}\n                            label=\"Email\"\n                            name=\"email\"\n                            rules={[{ message: 'Please input your username!' }]}\n                        >\n                            <Input placeholder={'Enter your email associated with DoGood'} onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\n                        </Form.Item>\n\n                        <Form.Item<FieldType>\n                            className={styles.formItem}\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[{ message: 'Please input your password!' }]}\n                        >\n                            <Input.Password placeholder={'Enter your password'} onChange={(e) => setFormData({ ...formData, password: e.target.value })} />\n                        </Form.Item >\n                        <a\n                            className={styles.helpLink}\n                            href={`mailto:${emailData.to}?subject=${emailData.subject}&body=${emailData.body}`}\n                            target=\"_blank\"\n                        >\n                            Need help logging in?\n                        </a>\n                        <Form.Item>\n                            <Button className={styles.btn} type=\"primary\" htmlType=\"submit\">\n                                Log in\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </article>\n        </section>\n    );\n};\n\nexport default Login;","/Users/shannoncoakley/Documents/mp/src/components/logo/index.tsx",[],[],"/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/MatchPartnerDrawer.tsx",["447","448","449","450","451"],[],"import React, { FC, useEffect, useState } from 'react';\nimport { useMediaQuery } from \"react-responsive\"\nimport { Drawer, Avatar, message } from 'antd';\nimport styles from './styles.module.sass'\nimport { CloseOutlined } from \"@ant-design/icons\";\nimport { UserOutlined } from '@ant-design/icons';\nimport { marked } from 'marked';\nimport { updateDataInSalesForce } from '../../../salesforceAuth';\nimport { getMemberInfoFromContact } from '../../../getSalesForceData';\nimport { useParams } from 'react-router-dom';\n\nexport interface MatchPartnersDataType {\n\tAccount_ID__c: string,\n\tClient_Campaign_ID__c: string\n\tId: string,\n\tMatching_Topic_Partner__c: string,\n\tMember_Contact__c: string,\n\tPartner_ID__c: string,\n\tPartner_Name__c: string,\n\trichMerge?: string;\n\tClient_Logo__c?: string;\n\tpartnerName: string;\n\twebsite?: string;\n\tMember_Account_ID__c: string;\n}\ninterface MatchPartnerDrawerProps {\n\tisOpen: boolean;\n\tonClose: () => void;\n\tpartnerDetails: MatchPartnersDataType | null;\n}\nconst MatchPartnerDrawer: FC<MatchPartnerDrawerProps> = ({ isOpen, onClose, partnerDetails }) => {\n\tconst [messageApi] = message.useMessage();\n\tconst { clientId } = useParams<{ clientId: string }>();\n\tconst isMobile = useMediaQuery({ maxWidth: 610 })\n\tconst isTablet = useMediaQuery({ maxWidth: 1024 })\n\n\tuseEffect(() => {\n\t\tif (partnerDetails) {\n\t\t}\n\t}, [partnerDetails]);\n\n\n\tconst success = () => {\n\t\tmessageApi.open({\n\t\t\ttype: 'success',\n\t\t\tcontent: 'Data sent successfully',\n\t\t});\n\t};\n\n\tconst handleRemoveClick = () => {\n\t\tif (partnerDetails) {\n\t\t\tupdatePartnerInSalesForce(partnerDetails, 'Removed')\n\t\t\tonClose();\n\t\t}\n\t};\n\n\tconst handleRequestClick = () => {\n\t\tif (partnerDetails) {\n\t\t\tupdatePartnerInSalesForce(partnerDetails, 'Requested')\n\t\t\tonClose();\n\t\t}\n\t};\n\n\tconst getDisplayLink = (url: string | undefined) => {\n\t\tif (!url) {\n\t\t\treturn \"\";\n\t\t}\n\t\ttry {\n\t\t\tconst parsedUrl = new URL(url);\n\t\t\tconst path = parsedUrl.pathname === '/' ? '' : parsedUrl.pathname;\n\t\t\treturn `${parsedUrl.hostname}${path}`;\n\t\t} catch (e) {\n\t\t\treturn url;\n\t\t}\n\t};\n\n\tfunction stripStyles(html: string) {\n\t\tconst domParser = new DOMParser();\n\t\tconst document = domParser.parseFromString(html, 'text/html');\n\t\tconst allElements = document.querySelectorAll('*');\n\t\tallElements.forEach(element => element.removeAttribute('style'));\n\t\treturn document.body.innerHTML;\n\t}\n\n\tconst renderAvatar = () => {\n\t\tif (!partnerDetails || !partnerDetails.Client_Logo__c) {\n\t\t\treturn <Avatar shape=\"square\" size={48} icon={<UserOutlined />} />;\n\t\t}\n\n\t\tconst isLink = partnerDetails.Client_Logo__c.startsWith('http://') || partnerDetails.Client_Logo__c.startsWith('https://');\n\n\t\tif (isLink) {\n\t\t\treturn <Avatar shape=\"square\" size={48} src={partnerDetails.Client_Logo__c} />;\n\t\t}\n\n\t\tif (partnerDetails.Client_Logo__c.startsWith('<img')) {\n\t\t\treturn <div style={{ width: '48px', height: '48px' }} dangerouslySetInnerHTML={{ __html: partnerDetails.Client_Logo__c }} />;\n\t\t}\n\n\t\treturn <Avatar shape=\"square\" size={48} icon={<UserOutlined />} />;\n\t};\n\n\tconst updatePartnerInSalesForce = async (partner: MatchPartnersDataType, status: string) => {\n\t\tlet updatedFields = {};\n\t\tlet endpoint = '';\n\n\t\tswitch (status) {\n\t\t\tcase \"Removed\":\n\t\t\t\tupdatedFields = {\n\t\t\t\t\tRemoved_by_Member__c: true,\n\t\t\t\t};\n\t\t\t\tendpoint = `sobjects/Survey_Match__c/${partner.Id}`;\n\t\t\t\tbreak;\n\t\t\tcase \"Requested\":\n\t\t\t\tupdatedFields = {\n\t\t\t\t\tMember_Responded__c: true,\n\t\t\t\t};\n\t\t\t\tendpoint = `sobjects/Survey_Match__c/${partner.Id}`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\ttry {\n\t\t\tif (status === \"Requested\") {\n\t\t\t\tawait updateDataInSalesForce(endpoint, updatedFields);\n\t\t\t\tsuccess();\n\t\t\t} else {\n\t\t\t\tawait updateDataInSalesForce(endpoint, updatedFields);\n\t\t\t\tsuccess();\n\t\t\t}\n\n\t\t} catch (error) {\n\t\t\tconsole.error(`Error processing partner with ID ${partner.Partner_ID__c}:`, error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Drawer\n\t\t\tfooterStyle={{ border: 'none' }}\n\t\t\tcloseIcon={false}\n\t\t\twidth={isMobile ? '100%' : (isTablet ? '60%' : '40%')}\n\t\t\tplacement=\"right\"\n\t\t\tonClose={onClose}\n\t\t\topen={isOpen}\n\t\t>\n\t\t\t{partnerDetails && (\n\t\t\t\t<section className={styles.drawerContainer}>\n\t\t\t\t\t<div className={styles.closeBtn}>\n\t\t\t\t\t\t<h2>Request details</h2>\n\t\t\t\t\t\t<CloseOutlined onClick={onClose} />\n\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className={styles.drawerBtnContainer}>\n\t\t\t\t\t\t<button onClick={handleRequestClick} className={styles.drawerBtn}>Request to Meet</button>\n\t\t\t\t\t\t<button onClick={handleRemoveClick} className={styles.drawerBtn}>Remove from Matches</button>\n\t\t\t\t\t</div><br></br>\n\t\t\t\t\t<article className={styles.drawerArticle}>\n\t\t\t\t\t\t<h4 className={styles.drawerArticleTitle}>Details</h4>\n\t\t\t\t\t\t<p style={{ fontSize: '14px' }} className={styles.drawerArticleDescription} dangerouslySetInnerHTML={{ __html: stripStyles(marked(partnerDetails.richMerge || \"\")) }}></p>\n\t\t\t\t\t</article>\n\t\t\t\t</section>\n\t\t\t)}\n\t\t</Drawer>\n\t);\n};\n\nexport default MatchPartnerDrawer;","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/PartnerDrawer.tsx",["452","453","454","455","456","457","458","459","460","461"],[],"import React, { FC, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Drawer, Avatar, message } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { CloseOutlined } from \"@ant-design/icons\";\nimport { marked } from \"marked\";\n\nimport RequestModal from \"./ui/RequestModal\";\nimport AcceptRequestModal from \"./ui/AcceptRequestModal\";\n\nimport styles from \"./styles.module.sass\";\nimport { usePartnerContext } from \"./contexts/IncentivesContext\";\nimport {\n  createDataInSalesForce,\n  fetchDataFromSalesForce,\n  updateDataInSalesForce,\n} from \"../../../salesforceAuth\";\nimport { getMemberInfoFromContact } from \"../../../getSalesForceData\";\nimport RequestTextModal from \"./ui/RequestTextModal\";\nimport NoDQModal from \"./ui/NoDQModal\";\n\ninterface partnerQuestion {\n  question: string;\n}\ninterface partner {\n  partner: boolean;\n}\n\ninterface PartnersDataType {\n  DQ_Response__c?: string;\n  key: string;\n  partnerName: string;\n  overview: string;\n  hasRequested: boolean;\n  website?: string;\n  richMerge?: string;\n  surveyOptionName?: string[];\n  Related_Membership_Member__c: string;\n  Related_Membership__c: string;\n  Survey_Option_Name__c: string[];\n  filterCategory?: string[];\n  Client_Logo__c?: string;\n  Stage_M__c?: string;\n  Stage_MP__c?: string;\n  Sweepstakes_Type__c?: string;\n  Client_Campaign_ID__c?: string;\n  Interest_in_Partner__c?: string;\n  RecordTypeId?: string;\n  Client_Campaign__c?: string;\n  Meeting_Source__c?: string;\n  Intro_Type__c?: string;\n  Request_Submitted_Date_M__c?: string;\n  declineReason?: string | JSX.Element;\n  Client_Decline_Reason__c?: string;\n  clientKey?: string;\n}\ninterface PartnerDrawerProps {\n  isOpen: boolean;\n  onClose: () => void;\n  partnerDetails: PartnersDataType | null;\n}\nconst PartnerDrawer: FC<PartnerDrawerProps> = ({\n  isOpen,\n  onClose,\n  partnerDetails,\n}) => {\n  const [isDeclineModalOpen, setIsDeclineModalOpen] = useState(false);\n  const [isAcceptModalOpen, setIsAcceptModalOpen] = useState(false);\n  const [isRequestModalOpen, setIsRequestModalOpen] = useState(false);\n  const [selectedCheckbox, setSelectedCheckbox] = useState<string | null>(\n    \"No interest\"\n  );\n  const [acceptMeetings, setAcceptMeetings] = useState<partnerQuestion | null>(\n    null\n  );\n  const [isDQpartner, setIsDQpartner] = useState<partner | null>(null);\n  const [noDQModalState, setNoDQModalState] = useState(false);\n\n  const {\n    addAcceptedPartner,\n    addRequestedPartner,\n    addDeclinedPartner,\n    declinedList,\n    acceptedList,\n    requestedList,\n    removeAcceptedPartner,\n    removeDeclinePartner,\n  } = usePartnerContext();\n  const [isAccepted, setIsAccepted] = useState(false);\n  const [isDeclined, setIsDeclined] = useState(false);\n  const [interestText, setInterestText] = useState(\"\");\n  const [interestTextAvailability, setInterestTextAvailability] = useState(\"\");\n  const [messageApi, contextHolder] = message.useMessage();\n  const { clientId } = useParams<{ clientId: string }>();\n\n  const isMobile = useMediaQuery({ maxWidth: 610 });\n  const isTablet = useMediaQuery({ maxWidth: 1024 });\n\n  const isPartnerAccepted = acceptedList.some(\n    (item) => item.key === partnerDetails?.key\n  );\n  const isPartnerRequested = requestedList.some(\n    (item) => item.key === partnerDetails?.key\n  );\n  const isPartnerDeclined = declinedList.some(\n    (item) => item.key === partnerDetails?.key\n  );\n\n  const showAcceptAnswerModal = async () => {\n    try {\n      if (partnerDetails) {\n        const salesForceData = await fetchDataFromSalesForce(\n          `query/?q=SELECT+Id,Client_Name__c,Stage_MP__c,DQ_Partner__c,DQ_Question__c+FROM+Meeting__c+WHERE+DQ_Partner__c=true+AND+MemberC__c='${clientId}'+AND+(Client_Id__c='${partnerDetails.clientKey}'+OR+Client_Id__c='${partnerDetails.key}')`\n        );\n        if (\n          salesForceData &&\n          salesForceData.records &&\n          salesForceData.records[0] &&\n          salesForceData.records[0].DQ_Question__c\n        ) {\n          setAcceptMeetings((prev) => ({\n            ...prev!,\n            question: salesForceData.records[0].DQ_Question__c,\n          }));\n        } else {\n          console.error(\"Invalid data format:\", salesForceData);\n        }\n      }\n\n      if (partnerDetails) {\n        const DQPartnerData = await fetchDataFromSalesForce(\n          `query/?q=SELECT+DQ_Partner__c+FROM+Meeting__c+WHERE+MemberC__c='${clientId}'+AND+(Client_Id__c='${partnerDetails.clientKey}'+OR+Client_Id__c='${partnerDetails.key}')`\n        );\n        if (\n          DQPartnerData &&\n          DQPartnerData.records &&\n          DQPartnerData.records[0] &&\n          DQPartnerData.records[0].DQ_Partner__c\n        ) {\n          setIsDQpartner((prev) => ({\n            ...prev!,\n            partner: DQPartnerData.records[0].DQ_Partner__c,\n          }));\n          setIsAcceptModalOpen(true);\n        } else {\n          console.log(\"no DQ Modal\");\n          showNoDQModal();\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching partner details:\", error);\n    } finally {\n      // setLoadingPartnerDetails(false);\n    }\n  };\n\n  useEffect(() => {\n    if (partnerDetails) {\n      setIsAccepted(\n        acceptedList.some((item) => item.key === partnerDetails.key)\n      );\n      setIsDeclined(\n        declinedList.some((item) => item.key === partnerDetails.key)\n      );\n    }\n  }, [partnerDetails, acceptedList, declinedList]);\n\n  const success = () => {\n    messageApi.open({\n      type: \"success\",\n      content: \"Data sent successfully\",\n    });\n  };\n\n  const handleAcceptClick = () => {\n    showAcceptAnswerModal();\n  };\n\n  const showRequestModal = () => {\n    setIsRequestModalOpen(true);\n  };\n\n  const handleCheckboxSelect = (checkboxValue: string) => {\n    setSelectedCheckbox(checkboxValue);\n  };\n\n  const handleRequestClick = () => {\n    if (partnerDetails) {\n      if (selectedCheckbox === \"Yes\") {\n        const partnerWithInterest = {\n          ...partnerDetails,\n          DQ_Response__c: selectedCheckbox,\n          Available_Dates_Times__c: interestTextAvailability,\n        };\n        console.log({ partnerWithInterest });\n        updatePartnerInSalesForce(partnerWithInterest, \"Accepted\");\n        onClose();\n        setInterestTextAvailability(\"\");\n        setIsAcceptModalOpen(false);\n      } else if (selectedCheckbox === \"No\") {\n        const partnerWithInterest = {\n          ...partnerDetails,\n          DQ_Response__c: selectedCheckbox,\n        };\n        console.log({ partnerWithInterest });\n        updatePartnerInSalesForce(partnerWithInterest, \"Client-Declined\");\n        onClose();\n        setInterestTextAvailability(\"\");\n        setIsAcceptModalOpen(false);\n      }\n    }\n  };\n\n  const handleRequestTextClick = () => {\n    if (partnerDetails) {\n      const partnerWithInterest = {\n        ...partnerDetails,\n        Interest_in_Partner__c: interestText,\n      };\n      updatePartnerInSalesForce(partnerWithInterest, \"Requested\");\n      onClose();\n      setInterestTextAvailability(\"\");\n      setIsAcceptModalOpen(false);\n    }\n  };\n\n  const handleNoDQClick = () => {\n    if (partnerDetails) {\n      const partnerWithInterest = {\n        ...partnerDetails,\n        Available_Dates_Times__c: interestTextAvailability,\n      };\n      updatePartnerInSalesForce(partnerWithInterest, \"Accepted\");\n      onClose();\n      setInterestTextAvailability(\"\");\n      setIsAcceptModalOpen(false);\n    }\n  };\n\n  const handleDeclineClick = () => {\n    if (partnerDetails && selectedCheckbox) {\n      if (!isDeclined) {\n        const declinedPartnerWithReason = {\n          ...partnerDetails,\n          declineReason: selectedCheckbox,\n        };\n        updatePartnerInSalesForce(declinedPartnerWithReason, \"Declined\");\n        onClose();\n        setIsDeclineModalOpen(false);\n      }\n      const declinedPartnerWithReason = {\n        ...partnerDetails,\n        declineReason: selectedCheckbox,\n      };\n      updatePartnerInSalesForce(declinedPartnerWithReason, \"Declined\");\n      onClose();\n      setIsDeclineModalOpen(false);\n    }\n  };\n\n  const showDeclineModal = () => {\n    setIsDeclineModalOpen(true);\n  };\n\n  const onDeclined = () => {\n    setIsDeclineModalOpen(false);\n  };\n\n  const handleCancelDeclined = () => {\n    setIsDeclineModalOpen(false);\n  };\n\n  const showAcceptModal = () => {\n    setIsAcceptModalOpen(true);\n  };\n\n  const showNoDQModal = () => {\n    setNoDQModalState(true);\n  };\n\n  const OnDQModalCancel = () => {\n    setNoDQModalState(false);\n  };\n\n  const onAccept = () => {\n    setIsAcceptModalOpen(false);\n  };\n\n  const handleCancelAccept = () => {\n    setIsAcceptModalOpen(false);\n  };\n\n  const handleCancelRequest = () => {\n    setIsRequestModalOpen(false);\n  };\n\n  const getDisplayLink = (url: string | undefined) => {\n    if (!url) {\n      return \"\";\n    }\n    try {\n      const parsedUrl = new URL(url);\n      const path = parsedUrl.pathname === \"/\" ? \"\" : parsedUrl.pathname;\n      return `${parsedUrl.hostname}${path}`;\n    } catch (e) {\n      return url;\n    }\n  };\n\n  function stripStyles(html: string) {\n    const domParser = new DOMParser();\n    const document = domParser.parseFromString(html, \"text/html\");\n    const allElements = document.querySelectorAll(\"*\");\n    allElements.forEach((element) => element.removeAttribute(\"style\"));\n    return document.body.innerHTML;\n  }\n\n  const renderAvatar = () => {\n    if (!partnerDetails || !partnerDetails.Client_Logo__c) {\n      return <Avatar shape=\"square\" size={48} icon={<UserOutlined />} />;\n    }\n\n    const isLink =\n      partnerDetails.Client_Logo__c.startsWith(\"http://\") ||\n      partnerDetails.Client_Logo__c.startsWith(\"https://\");\n\n    if (isLink) {\n      return (\n        <Avatar shape=\"square\" size={48} src={partnerDetails.Client_Logo__c} />\n      );\n    }\n\n    if (partnerDetails.Client_Logo__c.startsWith(\"<img\")) {\n      return (\n        <div\n          style={{ width: \"48px\", height: \"48px\" }}\n          dangerouslySetInnerHTML={{ __html: partnerDetails.Client_Logo__c }}\n        />\n      );\n    }\n\n    return <Avatar shape=\"square\" size={48} icon={<UserOutlined />} />;\n  };\n\n  const updatePartnerInSalesForce = async (\n    partner: PartnersDataType,\n    status: string\n  ) => {\n    let updatedFields = {};\n    let endpoint = \"\"; // Мы установим это значение ниже\n\n    // const incentiveName = selectedIncentives.length > 0 ? selectedIncentives[0].incentive : null;\n\n    switch (status) {\n      case \"Accepted\":\n        updatedFields = {\n          Stage_M__c: \"Member Accepted\",\n          // Sweepstakes_Type__c: partner\n          DQ_Response__c: partner.DQ_Response__c,\n          Available_Dates_Times__c: interestTextAvailability,\n        };\n        endpoint = `sobjects/Meeting__c/${partner.key}`;\n        break;\n\n      case \"Declined\":\n        updatedFields = {\n          Stage_M__c: \"Member Declined\",\n          Decline_Reason__c: partner.declineReason,\n        };\n        endpoint = `sobjects/Meeting__c/${partner.key}`;\n        break;\n\n      case \"Client-Declined\":\n        updatedFields = {\n          Stage_M__c: \"Client Declined\",\n          Client_Decline_Reason__c: \"No to DQ Question\",\n          DQ_Response__c: partner.DQ_Response__c,\n        };\n        endpoint = `sobjects/Meeting__c/${partner.key}`;\n        break;\n\n      case \"Requested\":\n        const today = new Date();\n        const formattedToday = `${today.getFullYear()}-${String(\n          today.getMonth() + 1\n        ).padStart(2, \"0\")}-${String(today.getDate()).padStart(2, \"0\")}`;\n\n        const memberId = await getMemberInfoFromContact(`${clientId}`);\n        if (!memberId) {\n          console.error(\"Cannot find Member ID.\");\n          return;\n        }\n\n        updatedFields = {\n          RecordTypeId: \"01236000000OoHj\",\n          // RecordTypeId: \"a0EHq00000yjyO4\",\n          Stage_M__c: \"Requested by Member\",\n          Member1__c: memberId.Member__c,\n          Member_Account__c: memberId.AccountId,\n          MemberC__c: memberId.Id,\n          Client_Campaign__c: partner.Client_Campaign_ID__c,\n          Meeting_Source__c: \"Member Portal\",\n          Intro_Type__c: \"Bulk\",\n          Request_Submitted_Date_M__c: formattedToday,\n          Interest_in_Partner__c: partner.Interest_in_Partner__c || \"\",\n        };\n        endpoint = `sobjects/Meeting__c/`;\n        break;\n    }\n\n    try {\n      if (status === \"Requested\") {\n        await createDataInSalesForce(endpoint, updatedFields);\n        success();\n      } else {\n        await updateDataInSalesForce(endpoint, updatedFields);\n        success();\n      }\n    } catch (error) {\n      console.error(`Error processing partner with ID ${partner.key}:`, error);\n    }\n  };\n\n  return (\n    <Drawer\n      footerStyle={{ border: \"none\" }}\n      closeIcon={false}\n      width={isMobile ? \"100%\" : isTablet ? \"60%\" : \"40%\"}\n      placement=\"right\"\n      onClose={onClose}\n      open={isOpen}\n    >\n      {partnerDetails && (\n        <section className={styles.drawerContainer}>\n          <NoDQModal\n            noDQModalState={noDQModalState}\n            showNoDQModal={showNoDQModal}\n            OnDQModalCancel={OnDQModalCancel}\n            interestTextAvailability={interestTextAvailability}\n            setInterestTextAvailability={setInterestTextAvailability}\n            onRequest={handleNoDQClick}\n          />\n          <AcceptRequestModal\n            isAcceptModalOpen={isAcceptModalOpen}\n            onAcceptShowModal={showAcceptModal}\n            onAccept={handleRequestClick}\n            OnAcceptCancel={handleCancelAccept}\n            interestTextAvailability={interestTextAvailability}\n            setInterestTextAvailability={setInterestTextAvailability}\n            onCheckboxChange={handleCheckboxSelect}\n            selectedCheckbox={selectedCheckbox}\n            acceptMeetings={acceptMeetings}\n          />\n          <RequestModal\n            selectedCheckbox={selectedCheckbox}\n            onCheckboxChange={handleCheckboxSelect}\n            isDeclineModalOpen={isDeclineModalOpen}\n            onDeclineShowModal={showDeclineModal}\n            onDecline={handleDeclineClick}\n            OnDeclineCancel={handleCancelDeclined}\n          />\n          <RequestTextModal\n            isRequestModalOpen={isRequestModalOpen}\n            onRequestShowModal={showRequestModal}\n            onRequest={handleRequestTextClick}\n            OnRequestCancel={handleCancelRequest}\n            interestText={interestText}\n            setInterestText={setInterestText}\n          />\n          <div className={styles.closeBtn}>\n            <h2>Request details</h2>\n            <CloseOutlined onClick={onClose} />\n          </div>\n          <div className={styles.drawerTitleContainer}>\n            <div>{renderAvatar()}</div>\n            <div>\n              <h3>{partnerDetails.partnerName}</h3>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={partnerDetails.website}\n              >\n                {getDisplayLink(partnerDetails.website)}\n              </a>\n            </div>\n          </div>\n          <div className={styles.drawerBtnContainer}>\n            {partnerDetails.hasRequested ? (\n              <>\n                <button\n                  disabled={isPartnerAccepted}\n                  onClick={handleAcceptClick}\n                  className={styles.drawerBtn}\n                >\n                  Accept\n                </button>\n                <button\n                  disabled={isPartnerDeclined}\n                  onClick={showDeclineModal}\n                  className={styles.drawerBtn}\n                >\n                  Decline\n                </button>\n              </>\n            ) : (\n              <>\n                <button\n                  disabled={isPartnerRequested}\n                  onClick={showRequestModal}\n                  className={styles.requestMeetBtn}\n                >\n                  Request to Meet\n                </button>\n              </>\n            )}\n          </div>\n          <br></br>\n          <article className={styles.drawerArticle}>\n            <h4 className={styles.drawerArticleTitle}>\n              Please review and ensure alignment with your role/interests before\n              accepting this meeting. If not aligned, kindly decline the\n              invitation.\n            </h4>\n            <p\n              style={{ fontSize: \"14px\" }}\n              className={styles.drawerArticleDescription}\n              dangerouslySetInnerHTML={{\n                __html: stripStyles(marked(partnerDetails.richMerge || \"\")),\n              }}\n            ></p>\n          </article>\n          <br></br>\n          <article className={styles.drawerArticle}>\n            <h4 className={styles.drawerArticleTitle}>\n              {partnerDetails.filterCategory ? \"Matching Priority areas\" : \"\"}\n            </h4>\n            <p className={styles.drawerArticleDescription}>\n              {\" \"}\n              {partnerDetails?.filterCategory?.join(\", \")}{\" \"}\n            </p>\n          </article>\n        </section>\n      )}\n    </Drawer>\n  );\n};\n\nexport default PartnerDrawer;\n","/Users/shannoncoakley/Documents/mp/src/components/layout/BurgerMenu.tsx",["462","463"],["464"],"import React, { FC, useState } from \"react\";\nimport { NavLink, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { Button, Drawer, Menu } from \"antd\";\nimport type { MenuProps } from \"antd\";\nimport styles from \"./style.module.sass\";\nimport Logo from \"../logo\";\nimport { ReactComponent as BurgerMenuSvg } from \"../../images/svgIcons/burgerMenu.svg\";\n\ntype MenuItem = Required<MenuProps>[\"items\"][number];\nfunction getItem(\n  label: React.ReactNode,\n  key: React.Key,\n  icon?: React.ReactNode\n): MenuItem {\n  return { key, icon, label } as MenuItem;\n}\nconst BurgerMenu: FC = () => {\n  const [open, setOpen] = useState(false);\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [current, setCurrent] = useState(\"Home\");\n  const location = useLocation();\n  const { clientId } = useParams<{ clientId: string }>();\n\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"clientId\");\n    navigate(\"/\");\n  };\n\n  const showDrawer = () => {\n    setOpen(true);\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  const itemsMenu: MenuProps[\"items\"] = [\n    getItem(<NavLink to={`/${clientId}/home`}>Home</NavLink>, \"Home\"),\n    getItem(\n      <NavLink to={`/${clientId}/meetings`}>Meetings</NavLink>,\n      \"Meetings\"\n    ),\n    getItem(\n      <NavLink to={`/${clientId}/incentives`}>Incentives</NavLink>,\n      \"Incentives\"\n    ),\n    getItem(<NavLink to={`/${clientId}/profile`}>Profile</NavLink>, \"Profile\"),\n  ];\n\n  return (\n    <>\n      <button onClick={showDrawer} className={styles.burgerMenuBtn}>\n        <BurgerMenuSvg />\n      </button>\n      <Drawer\n        footer={\n          <button className={styles.logoutBtn} onClick={handleLogout}>\n            Log Out\n          </button>\n        }\n        footerStyle={{ border: \"none\" }}\n        width={\"100%\"}\n        placement=\"right\"\n        onClose={onClose}\n        open={open}\n      >\n        <div>\n          <Logo />\n        </div>\n        <Menu\n          onClick={(e) => setCurrent(e.key)}\n          mode={\"vertical\"}\n          items={itemsMenu}\n          className={styles.burgerMenu}\n        />\n        <NavLink\n          className={styles.yourPendingMeetingsContainer}\n          to={`/${clientId}/bonus`}\n          //   onClick={showModal}\n        >\n          <p className={styles.yellowParagraph}>\n            Want to earn up to 5,000 bonus points? Click here!\n          </p>\n        </NavLink>\n      </Drawer>\n    </>\n  );\n};\n\nexport default BurgerMenu;\n","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/PartnerModal.tsx",["465","466","467"],[],"import {useState, FC, useEffect} from 'react';\nimport { Modal, Input, Checkbox, Empty} from 'antd';\n\nimport TreeCategories from \"./ui/TreeCategories\";\nimport styles from './styles.module.sass'\nimport {CloseOutlined, SearchOutlined} from \"@ant-design/icons\";\nimport {items} from './ui/TreeCategories'\n\n\ninterface PartnerModalProps {\n    isModalOpen: boolean;\n    onShowModal: () => void;\n    onOk: () => void;\n    OnCancel: () => void;\n    onViewOnlyRequestedChange: (checked: boolean) => void;\n    onApply: (searchValue: string, viewOnlyRequested: boolean, selectedCategories: string[]) => void;\n}\nconst PartnerModal: FC<PartnerModalProps> = ({ isModalOpen, onShowModal, onOk, OnCancel, onViewOnlyRequestedChange, onApply}) => {\n    const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n    const [checkboxStates, setCheckboxStates] = useState<Record<string, boolean>>({});\n    const [viewOnlyRequested, setViewOnlyRequested] = useState(true);\n    const [resetCheckboxes, setResetCheckboxes] = useState(false);\n    const [inputValue, setInputValue] = useState('');\n\n\n    const handleClearAll = () => {\n        setSelectedCategories([]);\n        setResetCheckboxes(true);\n    };\n\n\n    const handleSelectText = (text: string, checked: boolean) => {\n        setCheckboxStates(prevState => ({\n            ...prevState,\n            [text]: checked\n        }));\n\n        if (text === 'Select All') {\n            if (checked) {\n                setSelectedCategories(\n                    items\n                        .flatMap(item => (item.children || []).map(child => child.text))\n                        .filter(category => category !== 'Select All')\n                );\n            } else {\n                setSelectedCategories([]);\n            }\n        } else {\n            setSelectedCategories(prevSelected =>\n                checked\n                    ? [...prevSelected, text]\n                    : prevSelected.filter(category => category !== text)\n            );\n        }\n    };\n\n\n    return (\n        <>\n            <Modal width={'665px'} footer={null} closeIcon={false} open={isModalOpen} onOk={onOk} onCancel={OnCancel}>\n               <section className={styles.modalContainer}>\n                   <div className={styles.modalTitleContainer}>\n                           <h3>Browse All Partner</h3>\n                           <button onClick={() => {\n                               onApply(inputValue, viewOnlyRequested, selectedCategories);\n                               onOk();\n                           }} className={styles.declineSubBtn}>Apply</button>\n                           <button onClick={OnCancel} className={styles.cancelBtn}>Cancel</button>\n                   </div>\n                   <Input\n                       size={'middle'}\n                       prefix={inputValue === '' ? <SearchOutlined style={{ opacity: '40%', fontSize: '16px' }} /> : <span />}\n                       bordered={false}\n                       placeholder={\"search by name, keywords, categories, ets\"}\n                       value={inputValue}\n                       onChange={e => setInputValue(e.target.value)}\n                   />\n                   <div className={styles.filterContainer}>\n                       <div className={styles.dropdownContainer}>\n                           <TreeCategories onSelectText={handleSelectText} resetCheckboxes={resetCheckboxes} setResetCheckboxes={setResetCheckboxes} />\n                           <Checkbox onChange={(e) => {\n                               setViewOnlyRequested(e.target.checked);\n                               onViewOnlyRequestedChange(e.target.checked);\n                           }} defaultChecked={true} className={styles.reqCheck}>View only partners who have requested to meet</Checkbox>\n                       </div>\n                       <div className={styles.filterListContainer}>\n                           {selectedCategories.length > 0 ? (\n                               <>\n                                   <div className={styles.controlFilterList}>\n                                       <p>Added filters:</p>\n                                       <button onClick={handleClearAll}>Clear all</button>\n                                   </div>\n                                   <ul className={styles.filterList}>\n                                       {selectedCategories.map((category) => (\n                                           <li key={category}>{category}</li>\n                                       ))}\n                                   </ul>\n                               </>\n                           ) : (\n                               <Empty className={styles.empty} description={'no filter added'} image={false} />\n                           )}\n                       </div>\n                   </div>\n               </section>\n            </Modal>\n        </>\n    );\n};\n\nexport default PartnerModal;","/Users/shannoncoakley/Documents/mp/src/components/sections/meetingsSection/ClosedMeetingsTable.tsx",["468","469","470","471","472","473","474","475","476","477","478"],[],"import React, { FC, ReactNode, useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport type { TableProps } from \"antd\";\nimport { Table, Tag, List } from \"antd\";\nimport \"dayjs/locale/en\";\nimport type {\n  ColumnsType,\n  ColumnType,\n  FilterValue,\n} from \"antd/es/table/interface\";\nimport AcceptMeetingDetailsDrawer from \"./ui/AcceptMeetingDetailsDrawer\";\nimport styles from \"./styles.module.sass\";\nimport { fetchDataFromSalesForce } from \"../../../salesforceAuth\";\nimport { useParams } from \"react-router-dom\";\n\ninterface PartnersDataType {\n  key: string;\n  partnerName: string;\n  overview: string;\n  hasRequested: boolean;\n}\n\ninterface DataType {\n  key: string;\n  incentive: string;\n  moreInfo: string;\n  meetingsRequired: number;\n}\n\ninterface ClosedMeetingsTableDataType {\n  key: string;\n  partnerName: string;\n  overview?: string;\n  hasRequested?: boolean;\n  incentive: string;\n  moreInfo?: string;\n  meetingsRequired?: number;\n  stage: string;\n  meetingDate: string;\n  scheduleMeeting: string;\n  calendarLink: string;\n  showFeedbackLink: boolean;\n  memberFeedbackDate: string;\n  memberFeedbackLink: string;\n  meetingCompletedDate: string;\n}\n\nconst ClosedMeetingsTable: FC = () => {\n  const [filteredInfo, setFilteredInfo] = useState<\n    Record<string, FilterValue | null>\n  >({});\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [selectedPartner, setSelectedPartner] =\n    useState<ClosedMeetingsTableDataType | null>(null);\n  const [data, setData] = useState<ClosedMeetingsTableDataType[]>([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const { clientId } = useParams<{ clientId: string }>();\n\n  function formatDate(dateString: string): string {\n    const parts = dateString.split(\"-\");\n    if (parts.length === 3) {\n      const month = Number(parts[1]).toString();\n      const day = Number(parts[2]).toString();\n      return `${month}/${day}/${parts[0]}`;\n    }\n    return dateString;\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // Запрашиваем данные из Salesforce. В вашем случае, это данные о партнерах.\n        const salesForceData = await fetchDataFromSalesForce(\n          `query/?q=SELECT+Id,Client_Name__c,MemberC__c,Stage_MP__c,Stage_M__c,Request_Submitted_Date_M__c ,Incentive_Copy1__c,Meeting_Date_M__c,CMT_Calendar_Link__c,Member_Feedback_Link__c,Member_Feedback_Date__c,Meeting_Completed_Date__c+FROM+Meeting__c+WHERE+(Stage_MP__c=\\'Canceled by Client\\'+OR+Stage_MP__c=\\'Canceled by Member\\'+OR+Stage_MP__c=\\'Meeting Completed\\')+AND+MemberC__c='${clientId}'`\n        );\n\n        const transformedData = salesForceData.records.map((record: any) => ({\n          key: record.Id,\n          partnerName: record.Client_Name__c,\n          stage: record.Stage_MP__c || \"\",\n          incentive: record.Incentive_Copy1__c || \"\",\n          // meetingDate: record.Request_Submitted_Date_M__c || \"\",\n          meetingDate: record.Meeting_Date_M__c || \"\",\n          scheduleMeeting: record.Stage_M__c,\n          calendarLink: record.CMT_Calendar_Link__c,\n          showFeedbackLink:\n            record.Member_Feedback_Date__c === null &&\n            record.Meeting_Date_M__c &&\n            new Date(record.Meeting_Date_M__c) <= new Date(),\n          memberFeedbackDate: record.Member_Feedback_Date__c,\n          memberFeedbackLink: record.Member_Feedback_Link__c,\n          meetingCompletedDate: record.Meeting_Completed_Date__c,\n        }));\n        setData(transformedData);\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    }\n\n    void fetchData();\n  }, []);\n\n  const isMobile = useMediaQuery({ maxWidth: 880 });\n  const onCloseDrawer = () => {\n    setSelectedPartner(null);\n    setOpenDrawer(false);\n  };\n\n  const showDrawer = (partner: ClosedMeetingsTableDataType) => {\n    setSelectedPartner(partner);\n    setOpenDrawer(true);\n  };\n\n  const handleChange: TableProps<ClosedMeetingsTableDataType>[\"onChange\"] = (\n    pagination,\n    filters,\n    sorter\n  ) => {\n    setFilteredInfo(filters);\n  };\n  const handleChangePage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const columns: ColumnsType<ClosedMeetingsTableDataType> = [\n    {\n      title: \"NAME\",\n      dataIndex: \"partnerName\",\n      key: \"name\",\n      filteredValue: filteredInfo.partnerName || null,\n      onFilter: (value, record) =>\n        record.partnerName.includes(value.toString()),\n      sorter: (a, b) => a.partnerName.localeCompare(b.partnerName),\n      onCell: (record) => ({\n        onClick: () => showDrawer(record),\n      }),\n    },\n    {\n      title: \"\",\n      dataIndex: \"meetingCompletedDate\",\n      key: \"meetingCompletedDate\",\n      defaultSortOrder: \"descend\",\n      sorter: (a, b) =>\n        new Date(a.meetingCompletedDate || 0).getTime() -\n        new Date(b.meetingCompletedDate || 0).getTime(),\n      render: () => null,\n      sortIcon: () => null,\n    },\n    {\n      title: \"Stage\",\n      dataIndex: \"stage\",\n      key: \"stage\",\n      sorter: (a, b) => a.stage.localeCompare(b.stage),\n      onCell: (record) => ({\n        onClick: () => showDrawer(record),\n      }),\n      render: (value) => (value ? <Tag color={\"blue\"}>{value}</Tag> : \"-\"),\n    },\n    {\n      title: \"Meeting Date\",\n      dataIndex: \"meetingDate\",\n      key: \"meetingDate\",\n      sorter: (a, b) =>\n        new Date(a.meetingDate || 0).getTime() -\n        new Date(b.meetingDate || 0).getTime(),\n      render: (value) => (value ? formatDate(value) : \"-\"),\n      onCell: (record) => ({\n        onClick: () => showDrawer(record),\n      }),\n    },\n    {\n      title: \"Schedule Meeting\",\n      dataIndex: \"scheduleMeeting\",\n      key: \"scheduleMeeting\",\n      render: (value, record) => {\n        return value === \"Scheduling Meeting\" ? (\n          <div className={styles.btnScheduleMeeting}>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={record.calendarLink}\n            >\n              Schedule Meeting\n            </a>\n          </div>\n        ) : (\n          \"-\"\n        );\n      },\n      sorter: (a, b) =>\n        (a.scheduleMeeting === \"Scheduling Meeting\" ? 1 : 0) -\n        (b.scheduleMeeting === \"Scheduling Meeting\" ? 1 : 0),\n    },\n    {\n      title: \"Feedback Link\",\n      dataIndex: \"showFeedbackLink\",\n      key: \"showFeedbackLink\",\n      render: (value, record) =>\n        value ? (\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ textDecoration: \"underline\", color: \"black\" }}\n            href={record.memberFeedbackLink}\n          >\n            Submit here\n          </a>\n        ) : (\n          \"-\"\n        ),\n      sorter: (a, b) =>\n        (a.showFeedbackLink ? 1 : 0) - (b.showFeedbackLink ? 1 : 0),\n    },\n  ];\n\n  return (\n    <>\n      {isMobile ? (\n        <section className={styles.acceptedMeetingsTableContainer}>\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={data}\n            pagination={{\n              defaultPageSize: 6,\n              defaultCurrent: 1,\n              total: data.length,\n              style: {\n                display: \"flex\",\n                justifyContent: \"center\",\n              },\n            }}\n            renderItem={(item) => (\n              <List.Item\n                onClick={() => showDrawer(item)}\n                className={styles.mobileListItemContainer}\n              >\n                <div className={styles.mobileListFirstColumn}>\n                  <span className={styles.mobileListTitle}>\n                    {item.partnerName}\n                  </span>\n                  <p>Stage</p>\n                  <p>Incentive</p>\n                  <p>Meeting Date</p>\n                  <p>Schedule Meeting</p>\n                  <p>Feedback Link</p>\n                </div>\n                <div className={styles.mobileListSecondColumn}>\n                  <span className={styles.mobileListTitle}></span>\n                  {columns.map(\n                    (\n                      column: ColumnType<ClosedMeetingsTableDataType>,\n                      index\n                    ) => {\n                      if (index === 0) {\n                        return null;\n                      }\n                      return (\n                        <p key={`${item.key}${column.key}`}>\n                          {column.render\n                            ? (column.render(\n                                item[\n                                  column.dataIndex as keyof ClosedMeetingsTableDataType\n                                ],\n                                item,\n                                index\n                              ) as ReactNode)\n                            : item[\n                                column.dataIndex as keyof ClosedMeetingsTableDataType\n                              ]}\n                        </p>\n                      );\n                    }\n                  )}\n                </div>\n              </List.Item>\n            )}\n          />\n          <AcceptMeetingDetailsDrawer\n            acceptedMeetingsDetails={selectedPartner}\n            isOpen={openDrawer}\n            onClose={onCloseDrawer}\n          />\n        </section>\n      ) : (\n        <section className={styles.acceptedMeetingsTableContainer}>\n          <Table\n            columns={columns}\n            style={{ minHeight: \"100%\" }}\n            pagination={{\n              defaultPageSize: 6,\n              defaultCurrent: 1,\n              total: data.length,\n              style: {\n                display: \"flex\",\n                justifyContent: \"center\",\n              },\n            }}\n            dataSource={data}\n            onChange={handleChange}\n            className={styles.table}\n          />\n          <AcceptMeetingDetailsDrawer\n            acceptedMeetingsDetails={selectedPartner}\n            isOpen={openDrawer}\n            onClose={onCloseDrawer}\n          />\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default ClosedMeetingsTable;\n","/Users/shannoncoakley/Documents/mp/src/components/sections/meetingsSection/PendingMeetingsTable.tsx",["479","480","481","482","483","484","485","486","487","488","489","490"],[],"import React, { FC, ReactNode, useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport type { TableProps } from \"antd\";\nimport { Table, Tag, List, Pagination } from \"antd\";\nimport \"dayjs/locale/en\";\nimport type {\n  ColumnsType,\n  ColumnType,\n  FilterValue,\n} from \"antd/es/table/interface\";\nimport AcceptMeetingDetailsDrawer from \"./ui/AcceptMeetingDetailsDrawer\";\nimport styles from \"./styles.module.sass\";\nimport { fetchDataFromSalesForce } from \"../../../salesforceAuth\";\nimport { useParams } from \"react-router-dom\";\n\ninterface PartnersDataType {\n  key: string;\n  partnerName: string;\n  overview: string;\n  hasRequested: boolean;\n}\n\ninterface DataType {\n  key: string;\n  incentive: string;\n  moreInfo: string;\n  meetingsRequired: number;\n}\n\ninterface PendingMeetingsTableDataType {\n  key: string;\n  partnerName: string;\n  overview?: string;\n  hasRequested?: boolean;\n  incentive: string;\n  moreInfo?: string;\n  meetingsRequired?: number;\n  stage: string;\n  meetingDate: string;\n  scheduleMeeting: string;\n  calendarLink: string;\n  showFeedbackLink: boolean;\n  memberFeedbackDate: string;\n  memberFeedbackLink: string;\n  memberResponseDate: string;\n}\n\nconst PendingMeetingsTable: FC = () => {\n  const [filteredInfo, setFilteredInfo] = useState<\n    Record<string, FilterValue | null>\n  >({});\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [selectedPartner, setSelectedPartner] =\n    useState<PendingMeetingsTableDataType | null>(null);\n  const [data, setData] = useState<PendingMeetingsTableDataType[]>([]);\n  const { clientId } = useParams<{ clientId: string }>();\n\n  function formatDate(dateString: string): string {\n    const parts = dateString.split(\"-\");\n    if (parts.length === 3) {\n      const month = Number(parts[1]).toString();\n      const day = Number(parts[2]).toString();\n      return `${month}/${day}/${parts[0]}`;\n    }\n    return dateString;\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        // Запрашиваем данные из Salesforce. В вашем случае, это данные о партнерах.\n        const salesForceData = await fetchDataFromSalesForce(\n          `query/?q=SELECT+Id,Client_Name__c,MemberC__c,Stage_MP__c,Stage_M__c,Incentive_Copy1__c,Meeting_Date_M__c,Request_Submitted_Date_M__c\n\t\t  ,CMT_Calendar_Link__c,Member_Feedback_Link__c,Member_Feedback_Date__c,Member_Response_Date_M__c+FROM+Meeting__c+WHERE+(Stage_MP__c!=\\'N/A\\'+AND+Stage_MP__c!=\\'Canceled by Client\\'+AND+Stage_MP__c!=\\'Canceled by Member\\'+AND+Stage_MP__c!=\\'Meeting Completed\\')+AND+MemberC__c='${clientId}'`\n        );\n        console.log(\"salesForceData\", salesForceData.records);\n        const transformedData = salesForceData.records.map((record: any) => ({\n          key: record.Id,\n          partnerName: record.Client_Name__c,\n          stage: record.Stage_MP__c || \"\",\n          incentive: record.Incentive_Copy1__c || \"\",\n          //   meetingDate: record.Request_Submitted_Date_M__c || \"\",\n          meetingDate: record.Meeting_Date_M__c || \"\",\n          scheduleMeeting: record.Stage_M__c,\n          calendarLink: record.CMT_Calendar_Link__c,\n          showFeedbackLink:\n            record.Member_Feedback_Date__c === null &&\n            record.Meeting_Date_M__c &&\n            new Date(record.Meeting_Date_M__c) <= new Date(),\n          memberFeedbackDate: record.Member_Feedback_Date__c,\n          memberFeedbackLink: record.Member_Feedback_Link__c,\n          memberResponseDate: record.Member_Response_Date_M__c,\n        }));\n        setData(transformedData);\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    }\n\n    void fetchData();\n  }, []);\n\n  console.log(data);\n\n  const isMobile = useMediaQuery({ maxWidth: 880 });\n  const onCloseDrawer = () => {\n    setSelectedPartner(null);\n    setOpenDrawer(false);\n  };\n\n  const showDrawer = (partner: PendingMeetingsTableDataType) => {\n    setSelectedPartner(partner);\n    setOpenDrawer(true);\n  };\n\n  const handleChange: TableProps<PendingMeetingsTableDataType>[\"onChange\"] = (\n    pagination,\n    filters,\n    sorter\n  ) => {\n    setFilteredInfo(filters);\n  };\n\n  const columns: ColumnsType<PendingMeetingsTableDataType> = [\n    {\n      title: \"NAME\",\n      dataIndex: \"partnerName\",\n      key: \"name\",\n      filteredValue: filteredInfo.partnerName || null,\n      onFilter: (value, record) =>\n        record.partnerName.includes(value.toString()),\n      sorter: (a, b) => a.partnerName.localeCompare(b.partnerName),\n      onCell: (record) => ({\n        onClick: () => showDrawer(record),\n      }),\n    },\n    {\n      title: \"\",\n      // dataIndex: 'memberResponseDate',\n      key: \"memberResponseDate\",\n      defaultSortOrder: \"descend\",\n      sorter: (a, b) =>\n        new Date(a.memberResponseDate || 0).getTime() -\n        new Date(b.memberResponseDate || 0).getTime(),\n      render: () => null,\n      showSorterTooltip: false,\n      sortIcon: () => null,\n    },\n    {\n      title: \"Stage\",\n      dataIndex: \"stage\",\n      key: \"stage\",\n      sorter: (a, b) => a.stage.localeCompare(b.stage),\n      onCell: (record) => ({\n        onClick: () => showDrawer(record),\n      }),\n      render: (value) => (value ? <Tag color={\"blue\"}>{value}</Tag> : \"-\"),\n    },\n    {\n      title: \"Meeting Date\",\n      dataIndex: \"meetingDate\",\n      key: \"meetingDate\",\n      sorter: (a, b) =>\n        new Date(a.meetingDate || 0).getTime() -\n        new Date(b.meetingDate || 0).getTime(),\n      render: (value) => (value ? formatDate(value) : \"-\"),\n      onCell: (record) => ({\n        onClick: () => showDrawer(record),\n      }),\n    },\n    {\n      title: \"Schedule Meeting\",\n      dataIndex: \"scheduleMeeting\",\n      key: \"scheduleMeeting\",\n      render: (value, record) => {\n        return value === \"Scheduling Meeting\" ? (\n          <div className={styles.btnScheduleMeeting}>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={record.calendarLink}\n            >\n              Schedule Meeting\n            </a>\n          </div>\n        ) : (\n          \"-\"\n        );\n      },\n      sorter: (a, b) =>\n        (a.scheduleMeeting === \"Scheduling Meeting\" ? 1 : 0) -\n        (b.scheduleMeeting === \"Scheduling Meeting\" ? 1 : 0),\n    },\n    {\n      title: \"Feedback Link\",\n      dataIndex: \"showFeedbackLink\",\n      key: \"showFeedbackLink\",\n      render: (value, record) =>\n        value ? (\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ textDecoration: \"underline\", color: \"black\" }}\n            href={record.memberFeedbackLink}\n          >\n            Submit here\n          </a>\n        ) : (\n          \"-\"\n        ),\n      sorter: (a, b) =>\n        (a.showFeedbackLink ? 1 : 0) - (b.showFeedbackLink ? 1 : 0),\n    },\n  ];\n\n  return (\n    <>\n      {isMobile ? (\n        <section className={styles.acceptedMeetingsTableContainer}>\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={data}\n            pagination={{\n              defaultPageSize: 6,\n              defaultCurrent: 1,\n              total: data.length,\n              style: {\n                display: \"flex\",\n                justifyContent: \"center\",\n              },\n            }}\n            renderItem={(item) => (\n              <List.Item\n                onClick={() => showDrawer(item)}\n                className={styles.mobileListItemContainer}\n              >\n                <div className={styles.mobileListFirstColumn}>\n                  <span className={styles.mobileListTitle}>\n                    {item.partnerName}\n                  </span>\n                  <p>Stage</p>\n                  <p>Incentive</p>\n                  <p>Meeting Date</p>\n                  <p>Schedule Meeting</p>\n                  <p>Feedback Link</p>\n                </div>\n                <div className={styles.mobileListSecondColumn}>\n                  <span className={styles.mobileListTitle}></span>\n                  {columns.map(\n                    (\n                      column: ColumnType<PendingMeetingsTableDataType>,\n                      index\n                    ) => {\n                      if (index === 0) {\n                        return null;\n                      }\n                      return (\n                        <p key={`${item.key}${column.key}`}>\n                          {column.render\n                            ? (column.render(\n                                item[\n                                  column.dataIndex as keyof PendingMeetingsTableDataType\n                                ],\n                                item,\n                                index\n                              ) as ReactNode)\n                            : item[\n                                column.dataIndex as keyof PendingMeetingsTableDataType\n                              ]}\n                        </p>\n                      );\n                    }\n                  )}\n                </div>\n              </List.Item>\n            )}\n          />\n          <AcceptMeetingDetailsDrawer\n            acceptedMeetingsDetails={selectedPartner}\n            isOpen={openDrawer}\n            onClose={onCloseDrawer}\n          />\n        </section>\n      ) : (\n        <section className={styles.acceptedMeetingsTableContainer}>\n          <Table\n            columns={columns}\n            style={{ minHeight: \"100%\" }}\n            pagination={{\n              defaultPageSize: 6,\n              defaultCurrent: 1,\n              total: data.length,\n              style: {\n                display: \"flex\",\n                justifyContent: \"center\",\n              },\n            }}\n            dataSource={data}\n            onChange={handleChange}\n            className={styles.table}\n          />\n\n          <AcceptMeetingDetailsDrawer\n            acceptedMeetingsDetails={selectedPartner}\n            isOpen={openDrawer}\n            onClose={onCloseDrawer}\n          />\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default PendingMeetingsTable;\n","/Users/shannoncoakley/Documents/mp/src/components/sections/meetingsSection/DeclineMeetingsTable.tsx",["491","492","493","494","495","496","497","498","499","500","501","502","503","504"],[],"import React, { FC, useEffect, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport type { TableProps } from \"antd\";\nimport { List, Pagination, Table, Tag } from \"antd\";\nimport type {\n  ColumnsType,\n  FilterValue,\n  SorterResult,\n} from \"antd/es/table/interface\";\nimport {\n  usePartnerContext,\n  useIncentivesContext,\n} from \"../homeSection/contexts/IncentivesContext\";\nimport styles from \"./styles.module.sass\";\nimport DeclineMeetingDetailsDrawer from \"./ui/DeclineMeetingDetailsDrawer\";\nimport {\n  fetchDataFromSalesForce,\n  updateDataInSalesForce,\n} from \"../../../salesforceAuth\";\nimport { useParams } from \"react-router-dom\";\n\ninterface PartnersDataType {\n  key: string;\n  partnerName: string;\n  overview: string;\n  hasRequested: boolean;\n  declineReason?: string | JSX.Element;\n  action?: string | JSX.Element;\n  Stage_M__c?: string;\n  Stage_MP__c?: string;\n  Related_Membership_Member__c: string;\n  Related_Membership__c: string;\n  Survey_Option_Name__c: string[];\n  filterCategory?: string[];\n  Client_Logo__c?: string;\n  memberResponseDate: string;\n}\n\nconst DeclineMeetingsTable: FC = () => {\n  const [filteredInfo, setFilteredInfo] = useState<\n    Record<string, FilterValue | null>\n  >({});\n  // const [sortedInfo, setSortedInfo] = useState<SorterResult<PartnersDataType>>(\n  //   {}\n  // );\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [selectedPartner, setSelectedPartner] =\n    useState<PartnersDataType | null>(null);\n  const [isAcceptModalOpen, setIsAcceptModalOpen] = useState(false);\n  const {\n    declinedList,\n    addRequestedPartner,\n    requestedList,\n    removeSavedDeclinePartner,\n    savedDeclinedList,\n  } = usePartnerContext();\n  const { selectedIncentives } = useIncentivesContext();\n  const partnerContext = usePartnerContext();\n  const incentivesContext = useIncentivesContext();\n  const [data, setData] = useState<PartnersDataType[]>([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const { clientId } = useParams<{ clientId: string }>();\n  const isMobile = useMediaQuery({ maxWidth: 880 });\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const salesForceData = await fetchDataFromSalesForce(\n          `query/?q=SELECT+Id,MemberC__c,Client_Name__c,Quick_Overview__c,Decline_Reason__c,Stage_M__c,Member_Response_Date_M__c+FROM+Meeting__c+WHERE+Stage_M__c=\\'Member Declined\\'+AND+MemberC__c='${clientId}'`\n        );\n\n        const transformedData = salesForceData.records.map((record: any) => ({\n          key: record.Id,\n          partnerName: record.Client_Name__c,\n          overview: record.Quick_Overview__c || \"No phone provided\",\n          hasRequested: true,\n          declineReason:\n            record.Decline_Reason__c === \"Timing\"\n              ? \"No time\"\n              : record.Decline_Reason__c === \"Job Function/Role\"\n              ? \"Does not align w/ role\"\n              : record.Decline_Reason__c,\n          memberResponseDate: record.Member_Response_Date_M__c,\n        }));\n\n        setData(transformedData);\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    }\n\n    void fetchData();\n  }, []);\n\n  const onCloseDrawer = () => {\n    setSelectedPartner(null);\n    setOpenDrawer(false);\n  };\n\n  const showDrawer = (partner: PartnersDataType) => {\n    setSelectedPartner(partner);\n    setOpenDrawer(true);\n  };\n\n  const revertPartnerStatusInSalesForce = async (partnerKey: string) => {\n    const partner = data.find((p) => p.key === partnerKey);\n\n    if (!partner) {\n      console.error(\"Partner not found!\");\n      return;\n    }\n\n    const updatedData = {\n      Stage_M__c: \"Request Queued\",\n    };\n\n    try {\n      await updateDataInSalesForce(\n        `/sobjects/Meeting__c/${partner.key}`,\n        updatedData\n      );\n      const updatedPartners = data.filter((p) => p.key !== partnerKey);\n      setData(updatedPartners);\n    } catch (error) {\n      console.error(\"Error reverting partner status:\", error);\n    }\n  };\n\n  const handleRemoveDeclineClick = (partner: PartnersDataType) => {\n    setSelectedPartner(partner);\n    removeSavedDeclinePartner(partner);\n    setIsAcceptModalOpen(false);\n  };\n\n  const handleChange: TableProps<PartnersDataType>[\"onChange\"] = (\n    pagination,\n    filters,\n    sorter\n  ) => {\n    // console.log(\"Various parameters\", pagination, filters, sorter);\n    setFilteredInfo(filters);\n    // setSortedInfo(sorter as SorterResult<PartnersDataType>);\n  };\n  // const handleChangePage = (page: number) => {\n  //   setCurrentPage(page);\n  // };\n\n  const visibleData =\n    partnerContext.submitConfirmed && incentivesContext.submitConfirmed\n      ? declinedList\n      : [];\n\n  const columns: ColumnsType<PartnersDataType> = [\n    {\n      title: \"NAME\",\n      dataIndex: \"partnerName\",\n      key: \"name\",\n      width: \"40%\",\n      filteredValue: filteredInfo.partnerName || null,\n      onFilter: (value, record) =>\n        record.partnerName.includes(value.toString()),\n      sorter: (a, b) => a.partnerName.localeCompare(b.partnerName),\n      // sortOrder: sortedInfo.columnKey === 'name' ? sortedInfo.order : null,\n      onCell: (record) => ({\n        onClick: () => showDrawer(record),\n      }),\n    },\n    {\n      title: \"\",\n      dataIndex: \"memberResponseDate\",\n      key: \"memberResponseDate\",\n      defaultSortOrder: \"descend\",\n      sorter: (a, b) =>\n        new Date(a.memberResponseDate || 0).getTime() -\n        new Date(b.memberResponseDate || 0).getTime(),\n      render: () => null,\n      sortIcon: () => null,\n    },\n    {\n      title: \"Decline Reason\",\n      dataIndex: \"declineReason\",\n      key: \"declineReason\",\n      onCell: (record) => ({\n        onClick: () => showDrawer(record),\n      }),\n      render: (text, record) =>\n        record.declineReason ? (\n          <Tag color={\"blue\"}>{record.declineReason}</Tag>\n        ) : (\n          \"\"\n        ),\n    },\n    {\n      title: \"Action\",\n      dataIndex: \"action\",\n      key: \"action\",\n      onCell: (record) => ({\n        onClick: async () => {\n          await revertPartnerStatusInSalesForce(record.key);\n        },\n      }),\n      render: (text, action) => (\n        <button className={styles.requestBtn}>Change My Choice</button>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      {isMobile ? (\n        <section className={styles.declineMeetingsTableContainer}>\n          <List\n            itemLayout=\"horizontal\"\n            dataSource={data}\n            pagination={{\n              defaultPageSize: 6,\n              defaultCurrent: 1,\n              total: data.length,\n              style: {\n                display: \"flex\",\n                justifyContent: \"center\",\n              },\n            }}\n            renderItem={(item) => (\n              <List.Item className={styles.mobileDeclineListItemContainer}>\n                <div\n                  onClick={() => showDrawer(item)}\n                  className={styles.declineListContainer}\n                >\n                  <div className={styles.mobileListFirstColumn}>\n                    <span className={styles.mobileListTitle}>\n                      {item.partnerName}\n                    </span>\n                    <p>Decline Reason</p>\n                  </div>\n                  <div className={styles.mobileListSecondColumn}>\n                    <span className={styles.mobileListTitle}></span>\n                    <p>\n                      {item.declineReason ? (\n                        <Tag color={\"blue\"}>{item.declineReason}</Tag>\n                      ) : (\n                        \"—\"\n                      )}\n                    </p>\n                  </div>\n                </div>\n                <button\n                  onClick={async () =>\n                    await revertPartnerStatusInSalesForce(item.key)\n                  }\n                  className={styles.requestBtn}\n                >\n                  Change My Choice\n                </button>\n              </List.Item>\n            )}\n          />\n          <DeclineMeetingDetailsDrawer\n            declineMeetingsDetails={selectedPartner}\n            onClose={onCloseDrawer}\n            isOpen={openDrawer}\n            revertStatus={revertPartnerStatusInSalesForce}\n          />\n        </section>\n      ) : (\n        <section className={styles.declineMeetingsTableContainer}>\n          <Table\n            columns={columns}\n            pagination={{\n              defaultPageSize: 6,\n              defaultCurrent: 1,\n              total: data.length,\n              style: {\n                display: \"flex\",\n                justifyContent: \"center\",\n              },\n            }}\n            dataSource={data}\n            onChange={handleChange}\n            className={styles.table}\n          />\n          <DeclineMeetingDetailsDrawer\n            declineMeetingsDetails={selectedPartner}\n            onClose={onCloseDrawer}\n            isOpen={openDrawer}\n            revertStatus={revertPartnerStatusInSalesForce}\n          />\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default DeclineMeetingsTable;\n","/Users/shannoncoakley/Documents/mp/src/components/sections/profileSection/ui/UserForm.tsx",["505","506","507","508","509","510","511","512","513","514","515","516","517","518"],[],"import React, {useState, useEffect} from 'react';\nimport {useForm, Controller, SubmitHandler, UseFormRegister, useFormContext} from 'react-hook-form';\nimport {Modal, Drawer, Tag, message, Result} from 'antd';\nimport styles from '../styles.module.sass'\nimport {useMediaQuery} from \"react-responsive\";\nimport {fetchDataFromSalesForce} from \"../../../../salesforceAuth\";\nimport {NavLink, useParams} from \"react-router-dom\";\nimport {updateDataInSalesForce} from \"../../../../salesforceAuth\";\n\n\ntype FormData = {\n    fullName?: string;\n    email?: string;\n    password: string;\n    confirmPassword: string;\n    memberPassword: string;\n};\n\nconst UserForm: React.FC<{ setAvatarInitials: React.Dispatch<React.SetStateAction<string | null>> }> = ({ setAvatarInitials }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const { register, handleSubmit, formState: { errors, isValid }, control, watch, reset} = useForm<FormData>({mode: \"onChange\"});\n    const [data, setData] = useState<FormData []>([]);\n    const [messageApi, contextHolder] = message.useMessage();\n    const isMobile = useMediaQuery({ maxWidth: 610 })\n    const { clientId } = useParams<{ clientId: string }>();\n    const [error, setError] = useState<string | null>(null);\n\n    const success = () => {\n        messageApi.open({\n            type: 'success',\n            content: 'Password updated successfully!',\n        });\n    };\n\n    const decline = () => {\n        messageApi.open({\n            type: 'success',\n            content: 'Failed to update password. Please try again later.',\n        });\n    };\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const salesForceData = await fetchDataFromSalesForce(`query/?q=SELECT+Id,Member_Portal_Password__c,Full_Name__c,Email+FROM+Contact+WHERE+(Membership_Status__c = \\'Active\\'+OR+Membership_Status__c = \\'Testing\\')+AND+RecordTypeId = \\'01236000000yGps\\'+AND+Id='${clientId}'`);\n\n                const transformedData = salesForceData.records.map((record: any) => ({\n                    key: record.Id,\n                    fullName: record.Full_Name__c,\n                    email: record.Email,\n                    memberPassword: record.Member_Portal_Password__c,\n                }));\n                setData(transformedData);\n            } catch (error) {\n                console.log(error)\n                setError('Failed')\n\n            }\n        }\n\n        void fetchData();\n    }, [clientId]);\n\n\n    const showModal = () => {\n        setIsModalOpen(true);\n    };\n\n    const handleOk = () => {\n        setIsModalOpen(false);\n    };\n\n    const handleCancel = () => {\n        reset();\n        setIsModalOpen(false);\n    };\n\n    const onSubmit: SubmitHandler<FormData> = async (data) => {\n        const endpoint = `/sobjects/Contact/${clientId}`;\n        const updateData = {\n            Member_Portal_Password__c: data.password\n        };\n\n        try {\n            await updateDataInSalesForce(endpoint, updateData);\n            handleOk();\n            success()\n        } catch (error) {\n            console.error('Failed to update password:', error);\n            decline()\n        }\n    };\n\n    const password = watch('password', '');\n    const confirmPassword = watch('confirmPassword', '');\n\n\n    return (\n        <div className={styles.formContainer}>\n            {contextHolder}\n            <h2 className={styles.formContainerTitle}>My account</h2>\n            <hr/>\n            <h4 className={styles.formContainerSubTitle}>Personal information</h4>\n\n                <div className={styles.inputContainer}>\n                    <small className={styles.inputLabel}>Full Name</small>\n                    <p className={styles.input}>{data[0]?.fullName || 'Loading...'}</p>\n                </div>\n                <div className={styles.inputContainer}>\n                    <small className={styles.inputLabel}>Email</small>\n                    <p className={styles.input}>{data[0]?.email || 'Loading...'}</p>\n                </div>\n                <hr style={{opacity: '50%'}}/>\n                <h4 className={styles.formContainerSubTitle}>Account changes</h4>\n                <p>Password</p>\n                {data[0]?.memberPassword ? (\n                    <p className={styles.passwordDescription}>You can change password</p>\n\n                ) : (\n                    <p className={styles.passwordDescription}>You can set a permanent password if you don't want to use temporary login codes.</p>\n                )}\n                <button onClick={showModal} className={styles.setPasswordBtn}>{data[0]?.memberPassword ? \"Change Password\" : \"Set Password\"}</button>\n                <hr style={{opacity: '50%'}}/>\n                {isMobile ? (\n                    <Drawer\n                        footerStyle={{ border: 'none' }}\n                        closeIcon={false}\n                        width={'100%'}\n                        placement=\"right\"\n                        onClose={handleCancel}\n                        open={isModalOpen}\n                    >\n                        <section className={styles.setPasswordDrawer}>\n                            <form>\n                                <div className={styles.setPasswordDrawerTitle}>\n                                    <h3>{data[0]?.memberPassword ? \"Change Password\" : \"Set Password\"}</h3>\n                                </div>\n                                <div className={styles.setPasswordDrawerForm}>\n                                    <div className={styles.passwordInputContainer}>\n                                        <label className={styles.inputLabel}>Create Password</label>\n                                        <input\n                                            placeholder={'Enter your password'}\n                                            className={styles.input}\n                                            type=\"password\"\n                                            {...register('password', {\n                                                minLength: {\n                                                    value: 8,\n                                                    message: 'Password must be at least 8 characters',\n                                                },\n                                            })}\n                                        />\n                                        <div>{errors?.password && <p>{errors.password.message}</p>}</div>\n                                    </div>\n                                    <div className={styles.passwordInputContainer}>\n                                        <label className={styles.inputLabel}>Confirm Password</label>\n                                        <input\n                                            placeholder={'Enter your password'}\n                                            className={styles.input}\n                                            type=\"password\"\n                                            {...register('confirmPassword', {\n                                                validate: (value) =>\n                                                    value === password || 'Passwords do not match',\n                                            })}\n                                        />\n                                        <div>{errors?.confirmPassword && (\n                                            <p>{errors.confirmPassword.message}</p>\n                                        )}</div>\n                                    </div>\n                                    <div className={styles.setPasswordDrawerBtnContainer}>\n                                        <button type={\"button\"} onClick={handleCancel} className={styles.cancelBtn}>Cancel</button>\n                                        <button onClick={handleSubmit(onSubmit)} disabled={!password || password !== confirmPassword || !isValid} className={styles.saveBtn}>Save</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </section>\n                    </Drawer>\n                ) : (\n                    <Modal width={'665px'} centered={true} closeIcon={false} footer={null} open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\n                        <section className={styles.setPasswordModal}>\n                            <form >\n                                <div className={styles.setPasswordModalTitle}>\n                                    <h3>{data[0]?.memberPassword ? \"Change Password\" : \"Set Password\"}</h3>\n                                    <button type={\"button\"} onClick={handleCancel} className={styles.cancelBtn}>Cancel</button>\n                                    <button onClick={handleSubmit(onSubmit)} disabled={!password || password !== confirmPassword || !isValid} className={styles.saveBtn}>Save</button>\n                                </div>\n\n                                <div className={styles.setPasswordModalForm}>\n                                    <div className={styles.passwordInputContainer}>\n                                        <label className={styles.inputLabel}>Create Password</label>\n                                        <input\n                                            placeholder={'Enter your password'}\n                                            className={styles.input}\n                                            type=\"password\"\n                                            {...register('password', {\n                                                minLength: {\n                                                    value: 8,\n                                                    message: 'Password must be at least 8 characters',\n                                                },\n                                            })}\n                                        />\n                                        <div>{errors?.password && <p>{errors.password.message}</p>}</div>\n                                    </div>\n                                    <div className={styles.passwordInputContainer}>\n                                        <label className={styles.inputLabel}>Confirm Password</label>\n                                        <input\n                                            placeholder={'Enter your password'}\n                                            className={styles.input}\n                                            type=\"password\"\n                                            {...register('confirmPassword', {\n                                                validate: (value) =>\n                                                    value === password || 'Passwords do not match',\n                                            })}\n                                        />\n                                        <div>{errors?.confirmPassword && (\n                                            <p>{errors.confirmPassword.message}</p>\n                                        )}</div>\n                                    </div>\n                                </div>\n                            </form>\n                        </section>\n                    </Modal>\n                )}\n        </div>\n    );\n\n}\n\nexport default UserForm;","/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/CheckoutDrawer.tsx",["519"],[],"import React, { useState, FC, useEffect } from \"react\";\nimport { Button, Drawer, Form, Input } from \"antd\";\nimport { useMediaQuery } from \"react-responsive\";\nimport styles from \"./styles.module.sass\";\nimport { CloseOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  createDataInSalesForce,\n  updateDataInSalesForce,\n} from \"../../../salesforceAuth\";\nimport { useIncentivesContext } from \"../homeSection/contexts/IncentivesContext\";\n\ninterface CheckoutDrawerProps {\n  isOpen: boolean;\n  onClose: () => void;\n  contactInfo: any;\n  totalPoints: number;\n}\n\ntype FieldType = {\n  street?: string;\n  city?: string;\n  state?: string;\n  postalCode?: string;\n  country?: string;\n};\n\nconst CheckoutDrawer: FC<CheckoutDrawerProps> = ({\n  isOpen,\n  onClose,\n  contactInfo,\n  totalPoints,\n}) => {\n  const { clientId } = useParams<{ clientId: string }>();\n  const [form] = Form.useForm();\n\n  const [formData, setFormData] = useState<FieldType>({\n    street: contactInfo?.Mailing_Address_Verified_Date__c\n      ? contactInfo?.MailingStreet\n      : \"\",\n    city: contactInfo?.Mailing_Address_Verified_Date__c\n      ? contactInfo?.MailingCity\n      : \"\",\n    state: contactInfo?.Mailing_Address_Verified_Date__c\n      ? contactInfo?.MailingState\n      : \"\",\n    postalCode: contactInfo?.Mailing_Address_Verified_Date__c\n      ? contactInfo?.MailingPostalCode\n      : \"\",\n    country: contactInfo?.Mailing_Address_Verified_Date__c\n      ? contactInfo?.MailingCountry\n      : \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const incentiveContext = useIncentivesContext();\n  const cartItems = incentiveContext.cartItems || [];\n\n  const isMobile = useMediaQuery({ maxWidth: 610 });\n  const isTablet = useMediaQuery({ maxWidth: 1024 });\n\n  useEffect(() => {\n    form.setFieldsValue({\n      street: contactInfo.Mailing_Address_Verified_Date__c\n        ? contactInfo.MailingStreet\n        : \"\",\n      city: contactInfo.Mailing_Address_Verified_Date__c\n        ? contactInfo.MailingCity\n        : \"\",\n      state: contactInfo.Mailing_Address_Verified_Date__c\n        ? contactInfo.MailingState\n        : \"\",\n      postalCode: contactInfo.Mailing_Address_Verified_Date__c\n        ? contactInfo.MailingPostalCode\n        : \"\",\n      country: contactInfo.Mailing_Address_Verified_Date__c\n        ? contactInfo.MailingCountry\n        : \"\",\n    });\n  }, [form, contactInfo]);\n\n  const onFinish = async (values: any) => {\n    try {\n      setIsLoading(true);\n\n      // Constructing incentiveData based on cartItems and customizationList\n      const incentiveDataList = cartItems.map((item: any, index: number) => ({\n        Incentive__c: item.incentiveId,\n        Points__c: item.Points__c,\n        Member_Contact__c: clientId,\n        Customization__c: item.Customization__c || null, // Using null if no customization found\n      }));\n\n      console.log(\"incentiveDataList\", incentiveDataList);\n\n      // Update Contact data\n      const endpoint = `/sobjects/Contact/${clientId}`;\n      const updateData = {\n        Mailing_Address_Verified_Date__c: new Date(),\n        MailingStreet: values.street,\n        MailingCity: values.city,\n        MailingState: values.state,\n        MailingPostalCode: values.postalCode,\n        MailingCountry: values.country,\n      };\n\n      console.log(\"Data Of CheckOut\", updateData); // checkout data and address\n      console.log(\"incentiveDataList\", incentiveDataList); // incentive data\n      try {\n        // Update Contact data in Salesforce\n        await updateDataInSalesForce(endpoint, updateData);\n\n        // Create Member_Incentive__c records in Salesforce\n        for (const incentiveData of incentiveDataList) {\n          await createDataInSalesForce(\n            `/sobjects/Member_Incentive__c/`,\n            incentiveData\n          );\n        }\n\n        // Reset cart items, close modal, and reset loading state\n        incentiveContext.setCartItems([]);\n        onClose();\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Failed to update password:\", error);\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data from Salesforce:\", error);\n      alert(\"Authorization error. Please try again later.\");\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Drawer\n      footerStyle={{ border: \"none\" }}\n      closeIcon={false}\n      width={isMobile ? \"100%\" : isTablet ? \"60%\" : \"30%\"}\n      placement=\"right\"\n      onClose={onClose}\n      open={isOpen}\n    >\n      {contactInfo && (\n        <section className={styles.incentiveDetailsDrawerContainer}>\n          <div className={styles.drawerTitle}>\n            <h3>Checkout</h3>\n            <CloseOutlined onClick={onClose} />\n          </div>\n          <div>\n            <div className={styles.formContainer}>\n              <Form\n                form={form}\n                className={styles.form}\n                name=\"basic\"\n                layout={\"vertical\"}\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                autoComplete=\"off\"\n              >\n                <Form.Item\n                  className={styles.formItem}\n                  label=\"Street Address\"\n                  name=\"street\"\n                  required\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please input your charity name!\",\n                    },\n                  ]}\n                >\n                  <Input\n                    placeholder={\"Enter your street\"}\n                    onChange={(e) =>\n                      setFormData({ ...formData, street: e.target.value })\n                    }\n                  />\n                </Form.Item>\n                <Form.Item\n                  className={styles.formItem}\n                  label=\"City\"\n                  name=\"city\"\n                  required\n                  rules={[\n                    { required: true, message: \"Please input your city\" },\n                  ]}\n                >\n                  <Input\n                    placeholder={\"Enter your city\"}\n                    onChange={(e) =>\n                      setFormData({ ...formData, city: e.target.value })\n                    }\n                  />\n                </Form.Item>\n                <Form.Item\n                  className={styles.formItem}\n                  label=\"State\"\n                  name=\"state\"\n                  required\n                  rules={[\n                    { required: true, message: \"Please input your state\" },\n                  ]}\n                >\n                  <Input\n                    placeholder={\"Enter your state\"}\n                    onChange={(e) =>\n                      setFormData({ ...formData, state: e.target.value })\n                    }\n                  />\n                </Form.Item>\n                <Form.Item\n                  className={styles.formItem}\n                  label=\"Zip code\"\n                  name=\"postalCode\"\n                  required\n                  rules={[\n                    { required: true, message: \"Please input your zip code\" },\n                  ]}\n                >\n                  <Input\n                    placeholder={\"Enter your Zip code\"}\n                    onChange={(e) =>\n                      setFormData({ ...formData, postalCode: e.target.value })\n                    }\n                  />\n                </Form.Item>\n                <Form.Item\n                  className={styles.formItem}\n                  label=\"Country\"\n                  name=\"country\"\n                  required\n                  rules={[\n                    { required: true, message: \"Please input your country\" },\n                  ]}\n                >\n                  <Input\n                    placeholder={\"Enter your country\"}\n                    onChange={(e) =>\n                      setFormData({ ...formData, country: e.target.value })\n                    }\n                  />\n                </Form.Item>\n\n                <Form.Item>\n                  <Button\n                    loading={isLoading}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    disabled={\n                      !formData.street ||\n                      !formData.city ||\n                      !formData.state ||\n                      !formData.postalCode ||\n                      !formData.country\n                    }\n                    className={styles.btn}\n                  >\n                    {`${\n                      contactInfo?.Mailing_Address_Verified_Date__c\n                        ? \"Confirm\"\n                        : \"Submit\"\n                    }`}\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          </div>\n        </section>\n      )}\n    </Drawer>\n  );\n};\n\nexport default CheckoutDrawer;\n","/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/SelectedIncentivesDrawer.tsx",["520","521"],[],"import React, { useState, FC } from 'react';\nimport { Drawer } from 'antd';\nimport {useMediaQuery} from \"react-responsive\";\nimport styles from \"./styles.module.sass\";\nimport {CloseOutlined} from \"@ant-design/icons\";\n\n\ninterface SelectedIncentivesDataType {\n    key: string;\n    incentive: string;\n    moreInfo: string | JSX.Element;\n    meetingsRequired: number;\n    requirementsFulfilled?: string | JSX.Element;\n    status?: string | JSX.Element;\n    Meetings_Needed__c?: string;\n    Meetings_Completed__c?: string;\n    Customization__c?: string;\n}\n\ninterface SelectedIncentivesDrawerProps {\n    isOpen: boolean;\n    onClose: () => void;\n    selectedIncentivesDetails: SelectedIncentivesDataType | null;\n}\n\n\n\nconst SelectedIncentivesDrawer: FC<SelectedIncentivesDrawerProps> = ({isOpen, onClose, selectedIncentivesDetails}) => {\n\n    const [open, setOpen] = useState(false);\n\n\n    const isMobile = useMediaQuery({ maxWidth: 610 })\n    const isTablet = useMediaQuery({ maxWidth: 1024 })\n\n    const showDrawer = () => {\n        setOpen(true);\n    };\n\n\n    return (\n        <Drawer\n            footerStyle={{ border: 'none' }}\n            closeIcon={false}\n            width={isMobile ? '100%' : (isTablet ? '60%' : '30%')}\n            placement=\"right\"\n            onClose={onClose}\n            open={isOpen}\n        >\n            {selectedIncentivesDetails && (\n                <section className={styles.incentiveDetailsDrawerContainer}>\n                    <div className={styles.drawerTitle}>\n                        <h3>Incentive Details </h3>\n                        <CloseOutlined onClick={onClose} />\n                    </div>\n                    <div>\n                        <h4>{selectedIncentivesDetails.incentive}</h4>\n                        <ul className={styles.incentiveDetailsList}>\n                            <li className={styles.listItem}>\n                                <div>Meetings Required: </div>\n                                <div>{selectedIncentivesDetails.Meetings_Needed__c}</div>\n                            </li>\n                            <li className={styles.listItem}>\n                                <div>Meetings Completed: </div>\n                                <div>{selectedIncentivesDetails.Meetings_Completed__c}</div>\n                            </li>\n                            <li className={styles.listItem}>\n                                <div>Customization Options: </div>\n                                <div>{selectedIncentivesDetails.Customization__c ? selectedIncentivesDetails.Customization__c : '-' }</div>\n                            </li>\n                            <li className={styles.listItem}>\n                                <div>Status </div>\n                                {selectedIncentivesDetails.status}\n                            </li>\n                        </ul>\n                    </div>\n                </section>\n            )}\n        </Drawer>\n    );\n};\n\nexport default SelectedIncentivesDrawer;","/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/CharityDrawer.tsx",[],[],"/Users/shannoncoakley/Documents/mp/src/components/sections/incentivesSection/IncentiveCustomizationDrawer.tsx",[],[],"/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/mobile/MobilePartnersSection.tsx",["522","523","524","525","526","527"],[],"import React, { FC, useContext, useEffect, useMemo, useState } from 'react';\nimport { List, Pagination } from 'antd';\nimport styles from \"./styles.module.sass\";\nimport PartnerDrawer from \"../PartnerDrawer\";\nimport { usePartnerContext } from \"../contexts/IncentivesContext\";\n\nimport { ReactComponent as Filter } from '../../../../images/svgIcons/filter.svg'\nimport PartnerModal from \"../PartnerModal\";\nimport PartnerFilterDrawer from \"./PartnerFilterDrawer\";\nimport { useSalesForceData, useSalesForceDataWithThreeQueries } from \"../../../../getSalesForceData\";\nimport { fetchDataFromSalesForce } from \"../../../../salesforceAuth\";\nimport { useParams } from \"react-router-dom\";\nimport { SorterResult } from \"antd/es/table/interface\";\n\ninterface PartnersDataType {\n    key: string;\n    partnerName: string;\n    clientKey?: string;\n    overview: string;\n    hasRequested: boolean;\n    website?: string;\n    richMerge?: string;\n    surveyOptionName?: string[];\n    Stage_M__c?: string;\n    Stage_MP__c?: string;\n    Sweepstakes_Type__c?: string;\n    Client_Campaign_ID__c?: string;\n    Related_Membership_Member__c: string;\n    Related_Membership__c: string;\n    Survey_Option_Name__c: string[];\n    filterCategory?: string[];\n    Client_Logo__c?: string;\n}\n\ninterface SalesForcePartner {\n    Id: string;\n    Client_Id__c?: string;\n    Account_ID__c?: string;\n    Client_Name__c: string;\n    Account_Name_Merge_Only__c: string;\n    Quick_Overview__c: string;\n    Client_Website__c?: string;\n    Website?: string;\n    Rich_Merge__c?: string;\n    Stage_M__c?: string;\n    Stage_MP__c?: string;\n    Sweepstakes_Type__c?: string;\n    Client_Campaign_ID__c?: string;\n    Related_Membership_Member__c: string;\n    Related_Membership__c: string;\n    Survey_Option_Name__c: string[];\n    Client_Logo__c?: string;\n\n}\n\nconst QUERY1 = (clientId: string | undefined) => `query/?q=SELECT+Id,Client_Id__c,Client_Name__c,Related_Membership_Member__c,Quick_Overview__c,Client_Website__c,Client_Logo__c,Stage_M__c,Stage_MP__c,Sweepstakes_Type__c+FROM+Meeting__c+WHERE+Stage_M__c='Request+Queued'+AND+MemberC__c='${clientId}'`;\nconst QUERY2 = `query/?q=SELECT+Id,Account_ID__c,Related_Membership__c,Account_Name_Merge_Only__c,Website,Client_Logo__c,Quick_Overview__c,Client_Campaign_ID__c+FROM+Account+WHERE+RecordTypeId='01236000000OodE'+AND+(Client_Campaign_Status__c='Active'+OR+Client_Campaign_Status__c='Testing')`;\nconst QUERY3 = (recordIds: string[]) => `query/?q=SELECT+Client_Name__c,Survey_Option_Name__c+FROM+Survey__c+WHERE+Client_Name__c+IN+(${recordIds.map(id => `'${id}'`).join(\",\")})`;\nconst transformer = (primaryData: SalesForcePartner, relatedData?: any) => {\n    const surveyOptions = Array.isArray(relatedData?.Survey_Option_Name__c)\n        ? relatedData.Survey_Option_Name__c\n        : Array.isArray(relatedData?.Survey_Option_Name__c)\n            ? [relatedData.Survey_Option_Name__c]\n            : [];\n\n    return {\n        key: primaryData.Id,\n        clientKey: primaryData.Client_Id__c || primaryData.Account_ID__c,\n        website: primaryData.Client_Website__c || primaryData.Website,\n        partnerName: primaryData.Client_Name__c || primaryData.Account_Name_Merge_Only__c,\n        overview: primaryData.Quick_Overview__c || 'No quick overview',\n        hasRequested: primaryData.Stage_M__c === 'Request Queued',\n        richMerge: primaryData.Rich_Merge__c,\n        Survey_Option_Name__c: surveyOptions,\n        Stage_M__c: primaryData.Stage_M__c || '',\n        Stage_MP__c: primaryData.Stage_MP__c || '',\n        Sweepstakes_Type__c: primaryData.Sweepstakes_Type__c || '',\n        Client_Campaign_ID__c: primaryData.Client_Campaign_ID__c,\n        Related_Membership__c: primaryData.Related_Membership__c,\n        Related_Membership_Member__c: primaryData.Related_Membership_Member__c,\n        Client_Logo__c: primaryData.Client_Logo__c,\n    }\n};\n\ntype MeetingRecord = {\n    Client_Id__c: string;\n};\ntype Transformer<T, U> = (input: T) => U;\nconst QUERY_REQUESTED_MEETINGS = (clientId: string | undefined) => `query/?q=SELECT+Client_Id__c+FROM+Meeting__c+WHERE+Stage_M__c='Requested by Member'+AND+MemberC__c='${clientId}'`;\nconst clientIDTransformer: Transformer<MeetingRecord, string> = (record: MeetingRecord) => record.Client_Id__c;\n\n\nconst MobilePartnersSection: FC = () => {\n    const [open, setOpen] = useState(false);\n    const [selectedPartner, setSelectedPartner] = useState<PartnersDataType | null>(null);\n    const [isFilterOpen, setIsFilterOpen] = useState(false);\n    const [viewOnlyRequested, setViewOnlyRequested] = useState(true);\n    const [sortedInfo, setSortedInfo] = useState<SorterResult<PartnersDataType>>({});\n    const [searchValue, setSearchValue] = useState<string>('');\n    const [loadingPartnerDetails, setLoadingPartnerDetails] = useState(false);\n    const [appliedViewOnlyRequested, setAppliedViewOnlyRequested] = useState(true)\n    const [currentPage, setCurrentPage] = useState(1);\n    const { requestedList, declinedList, acceptedList, savedAcceptedList, setSavedAcceptedList } = usePartnerContext();\n    const { clientId } = useParams<{ clientId: string }>();\n    const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n\n    const { data: partnersFromSalesForce, fetchData } = useSalesForceDataWithThreeQueries(\n        QUERY1(clientId),\n        QUERY2,\n        QUERY3,\n        transformer\n    );\n\n    const requestedClientIDs = useSalesForceData(QUERY_REQUESTED_MEETINGS(clientId), clientIDTransformer);\n\n    useEffect(() => {\n        if (partnersFromSalesForce && partnersFromSalesForce.length > 0) {\n            setSavedAcceptedList(partnersFromSalesForce);\n        }\n    }, [partnersFromSalesForce]);\n\n    const getPartnerStatus = (partner: PartnersDataType) => {\n        if (acceptedList.some(item => item.key === partner.key)) {\n            return 'accepted';\n        } else if (requestedList.some(item => item.key === partner.key)) {\n            return 'requested';\n        } else if (declinedList.some(item => item.key === partner.key)) {\n            return 'declined';\n        }\n        return '';\n    };\n\n    const showFilter = () => {\n        setIsFilterOpen(true);\n    };\n\n    const handleOk = () => {\n        setIsFilterOpen(false);\n    };\n\n    const handleCancel = () => {\n        setIsFilterOpen(false);\n    };\n\n    const showDrawer = async (partner: PartnersDataType) => {\n        setSelectedPartner(partner);\n        setLoadingPartnerDetails(true);\n        try {\n            const response = await fetchDataFromSalesForce(`query/?q=SELECT+Rich_Merge__c+FROM+Client_Pitch__c+WHERE+Active__c=true+AND+Custom_Outreach__c=true+AND+(Client_Id__c='${partner.clientKey}'+OR+Client_Id__c='${partner.key}')`);\n\n            if (response && response.records && response.records[0] && response.records[0].Rich_Merge__c) {\n                setSelectedPartner(prev => ({\n                    ...prev!,\n                    richMerge: response.records[0].Rich_Merge__c\n                }));\n            } else {\n                console.error(\"Invalid data format:\", response);\n            }\n        } catch (error) {\n            console.error(\"Error fetching partner details:\", error);\n        } finally {\n            setLoadingPartnerDetails(false);\n        }\n\n        setOpen(true);\n    };\n\n\n    const onCloseDrawer = () => {\n        setSelectedPartner(null);\n        fetchData()\n        setOpen(false);\n    };\n\n    const handleViewOnlyRequestedChange = (checked: boolean) => {\n        setCurrentPage(1)\n        setViewOnlyRequested(checked);\n    };\n\n    const handleApply = (value: string, viewOnlyRequested: boolean, selectedCategories: string[]) => {\n        setSearchValue(value);\n        setAppliedViewOnlyRequested(viewOnlyRequested);\n        setSelectedCategories(selectedCategories)\n        handleOk();\n    };\n    const handleChangePage = (page: number) => {\n        setCurrentPage(page);\n    };\n\n    const filteredData = useMemo(() => {\n        let filtered = [...savedAcceptedList]; // Клонировать массив, чтобы избежать мутации\n\n        if (searchValue) {\n            filtered = filtered.filter(partner =>\n                partner.partnerName.toLowerCase().includes(searchValue.toLowerCase()) ||\n                partner.overview.toLowerCase().includes(searchValue.toLowerCase())\n                // добавьте другие поля, если хотите искать по ним\n            );\n        }\n\n        if (selectedCategories.length) {\n            filtered = filtered.map(partner => {\n                const matchingCategories = selectedCategories.filter(category =>\n                    partner.Survey_Option_Name__c?.some(option => option === category)\n                );\n\n                if (matchingCategories.length) {\n                    return {\n                        ...partner,\n                        filterCategory: matchingCategories\n                    };\n                }\n                return partner;\n            }).filter(partner => partner.filterCategory && partner.filterCategory.length);\n        }\n\n        if (requestedClientIDs && requestedClientIDs.length > 0) {\n            filtered = filtered.filter(partner => partner.clientKey && !requestedClientIDs.includes(partner.clientKey));\n        }\n\n        if (appliedViewOnlyRequested) {\n            filtered = filtered.filter(item => item.hasRequested);\n        }\n\n        return filtered;\n    }, [savedAcceptedList, searchValue, appliedViewOnlyRequested, selectedCategories, requestedClientIDs]);\n\n    const sortedData = useMemo(() => {\n        if (sortedInfo && sortedInfo.columnKey === 'name') {\n            if (sortedInfo.order === 'ascend') {\n                return [...filteredData].sort((a, b) => a.partnerName.localeCompare(b.partnerName));\n            } else if (sortedInfo.order === 'descend') {\n                return [...filteredData].sort((a, b) => b.partnerName.localeCompare(a.partnerName));\n            }\n        }\n        return filteredData;\n    }, [filteredData, sortedInfo]);\n\n    const startIndex = (currentPage - 1) * 10;\n    const endIndex = startIndex + 10;\n    const paginatedData = sortedData.slice(startIndex, endIndex);\n\n    return (\n        <section className={styles.partnersContainer}>\n            <PartnerFilterDrawer isOpenFilter={isFilterOpen}\n                onCloseFilter={handleCancel} onViewOnlyRequestedChange={handleViewOnlyRequestedChange} onApply={handleApply} />\n            <div className={styles.partnersTitleContainer}>\n                <small className={styles.partnerInfo}>Click a partner name below for more information</small>\n                <button onClick={showFilter} className={styles.filterBtn}> <Filter />  Filter</button>\n                <small className={styles.requested}>Partners who have requested to meet with you.</small>\n            </div>\n            <List\n                className={styles.list}\n                itemLayout=\"horizontal\"\n                dataSource={paginatedData}\n                pagination={false}\n                renderItem={(item) => {\n                    const partnerStatus = getPartnerStatus(item)\n                    return (\n                        <List.Item onClick={() => showDrawer(item)}>\n                            <List.Item.Meta\n                                title={(\n                                    <span className={partnerStatus === 'requested' ? styles.requestedPartner : partnerStatus === 'accepted' ? styles.acceptedPartner : partnerStatus === 'declined' ? styles.declinedPartner : ''}>\n                                        {item.partnerName}{item.hasRequested && (<span className={styles.orangeStar}>★</span>)}\n                                    </span>)} description={<span className={partnerStatus === 'requested' ? styles.requestedPartner : partnerStatus === 'accepted' ? styles.acceptedPartner : partnerStatus === 'declined' ? styles.declinedPartner : ''}>{item.overview}</span>} />\n                        </List.Item>\n                    )\n                }}\n            />\n            <Pagination defaultPageSize={10} className={styles.paginationPartnersMobile} defaultCurrent={currentPage} total={filteredData.length} onChange={handleChangePage} />\n            <PartnerDrawer\n                isOpen={open}\n                onClose={onCloseDrawer}\n                partnerDetails={selectedPartner}\n            />\n\n        </section>\n    );\n}\n\nexport default MobilePartnersSection;","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/ui/AcceptRequestModal.tsx",["528","529","530","531","532","533"],[],"/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/ui/RequestModal.tsx",["534"],[],"import { useState, FC } from \"react\";\nimport { Modal, Checkbox, Drawer } from \"antd\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport styles from \"../styles.module.sass\";\n\ninterface RequestModalProps {\n  isDeclineModalOpen: boolean;\n  onDeclineShowModal: () => void;\n  onDecline: () => void;\n  OnDeclineCancel: () => void;\n  selectedCheckbox: string | null;\n  onCheckboxChange: (value: string) => void;\n}\nconst RequestModal: FC<RequestModalProps> = ({\n  isDeclineModalOpen,\n  onDeclineShowModal,\n  onDecline,\n  OnDeclineCancel,\n  selectedCheckbox,\n  onCheckboxChange,\n}) => {\n  const isMobile = useMediaQuery({ maxWidth: 610 });\n\n  const handleCheckboxChange = (value: string) => {\n    onCheckboxChange(value); // Call a function from the props when the checkbox changes\n  };\n\n  return (\n    <>\n      {isMobile ? (\n        <Drawer\n          height={\"600px\"}\n          style={{ borderTopLeftRadius: \"5%\", borderTopRightRadius: \"5%\" }}\n          placement={\"bottom\"}\n          closeIcon={false}\n          push={false}\n          onClose={OnDeclineCancel}\n          open={isDeclineModalOpen}\n        >\n          <section className={styles.mobileModalContainer}>\n            <div className={styles.modalTitleContainer}>\n              <h3>Decline request</h3>\n            </div>\n            <small>Please share why you would like to decline a request:</small>\n            <div className={styles.checkboxContainer}>\n              <Checkbox\n                className={styles.reqCheck}\n                checked={selectedCheckbox === \"None\"}\n                onChange={() => handleCheckboxChange(\"None\")}\n              >\n                None\n              </Checkbox>\n              <Checkbox\n                className={styles.reqCheck}\n                checked={selectedCheckbox === \"Timing\"}\n                onChange={() => handleCheckboxChange(\"Timing\")}\n              >\n                No time\n              </Checkbox>\n              <Checkbox\n                className={styles.reqCheck}\n                checked={selectedCheckbox === \"No interest\"}\n                onChange={() => handleCheckboxChange(\"No interest\")}\n              >\n                No interest\n              </Checkbox>\n              <Checkbox\n                className={styles.reqCheck}\n                checked={selectedCheckbox === \"Existing Customer\"}\n                onChange={() => handleCheckboxChange(\"Existing Customer\")}\n              >\n                Existing Customer\n              </Checkbox>\n              <Checkbox\n                className={styles.reqCheck}\n                checked={selectedCheckbox === \"Job Function/Role\"}\n                onChange={() => handleCheckboxChange(\"Job Function/Role\")}\n              >\n                Does not align w/ role\n              </Checkbox>\n              <Checkbox\n                className={styles.reqCheck}\n                checked={selectedCheckbox === \"Met Already\"}\n                onChange={() => handleCheckboxChange(\"Met Already\")}\n              >\n                Met Already\n              </Checkbox>\n              <Checkbox\n                className={styles.reqCheck}\n                checked={selectedCheckbox === \"No Need\"}\n                onChange={() => handleCheckboxChange(\"No Need\")}\n              >\n                No Need\n              </Checkbox>\n              <Checkbox\n                className={styles.reqCheck}\n                checked={selectedCheckbox === \"Use Competitor/Alternative\"}\n                onChange={() =>\n                  handleCheckboxChange(\"Use Competitor/Alternative\")\n                }\n              >\n                Use Competitor/Alternative\n              </Checkbox>\n              <Checkbox\n                className={styles.reqCheck}\n                checked={selectedCheckbox === \"Other\"}\n                onChange={() => handleCheckboxChange(\"Other\")}\n              >\n                Other\n              </Checkbox>\n            </div>\n            <div className={styles.controlContainer}>\n              <button onClick={onDecline} className={styles.declineBtn}>\n                Decline\n              </button>\n              <button onClick={OnDeclineCancel} className={styles.cancelBtn}>\n                Cancel\n              </button>\n            </div>\n          </section>\n        </Drawer>\n      ) : (\n        <Modal\n          centered={true}\n          width={\"665px\"}\n          footer={null}\n          closeIcon={false}\n          open={isDeclineModalOpen}\n          onOk={onDeclineShowModal}\n          onCancel={OnDeclineCancel}\n        >\n          <section className={styles.modalContainer}>\n            <div className={styles.modalTitleContainer}>\n              <h3>Decline request</h3>\n              <button onClick={onDecline} className={styles.declineSubBtn}>\n                Decline\n              </button>\n              <button onClick={OnDeclineCancel} className={styles.cancelBtn}>\n                Cancel\n              </button>\n            </div>\n            <small>Please share why you would like to decline a request:</small>\n            <div>\n              <div className={styles.checkboxContainer}>\n                <Checkbox\n                  className={styles.reqCheck}\n                  checked={selectedCheckbox === \"None\"}\n                  onChange={() => handleCheckboxChange(\"None\")}\n                >\n                  None\n                </Checkbox>\n                <Checkbox\n                  className={styles.reqCheck}\n                  checked={selectedCheckbox === \"Timing\"}\n                  onChange={() => handleCheckboxChange(\"Timing\")}\n                >\n                  No time\n                </Checkbox>\n                <Checkbox\n                  className={styles.reqCheck}\n                  checked={selectedCheckbox === \"No interest\"}\n                  onChange={() => handleCheckboxChange(\"No interest\")}\n                >\n                  No interest\n                </Checkbox>\n                <Checkbox\n                  className={styles.reqCheck}\n                  checked={selectedCheckbox === \"Existing Customer\"}\n                  onChange={() => handleCheckboxChange(\"Existing Customer\")}\n                >\n                  Existing Customer\n                </Checkbox>\n                <Checkbox\n                  className={styles.reqCheck}\n                  checked={selectedCheckbox === \"Job Function/Role\"}\n                  onChange={() => handleCheckboxChange(\"Job Function/Role\")}\n                >\n                  Does not align w/ role\n                </Checkbox>\n                <Checkbox\n                  className={styles.reqCheck}\n                  checked={selectedCheckbox === \"Met Already\"}\n                  onChange={() => handleCheckboxChange(\"Met Already\")}\n                >\n                  Met Already\n                </Checkbox>\n                <Checkbox\n                  className={styles.reqCheck}\n                  checked={selectedCheckbox === \"No Need\"}\n                  onChange={() => handleCheckboxChange(\"No Need\")}\n                >\n                  No Need\n                </Checkbox>\n                <Checkbox\n                  className={styles.reqCheck}\n                  checked={selectedCheckbox === \"Use Competitor/Alternative\"}\n                  onChange={() =>\n                    handleCheckboxChange(\"Use Competitor/Alternative\")\n                  }\n                >\n                  Use Competitor/Alternative\n                </Checkbox>\n                <Checkbox\n                  className={styles.reqCheck}\n                  checked={selectedCheckbox === \"Other\"}\n                  onChange={() => handleCheckboxChange(\"Other\")}\n                >\n                  Other\n                </Checkbox>\n              </div>\n            </div>\n          </section>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default RequestModal;\n","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/ui/RequestTextModal.tsx",[],[],"/Users/shannoncoakley/Documents/mp/src/components/sections/meetingsSection/ui/DeclineMeetingDetailsDrawer.tsx",["535","536","537","538","539","540","541","542","543","544","545","546"],[],"import React, { useState, FC } from 'react';\nimport { Button, Drawer, Tag } from 'antd';\nimport dayjs from \"dayjs\";\nimport {useMediaQuery} from \"react-responsive\";\nimport styles from \"../styles.module.sass\";\nimport {CloseOutlined} from \"@ant-design/icons\";\nimport AcceptRequestModal from \"../../homeSection/ui/AcceptRequestModal\";\nimport {usePartnerContext} from \"../../homeSection/contexts/IncentivesContext\";\n\n\ninterface PartnersDataType {\n    key: string;\n    partnerName: string;\n    overview: string;\n    hasRequested: boolean;\n    declineReason?: string | JSX.Element;\n    action?: string | JSX.Element;\n    Related_Membership_Member__c: string;\n    Related_Membership__c: string;\n    Survey_Option_Name__c: string[];\n    filterCategory?: string[];\n    Client_Logo__c?: string;\n}\n\ninterface DeclineMeetingsDrawerProps {\n    isOpen: boolean;\n    onClose: () => void;\n    revertStatus: (partnerKey: string) => Promise<void>;\n    declineMeetingsDetails: PartnersDataType | null;\n}\n\n\n\nconst DeclineMeetingDetailsDrawer: FC<DeclineMeetingsDrawerProps> = ({isOpen, onClose, declineMeetingsDetails, revertStatus }) => {\n\n    const [open, setOpen] = useState(false);\n    const [isAcceptModalOpen, setIsAcceptModalOpen] = useState(false);\n    const { declinedList, addRequestedPartner, requestedList, removeDeclinePartner, removeSavedDeclinePartner} = usePartnerContext();\n\n\n    const isMobile = useMediaQuery({ maxWidth: 610 })\n    const isTablet = useMediaQuery({ maxWidth: 1024 })\n\n    const showDrawer = () => {\n        setOpen(true);\n    };\n\n\n    const handleRemoveDeclineClick = () => {\n        if (declineMeetingsDetails) {\n            removeSavedDeclinePartner(declineMeetingsDetails);\n            onClose();\n        }\n    };\n\n    const handleChangeMyChoiceClick = async () => {\n        if (declineMeetingsDetails && declineMeetingsDetails.key) {\n            await revertStatus(declineMeetingsDetails.key);\n            onClose();\n        }\n    };\n\n\n    return (\n        <Drawer\n            footerStyle={{ border: 'none' }}\n            closeIcon={false}\n            width={isMobile ? '100%' : (isTablet ? '60%' : '30%')}\n            placement=\"right\"\n            onClose={onClose}\n            open={isOpen}\n        >\n            {declineMeetingsDetails && (\n                <section className={styles.meetingsDetailsDrawerContainer}>\n                    <div className={styles.drawerTitle}>\n                        <h3>Meeting Details </h3>\n                        <CloseOutlined onClick={onClose} />\n                    </div>\n                    <div>\n                        <h4>{declineMeetingsDetails.partnerName}</h4>\n                        <ul className={styles.meetingsDetailsList}>\n                            <li className={styles.listItem}>\n                                <div>Decline Reason: </div>\n                                <div> <Tag color={'blue'}>{declineMeetingsDetails.declineReason}</Tag> </div>\n                            </li>\n                            <li className={styles.listItemBtn}>\n                                    <button onClick={handleChangeMyChoiceClick}>Change My Choice</button>\n                            </li>\n                        </ul>\n                    </div>\n                </section>\n            )}\n        </Drawer>\n    );\n};\n\nexport default DeclineMeetingDetailsDrawer;","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/ui/NoDQModal.tsx",[],[],"/Users/shannoncoakley/Documents/mp/src/components/sections/meetingsSection/ui/AcceptMeetingDetailsDrawer.tsx",["547","548","549","550"],[],"import React, { useState, FC } from 'react';\nimport { Button, Drawer } from 'antd';\nimport dayjs from \"dayjs\";\nimport {useMediaQuery} from \"react-responsive\";\nimport styles from \"../styles.module.sass\";\nimport {CloseOutlined} from \"@ant-design/icons\";\n\n\ninterface AcceptedMeetingsTableDataType {\n    key: string;\n    partnerName: string;\n    overview?: string;\n    hasRequested?: boolean;\n    incentive?: string;\n    moreInfo?: string;\n    meetingsRequired?: number;\n    stage?: string | JSX.Element;\n    meetingDate?: string | JSX.Element;\n    scheduleMeeting?: string | JSX.Element;\n    feedbackLink?: string | JSX.Element;\n}\n\ninterface AcceptedMeetingsDrawerProps {\n    isOpen: boolean;\n    onClose: () => void;\n    acceptedMeetingsDetails: AcceptedMeetingsTableDataType | null;\n}\n\n\n\nconst AcceptMeetingDetailsDrawer: FC<AcceptedMeetingsDrawerProps> = ({isOpen, onClose, acceptedMeetingsDetails}) => {\n\n    const [open, setOpen] = useState(false);\n\n\n    const isMobile = useMediaQuery({ maxWidth: 610 })\n    const isTablet = useMediaQuery({ maxWidth: 1024 })\n\n    const showDrawer = () => {\n        setOpen(true);\n    };\n\n\n    return (\n        <Drawer\n            footerStyle={{ border: 'none' }}\n            closeIcon={false}\n            width={isMobile ? '100%' : (isTablet ? '60%' : '30%')}\n            placement=\"right\"\n            onClose={onClose}\n            open={isOpen}\n        >\n            {acceptedMeetingsDetails && (\n                <section className={styles.meetingsDetailsDrawerContainer}>\n                    <div className={styles.drawerTitle}>\n                        <h3>Meeting Details </h3>\n                        <CloseOutlined onClick={onClose} />\n                    </div>\n                    <div>\n                        <h4>{acceptedMeetingsDetails.partnerName}</h4>\n                        <ul className={styles.meetingsDetailsList}>\n                            <li className={styles.listItem}>\n                                <div>Stage: </div>\n                                <div>{acceptedMeetingsDetails.stage}</div>\n                            </li>\n                            <li className={styles.listItem}>\n                                <div>Incentive: </div>\n                                <div>{acceptedMeetingsDetails.incentive}</div>\n                            </li>\n                            <li className={styles.listItem}>\n                                <div>Meeting Date: </div>\n                                <div>{acceptedMeetingsDetails.meetingDate || '-'}</div>\n                            </li>\n                            <li className={styles.listItem}>\n                                <div>Feedback Link: </div>\n                                <div className={styles.submitLink}>{acceptedMeetingsDetails.feedbackLink}</div>\n                            </li>\n                            <li className={styles.listItemBtn}>\n                                {acceptedMeetingsDetails.scheduleMeeting === '-' ? (' '): (acceptedMeetingsDetails.scheduleMeeting)}\n                            </li>\n                        </ul>\n                    </div>\n                </section>\n            )}\n        </Drawer>\n    );\n};\n\nexport default AcceptMeetingDetailsDrawer;","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/ui/TreeCategories.tsx",["551","552","553","554"],[],"import React, {useEffect, useState} from 'react';\nimport type { MenuProps } from 'antd';\nimport {Menu, Checkbox, Collapse, Tag} from 'antd';\nimport {useMediaQuery} from \"react-responsive\"\nimport {fetchDataFromSalesForce} from \"../../../../salesforceAuth\";\nimport {usePartnerContext} from \"../contexts/IncentivesContext\";\nimport styles from \"../../meetingsSection/styles.module.sass\";\nconst { Panel } = Collapse;\n\ntype MenuItem = {\n    key: string;\n    children?: MenuItem[];\n    label: React.ReactNode;\n    type?: 'group';\n    checked?: boolean;\n    text: string;\n};\n\nfunction getItem(\n    label: React.ReactNode,\n    key: string,\n    text: string,\n    children?: MenuItem[],\n    type?: 'group',\n    checked?: boolean\n): MenuItem {\n    return {\n        key,\n        children,\n        label,\n        type,\n        checked,\n        text\n    } as MenuItem;\n}\n\ninterface TreeCategoriesProps {\n    onSelectText: (text: string, checked: boolean) => void;\n    resetCheckboxes: boolean;\n    setResetCheckboxes: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport const items: MenuItem[] = [\n    getItem(<span>Account Based Marketing</span>, 'sub1', '',[\n        getItem(<span>Select All</span>, '1', 'Select All', [], 'group', false),\n        getItem(<span>Account Based Marketing Software</span>, '2', 'Account Based Marketing Software', [], 'group', false ),\n        getItem(<span>Account Based Analytics Software</span>, '3', 'Account Based Analytics Software', [], 'group', false),\n        getItem(<span>Account Based Data Software</span>, '4', 'Account Based Data Software', [], 'group', false),\n        getItem(<span>Buyer Intent Data Providers</span>, '5', 'Buyer Intent Data Providers', [], 'group', false),\n    ]),\n    getItem(<span>IT Security</span>, 'sub2', 'IT Security'),\n    getItem(<span>IT Management</span>, 'sub3', 'IT Management'),\n    getItem(<span>Analytics Tools & Software</span>, 'sub4', 'Analytics Tools & Software')\n];\n\n\nconst TreeCategories: React.FC<TreeCategoriesProps> = ({ onSelectText, resetCheckboxes, setResetCheckboxes }) => {\n    const [openKeys, setOpenKeys] = useState(['sub1', 'sub2', 'sub3', 'sub4']);\n    const [selectedCheckboxes, setSelectedCheckboxes] = useState<Record<string, boolean>>({\n        'Select All': false\n    });\n    const [selectAllChecked, setSelectAllChecked] = useState(false);\n    const [data, setData] = useState<MenuItem[]>([]);\n    const [magicQuadrantData, setMagicQuadrantData] = useState<MenuItem[]>([]);\n    const { savedAcceptedList} = usePartnerContext();\n    const rootSubmenuKeys = ['sub1'];\n    const isMobile = useMediaQuery({ maxWidth: 610 })\n\n    const transformData = (records: any[]): { mainItems: MenuItem[], magicQuadrantItems: MenuItem[] } => {\n        const categoryMap = new Map();\n        const magicQuadrantItems: MenuItem[] = [];\n\n        const allPartnerCategories = Array.from(new Set(savedAcceptedList.flatMap(partner =>\n            Array.isArray(partner.Survey_Option_Name__c) ? partner.Survey_Option_Name__c : []\n        )));\n\n        records.forEach(record => {\n            const categoryName = record.Main_Category__c;\n            const subCategoryName = record.Survey_Option_Copy__c;\n            const subCategoryKey = record.Id;\n\n            if (!allPartnerCategories.includes(subCategoryName)) {\n                return;\n            }\n\n            const item = getItem(\n                <span>{subCategoryName}</span>,\n                subCategoryKey,\n                subCategoryName,\n                [],\n                \"group\",\n                false\n            );\n\n            if (categoryName === \"Gartner Magic Quadrant\") {\n                magicQuadrantItems.push(item);\n                return; // Пропустим оставшуюся часть цикла для этого элемента\n            }\n\n            if (!categoryMap.has(categoryName)) {\n                categoryMap.set(categoryName, getItem(\n                    <span>{categoryName}</span>,\n                    categoryName.replace(/\\s/g, \"_\"),\n                    categoryName,\n                    []\n                ));\n            }\n\n            const categoryItem = categoryMap.get(categoryName);\n            if (categoryItem.children) {\n                categoryItem.children.push(item);\n            }\n        });\n\n        return {\n            mainItems: Array.from(categoryMap.values()),\n            magicQuadrantItems\n\n        };\n    };\n\n\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const salesForceData = await fetchDataFromSalesForce(`query/?q=SELECT+Id,Survey_Option_Copy__c,Main_Category__c+FROM+Survey_Option__c+WHERE+Active_Count__c>0`);\n                const transformedData = transformData(salesForceData.records);\n                setData(transformedData.mainItems);\n                setMagicQuadrantData(transformedData.magicQuadrantItems); // Предполагая, что у вас есть соответствующий useState для этого\n            } catch (error) {\n                console.error('Failed to fetch data:', error);\n            }\n        }\n\n        void fetchData();\n    }, []);\n\n    const onOpenChange: MenuProps['onOpenChange'] = (keys) => {\n        const latestOpenKey = keys.find((key) => openKeys.indexOf(key) === -1);\n        if (rootSubmenuKeys.indexOf(latestOpenKey!) === -1) {\n            setOpenKeys(keys);\n        } else {\n            setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\n        }\n    };\n\n    const handleCheckboxChange = (text: string, checked: boolean) => {\n        if (text === 'Select All') {\n            const updatedCheckboxes: Record<string, boolean> = {};\n\n            items.forEach(item => {\n                if (item.children) {\n                    item.children.forEach(child => {\n                        updatedCheckboxes[child.text] = checked;\n                    });\n                }\n            });\n\n            setSelectedCheckboxes(updatedCheckboxes);\n            setSelectAllChecked(checked);\n            onSelectText(text, checked);\n        } else {\n            setSelectedCheckboxes(prevState => ({\n                ...prevState,\n                [text]: checked\n            }));\n\n            setSelectAllChecked(Object.values(selectedCheckboxes).every(checked => checked));\n            onSelectText(text, checked);\n        }\n\n    };\n\n    useEffect(() => {\n        // Обработка сброса состояния чекбоксов при изменении resetCheckboxes\n        if (resetCheckboxes) {\n            setSelectedCheckboxes({ 'Select All': false });\n            setSelectAllChecked(false);\n            onSelectText('Select All', false);\n            setResetCheckboxes(false); // Сбрасываем флаг сразу после сброса\n        }\n    }, [resetCheckboxes, setResetCheckboxes]);\n\n    return (\n        <Collapse bordered={false} expandIconPosition={'end'}>\n            <Panel header=\"Product / Service Categories\" key=\"1\">\n                <Menu\n                    mode={isMobile ? 'inline' : 'vertical'}\n                    openKeys={openKeys}\n                    onOpenChange={onOpenChange}\n                    style={{ width: 300}}\n                    multiple={true}\n                >\n                    {data.map((item) => (\n                        <Menu.SubMenu key={item.key} title={item.label}>\n                            {item.children?.map((child) => (\n                                <Menu.Item key={child.key}>\n                                    <Checkbox\n                                        checked={child.text === 'Select All' ? selectAllChecked : selectedCheckboxes[child.text]}\n                                        onChange={(e) => handleCheckboxChange(child.text, e.target.checked)}\n                                    >\n                                        {child.label}\n                                    </Checkbox>\n                                </Menu.Item>\n                            ))}\n                        </Menu.SubMenu>\n                    ))}\n                </Menu>\n\n            </Panel>\n            <Panel style={{borderBottom: '1px solid lightgrey'}} header=\"Gather Magic Quadrant\" key=\"3\">\n                <div style={{display: 'flex', flexDirection: 'column'}}>\n                {magicQuadrantData.map((item) => (\n                    <Checkbox\n                        key={item.key}\n                        checked={item.text === 'Select All' ? selectAllChecked : selectedCheckboxes[item.text]}\n                        onChange={(e) => handleCheckboxChange(item.text, e.target.checked)}\n                    >\n                        {item.label}\n                    </Checkbox>\n                ))}\n                </div>\n            </Panel>\n        </Collapse>\n    );\n};\n\nexport default TreeCategories;","/Users/shannoncoakley/Documents/mp/src/components/sections/homeSection/mobile/PartnerFilterDrawer.tsx",["555","556","557","558"],[],"import React, {FC, useState, ChangeEvent} from 'react';\nimport {useMediaQuery} from \"react-responsive\"\nimport {Checkbox, Drawer, Empty, Input} from 'antd';\nimport styles from './styles.module.sass'\nimport {CloseOutlined, SearchOutlined} from \"@ant-design/icons\";\n\nimport TreeCategories, {items} from \"../ui/TreeCategories\";\n\n\ninterface PartnerDrawerProps {\n    isOpenFilter: boolean;\n    onCloseFilter: () => void;\n    onViewOnlyRequestedChange: (checked: boolean) => void;\n    onApply: (searchValue: string, viewOnlyRequested: boolean, selectedCategories: string[]) => void;\n}\nconst PartnerDrawer: FC<PartnerDrawerProps> = ({ isOpenFilter, onCloseFilter, onViewOnlyRequestedChange, onApply }) => {\n    const [inputPrefix, setInputPrefix] = useState<string>('');\n    const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n    const [checkboxStates, setCheckboxStates] = useState<Record<string, boolean>>({});\n    const [viewOnlyRequested, setViewOnlyRequested] = useState(true);\n    const [resetCheckboxes, setResetCheckboxes] = useState(false);\n    const [inputValue, setInputValue] = useState('');\n\n    const handleClearAll = () => {\n        setSelectedCategories([]);\n        setResetCheckboxes(true);\n    };\n\n    const handleSelectText = (text: string, checked: boolean) => {\n        setCheckboxStates(prevState => ({\n            ...prevState,\n            [text]: checked\n        }));\n\n        if (text === 'Select All') {\n            if (checked) {\n                setSelectedCategories(\n                    items\n                        .flatMap(item => (item.children || []).map(child => child.text))\n                        .filter(category => category !== 'Select All')\n                );\n            } else {\n                setSelectedCategories([]);\n            }\n        } else {\n            setSelectedCategories(prevSelected =>\n                checked\n                    ? [...prevSelected, text]\n                    : prevSelected.filter(category => category !== text)\n            );\n        }\n    };\n    const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setInputPrefix(e.target.value);\n    };\n\n\n    return (\n        <Drawer\n            footerStyle={{ border: 'none' }}\n            closeIcon={false}\n            width={'100%'}\n            placement=\"right\"\n            onClose={onCloseFilter}\n            open={isOpenFilter}\n        >\n            <section className={styles.modalContainer}>\n                <div className={styles.modalTitleContainer}>\n                    <h3>Browse All Partner</h3>\n                </div>\n                <div className={styles.inputContainer}>\n                <Input onChange={e => setInputValue(e.target.value)} prefix={inputValue === '' ? <SearchOutlined style={{ opacity: '40%', fontSize: '16px' }} /> : <span />} bordered={false} placeholder={\"search by name, keywords, categories, ets\"} value={inputValue}  />\n                </div>\n                <div className={styles.filterContainer}>\n                    <div className={styles.dropdownContainer}>\n                        <TreeCategories onSelectText={handleSelectText} resetCheckboxes={resetCheckboxes} setResetCheckboxes={setResetCheckboxes} />\n                        <Checkbox onChange={(e) => {\n                            setViewOnlyRequested(e.target.checked);\n                            onViewOnlyRequestedChange(e.target.checked);\n                        }} defaultChecked={true} className={styles.reqCheck}>View only partners who have requested to meet</Checkbox>\n                    </div>\n                    <div className={styles.filterListContainer}>\n                        {selectedCategories.length > 0 ? (\n                            <>\n                                <div className={styles.controlFilterList}>\n                                    <p>Added filters:</p>\n                                    <button onClick={handleClearAll}>Clear all</button>\n                                </div>\n                                <ul className={styles.filterList}>\n                                    {selectedCategories.map((category) => (\n                                        <li key={category}>{category} <CloseOutlined\n                                            className={styles.listCloseIcon}/></li>\n                                    ))}\n                                </ul>\n                            </>\n                        ) : (\n                            <Empty className={styles.empty} description={'no filter added'} image={false} />\n                        )}\n                    </div>\n                    <div className={styles.btnContainer}>\n                        <button onClick={onCloseFilter} className={styles.cancelBtn}>Cancel</button>\n                        <button onClick={() => {\n                            onApply(inputValue, viewOnlyRequested, selectedCategories);\n                            onCloseFilter();\n                        }} className={styles.applyBtn}>Apply</button>\n                    </div>\n                </div>\n            </section>\n        </Drawer>\n    );\n};\n\nexport default PartnerDrawer;",{"ruleId":"559","severity":1,"message":"560","line":12,"column":3,"nodeType":"561","messageId":"562","endLine":12,"endColumn":34},{"ruleId":"559","severity":1,"message":"563","line":14,"column":10,"nodeType":"561","messageId":"562","endLine":14,"endColumn":32},{"ruleId":"559","severity":1,"message":"564","line":359,"column":11,"nodeType":"561","messageId":"562","endLine":359,"endColumn":30},{"ruleId":"559","severity":1,"message":"565","line":385,"column":11,"nodeType":"561","messageId":"562","endLine":385,"endColumn":28},{"ruleId":"559","severity":1,"message":"566","line":2,"column":10,"nodeType":"561","messageId":"562","endLine":2,"endColumn":16},{"ruleId":"559","severity":1,"message":"567","line":1,"column":31,"nodeType":"561","messageId":"562","endLine":1,"endColumn":37},{"ruleId":"559","severity":1,"message":"563","line":4,"column":3,"nodeType":"561","messageId":"562","endLine":4,"endColumn":25},{"ruleId":"568","severity":1,"message":"569","line":25,"column":6,"nodeType":"570","endLine":25,"endColumn":8,"suggestions":"571"},{"ruleId":"568","severity":1,"message":"572","line":85,"column":6,"nodeType":"570","endLine":85,"endColumn":39,"suggestions":"573"},{"ruleId":"559","severity":1,"message":"574","line":116,"column":51,"nodeType":"561","messageId":"562","endLine":116,"endColumn":52},{"ruleId":"559","severity":1,"message":"575","line":2,"column":14,"nodeType":"561","messageId":"562","endLine":2,"endColumn":31},{"ruleId":"559","severity":1,"message":"576","line":4,"column":8,"nodeType":"561","messageId":"562","endLine":4,"endColumn":14},{"ruleId":"559","severity":1,"message":"577","line":8,"column":7,"nodeType":"561","messageId":"562","endLine":8,"endColumn":15},{"ruleId":"559","severity":1,"message":"578","line":9,"column":7,"nodeType":"561","messageId":"562","endLine":9,"endColumn":15},{"ruleId":"559","severity":1,"message":"579","line":10,"column":7,"nodeType":"561","messageId":"562","endLine":10,"endColumn":16},{"ruleId":"559","severity":1,"message":"580","line":20,"column":11,"nodeType":"561","messageId":"562","endLine":20,"endColumn":33},{"ruleId":"559","severity":1,"message":"581","line":4,"column":9,"nodeType":"561","messageId":"562","endLine":4,"endColumn":27},{"ruleId":"559","severity":1,"message":"582","line":4,"column":29,"nodeType":"561","messageId":"562","endLine":4,"endColumn":51},{"ruleId":"559","severity":1,"message":"583","line":5,"column":8,"nodeType":"561","messageId":"562","endLine":5,"endColumn":14},{"ruleId":"559","severity":1,"message":"584","line":10,"column":11,"nodeType":"561","messageId":"562","endLine":10,"endColumn":19},{"ruleId":"559","severity":1,"message":"584","line":8,"column":11,"nodeType":"561","messageId":"562","endLine":8,"endColumn":19},{"ruleId":"559","severity":1,"message":"581","line":13,"column":3,"nodeType":"561","messageId":"562","endLine":13,"endColumn":21},{"ruleId":"559","severity":1,"message":"582","line":14,"column":3,"nodeType":"561","messageId":"562","endLine":14,"endColumn":25},{"ruleId":"559","severity":1,"message":"585","line":2,"column":10,"nodeType":"561","messageId":"562","endLine":2,"endColumn":23},{"ruleId":"559","severity":1,"message":"586","line":2,"column":8,"nodeType":"561","messageId":"562","endLine":2,"endColumn":12},{"ruleId":"559","severity":1,"message":"587","line":2,"column":8,"nodeType":"561","messageId":"562","endLine":2,"endColumn":13},{"ruleId":"559","severity":1,"message":"588","line":8,"column":11,"nodeType":"561","messageId":"562","endLine":8,"endColumn":19},{"ruleId":"568","severity":1,"message":"589","line":15,"column":8,"nodeType":"570","endLine":15,"endColumn":18,"suggestions":"590"},{"ruleId":"559","severity":1,"message":"591","line":2,"column":21,"nodeType":"561","messageId":"562","endLine":2,"endColumn":29},{"ruleId":"559","severity":1,"message":"592","line":13,"column":10,"nodeType":"561","messageId":"562","endLine":13,"endColumn":17},{"ruleId":"559","severity":1,"message":"593","line":1,"column":14,"nodeType":"561","messageId":"562","endLine":1,"endColumn":24},{"ruleId":"559","severity":1,"message":"594","line":2,"column":8,"nodeType":"561","messageId":"562","endLine":2,"endColumn":13},{"ruleId":"559","severity":1,"message":"595","line":4,"column":24,"nodeType":"561","messageId":"562","endLine":4,"endColumn":30},{"ruleId":"559","severity":1,"message":"596","line":4,"column":44,"nodeType":"561","messageId":"562","endLine":4,"endColumn":48},{"ruleId":"559","severity":1,"message":"597","line":11,"column":3,"nodeType":"561","messageId":"562","endLine":11,"endColumn":23},{"ruleId":"559","severity":1,"message":"598","line":25,"column":3,"nodeType":"561","messageId":"562","endLine":25,"endColumn":20},{"ruleId":"559","severity":1,"message":"560","line":28,"column":3,"nodeType":"561","messageId":"562","endLine":28,"endColumn":34},{"ruleId":"559","severity":1,"message":"599","line":140,"column":10,"nodeType":"561","messageId":"562","endLine":140,"endColumn":27},{"ruleId":"559","severity":1,"message":"600","line":143,"column":10,"nodeType":"561","messageId":"562","endLine":143,"endColumn":31},{"ruleId":"559","severity":1,"message":"601","line":154,"column":11,"nodeType":"561","messageId":"562","endLine":154,"endColumn":34},{"ruleId":"568","severity":1,"message":"602","line":181,"column":6,"nodeType":"570","endLine":181,"endColumn":30,"suggestions":"603"},{"ruleId":"559","severity":1,"message":"604","line":391,"column":15,"nodeType":"561","messageId":"562","endLine":391,"endColumn":28},{"ruleId":"559","severity":1,"message":"593","line":1,"column":35,"nodeType":"561","messageId":"562","endLine":1,"endColumn":45},{"ruleId":"559","severity":1,"message":"605","line":2,"column":10,"nodeType":"561","messageId":"562","endLine":2,"endColumn":14},{"ruleId":"559","severity":1,"message":"606","line":2,"column":16,"nodeType":"561","messageId":"562","endLine":2,"endColumn":23},{"ruleId":"559","severity":1,"message":"607","line":11,"column":28,"nodeType":"561","messageId":"562","endLine":11,"endColumn":38},{"ruleId":"559","severity":1,"message":"608","line":13,"column":3,"nodeType":"561","messageId":"562","endLine":13,"endColumn":25},{"ruleId":"559","severity":1,"message":"563","line":15,"column":3,"nodeType":"561","messageId":"562","endLine":15,"endColumn":25},{"ruleId":"559","severity":1,"message":"609","line":19,"column":11,"nodeType":"561","messageId":"562","endLine":19,"endColumn":19},{"ruleId":"559","severity":1,"message":"610","line":36,"column":5,"nodeType":"561","messageId":"562","endLine":36,"endColumn":23},{"ruleId":"559","severity":1,"message":"611","line":37,"column":5,"nodeType":"561","messageId":"562","endLine":37,"endColumn":28},{"ruleId":"559","severity":1,"message":"612","line":38,"column":5,"nodeType":"561","messageId":"562","endLine":38,"endColumn":26},{"ruleId":"559","severity":1,"message":"613","line":39,"column":5,"nodeType":"561","messageId":"562","endLine":39,"endColumn":20},{"ruleId":"559","severity":1,"message":"614","line":40,"column":5,"nodeType":"561","messageId":"562","endLine":40,"endColumn":26},{"ruleId":"559","severity":1,"message":"615","line":41,"column":5,"nodeType":"561","messageId":"562","endLine":41,"endColumn":23},{"ruleId":"559","severity":1,"message":"616","line":42,"column":5,"nodeType":"561","messageId":"562","endLine":42,"endColumn":25},{"ruleId":"559","severity":1,"message":"617","line":43,"column":5,"nodeType":"561","messageId":"562","endLine":43,"endColumn":28},{"ruleId":"559","severity":1,"message":"618","line":44,"column":5,"nodeType":"561","messageId":"562","endLine":44,"endColumn":28},{"ruleId":"559","severity":1,"message":"619","line":45,"column":5,"nodeType":"561","messageId":"562","endLine":45,"endColumn":31},{"ruleId":"559","severity":1,"message":"620","line":51,"column":5,"nodeType":"561","messageId":"562","endLine":51,"endColumn":26},{"ruleId":"559","severity":1,"message":"621","line":52,"column":5,"nodeType":"561","messageId":"562","endLine":52,"endColumn":27},{"ruleId":"559","severity":1,"message":"622","line":53,"column":5,"nodeType":"561","messageId":"562","endLine":53,"endColumn":25},{"ruleId":"559","severity":1,"message":"623","line":54,"column":5,"nodeType":"561","messageId":"562","endLine":54,"endColumn":25},{"ruleId":"559","severity":1,"message":"624","line":55,"column":5,"nodeType":"561","messageId":"562","endLine":55,"endColumn":26},{"ruleId":"559","severity":1,"message":"625","line":56,"column":5,"nodeType":"561","messageId":"562","endLine":56,"endColumn":25},{"ruleId":"559","severity":1,"message":"626","line":57,"column":5,"nodeType":"561","messageId":"562","endLine":57,"endColumn":20},{"ruleId":"559","severity":1,"message":"627","line":58,"column":5,"nodeType":"561","messageId":"562","endLine":58,"endColumn":20},{"ruleId":"559","severity":1,"message":"628","line":59,"column":5,"nodeType":"561","messageId":"562","endLine":59,"endColumn":21},{"ruleId":"559","severity":1,"message":"629","line":62,"column":9,"nodeType":"561","messageId":"562","endLine":62,"endColumn":23},{"ruleId":"559","severity":1,"message":"630","line":63,"column":9,"nodeType":"561","messageId":"562","endLine":63,"endColumn":26},{"ruleId":"559","severity":1,"message":"584","line":69,"column":9,"nodeType":"561","messageId":"562","endLine":69,"endColumn":17},{"ruleId":"568","severity":1,"message":"631","line":92,"column":6,"nodeType":"570","endLine":92,"endColumn":49,"suggestions":"632"},{"ruleId":"633","severity":1,"message":"634","line":99,"column":123,"nodeType":"635","messageId":"636","endLine":99,"endColumn":124,"suggestions":"637"},{"ruleId":"633","severity":1,"message":"634","line":99,"column":128,"nodeType":"635","messageId":"636","endLine":99,"endColumn":129,"suggestions":"638"},{"ruleId":"633","severity":1,"message":"634","line":99,"column":148,"nodeType":"635","messageId":"636","endLine":99,"endColumn":149,"suggestions":"639"},{"ruleId":"633","severity":1,"message":"634","line":99,"column":168,"nodeType":"635","messageId":"636","endLine":99,"endColumn":169,"suggestions":"640"},{"ruleId":"633","severity":1,"message":"634","line":99,"column":188,"nodeType":"635","messageId":"636","endLine":99,"endColumn":189,"suggestions":"641"},{"ruleId":"633","severity":1,"message":"634","line":99,"column":208,"nodeType":"635","messageId":"636","endLine":99,"endColumn":209,"suggestions":"642"},{"ruleId":"633","severity":1,"message":"634","line":99,"column":228,"nodeType":"635","messageId":"636","endLine":99,"endColumn":229,"suggestions":"643"},{"ruleId":"633","severity":1,"message":"634","line":99,"column":247,"nodeType":"635","messageId":"636","endLine":99,"endColumn":248,"suggestions":"644"},{"ruleId":"568","severity":1,"message":"645","line":124,"column":6,"nodeType":"570","endLine":124,"endColumn":8,"suggestions":"646"},{"ruleId":"559","severity":1,"message":"647","line":126,"column":9,"nodeType":"561","messageId":"562","endLine":126,"endColumn":33},{"ruleId":"648","severity":1,"message":"649","line":165,"column":33,"nodeType":"650","messageId":"651","endLine":165,"endColumn":35},{"ruleId":"559","severity":1,"message":"652","line":15,"column":21,"nodeType":"561","messageId":"562","endLine":15,"endColumn":34},{"ruleId":"559","severity":1,"message":"653","line":26,"column":9,"nodeType":"561","messageId":"562","endLine":26,"endColumn":18},{"ruleId":"559","severity":1,"message":"654","line":26,"column":20,"nodeType":"561","messageId":"562","endLine":26,"endColumn":32},{"ruleId":"559","severity":1,"message":"655","line":32,"column":8,"nodeType":"561","messageId":"562","endLine":32,"endColumn":12},{"ruleId":"559","severity":1,"message":"656","line":68,"column":8,"nodeType":"561","messageId":"562","endLine":68,"endColumn":22},{"ruleId":"568","severity":1,"message":"657","line":132,"column":5,"nodeType":"570","endLine":132,"endColumn":7,"suggestions":"658"},{"ruleId":"648","severity":1,"message":"649","line":154,"column":19,"nodeType":"650","messageId":"651","endLine":154,"endColumn":21},{"ruleId":"559","severity":1,"message":"584","line":10,"column":9,"nodeType":"561","messageId":"562","endLine":10,"endColumn":17},{"ruleId":"559","severity":1,"message":"659","line":8,"column":12,"nodeType":"561","messageId":"562","endLine":8,"endColumn":26},{"ruleId":"559","severity":1,"message":"584","line":9,"column":11,"nodeType":"561","messageId":"562","endLine":9,"endColumn":19},{"ruleId":"559","severity":1,"message":"660","line":10,"column":11,"nodeType":"561","messageId":"562","endLine":10,"endColumn":19},{"ruleId":"559","severity":1,"message":"593","line":1,"column":35,"nodeType":"561","messageId":"562","endLine":1,"endColumn":45},{"ruleId":"559","severity":1,"message":"606","line":2,"column":41,"nodeType":"561","messageId":"562","endLine":2,"endColumn":48},{"ruleId":"559","severity":1,"message":"607","line":5,"column":28,"nodeType":"561","messageId":"562","endLine":5,"endColumn":38},{"ruleId":"559","severity":1,"message":"563","line":9,"column":3,"nodeType":"561","messageId":"562","endLine":9,"endColumn":25},{"ruleId":"559","severity":1,"message":"661","line":14,"column":10,"nodeType":"561","messageId":"562","endLine":14,"endColumn":24},{"ruleId":"559","severity":1,"message":"609","line":17,"column":11,"nodeType":"561","messageId":"562","endLine":17,"endColumn":19},{"ruleId":"559","severity":1,"message":"662","line":32,"column":10,"nodeType":"561","messageId":"562","endLine":32,"endColumn":25},{"ruleId":"559","severity":1,"message":"663","line":34,"column":9,"nodeType":"561","messageId":"562","endLine":34,"endColumn":17},{"ruleId":"559","severity":1,"message":"664","line":48,"column":9,"nodeType":"561","messageId":"562","endLine":48,"endColumn":21},{"ruleId":"648","severity":1,"message":"649","line":49,"column":67,"nodeType":"650","messageId":"651","endLine":49,"endColumn":69},{"ruleId":"633","severity":1,"message":"634","line":112,"column":94,"nodeType":"635","messageId":"636","endLine":112,"endColumn":95,"suggestions":"665"},{"ruleId":"633","severity":1,"message":"634","line":112,"column":99,"nodeType":"635","messageId":"636","endLine":112,"endColumn":100,"suggestions":"666"},{"ruleId":"633","severity":1,"message":"634","line":112,"column":119,"nodeType":"635","messageId":"636","endLine":112,"endColumn":120,"suggestions":"667"},{"ruleId":"633","severity":1,"message":"634","line":112,"column":139,"nodeType":"635","messageId":"636","endLine":112,"endColumn":140,"suggestions":"668"},{"ruleId":"633","severity":1,"message":"634","line":112,"column":159,"nodeType":"635","messageId":"636","endLine":112,"endColumn":160,"suggestions":"669"},{"ruleId":"633","severity":1,"message":"634","line":112,"column":179,"nodeType":"635","messageId":"636","endLine":112,"endColumn":180,"suggestions":"670"},{"ruleId":"633","severity":1,"message":"634","line":112,"column":199,"nodeType":"635","messageId":"636","endLine":112,"endColumn":200,"suggestions":"671"},{"ruleId":"633","severity":1,"message":"634","line":112,"column":218,"nodeType":"635","messageId":"636","endLine":112,"endColumn":219,"suggestions":"672"},{"ruleId":"559","severity":1,"message":"673","line":2,"column":10,"nodeType":"561","messageId":"562","endLine":2,"endColumn":15},{"ruleId":"559","severity":1,"message":"674","line":2,"column":17,"nodeType":"561","messageId":"562","endLine":2,"endColumn":22},{"ruleId":"559","severity":1,"message":"675","line":2,"column":24,"nodeType":"561","messageId":"562","endLine":2,"endColumn":34},{"ruleId":"559","severity":1,"message":"676","line":2,"column":36,"nodeType":"561","messageId":"562","endLine":2,"endColumn":40},{"ruleId":"559","severity":1,"message":"677","line":2,"column":42,"nodeType":"561","messageId":"562","endLine":2,"endColumn":50},{"ruleId":"559","severity":1,"message":"678","line":3,"column":28,"nodeType":"561","messageId":"562","endLine":3,"endColumn":40},{"ruleId":"559","severity":1,"message":"679","line":7,"column":10,"nodeType":"561","messageId":"562","endLine":7,"endColumn":34},{"ruleId":"559","severity":1,"message":"680","line":8,"column":8,"nodeType":"561","messageId":"562","endLine":8,"endColumn":12},{"ruleId":"559","severity":1,"message":"681","line":13,"column":27,"nodeType":"561","messageId":"562","endLine":13,"endColumn":46},{"ruleId":"559","severity":1,"message":"682","line":17,"column":9,"nodeType":"561","messageId":"562","endLine":17,"endColumn":19},{"ruleId":"559","severity":1,"message":"683","line":17,"column":21,"nodeType":"561","messageId":"562","endLine":17,"endColumn":34},{"ruleId":"559","severity":1,"message":"653","line":18,"column":9,"nodeType":"561","messageId":"562","endLine":18,"endColumn":18},{"ruleId":"559","severity":1,"message":"654","line":18,"column":20,"nodeType":"561","messageId":"562","endLine":18,"endColumn":32},{"ruleId":"559","severity":1,"message":"684","line":19,"column":9,"nodeType":"561","messageId":"562","endLine":19,"endColumn":24},{"ruleId":"559","severity":1,"message":"685","line":20,"column":9,"nodeType":"561","messageId":"562","endLine":20,"endColumn":13},{"ruleId":"559","severity":1,"message":"686","line":22,"column":8,"nodeType":"561","messageId":"562","endLine":22,"endColumn":24},{"ruleId":"559","severity":1,"message":"687","line":26,"column":6,"nodeType":"561","messageId":"562","endLine":26,"endColumn":18},{"ruleId":"559","severity":1,"message":"688","line":28,"column":8,"nodeType":"561","messageId":"562","endLine":28,"endColumn":21},{"ruleId":"568","severity":1,"message":"657","line":57,"column":5,"nodeType":"570","endLine":57,"endColumn":7,"suggestions":"689"},{"ruleId":"559","severity":1,"message":"690","line":63,"column":8,"nodeType":"561","messageId":"562","endLine":63,"endColumn":33},{"ruleId":"559","severity":1,"message":"605","line":9,"column":3,"nodeType":"561","messageId":"562","endLine":9,"endColumn":7},{"ruleId":"559","severity":1,"message":"675","line":12,"column":3,"nodeType":"561","messageId":"562","endLine":12,"endColumn":13},{"ruleId":"559","severity":1,"message":"674","line":15,"column":3,"nodeType":"561","messageId":"562","endLine":15,"endColumn":8},{"ruleId":"559","severity":1,"message":"691","line":16,"column":3,"nodeType":"561","messageId":"562","endLine":16,"endColumn":6},{"ruleId":"559","severity":1,"message":"692","line":23,"column":3,"nodeType":"561","messageId":"562","endLine":23,"endColumn":20},{"ruleId":"559","severity":1,"message":"584","line":75,"column":9,"nodeType":"561","messageId":"562","endLine":75,"endColumn":17},{"ruleId":"559","severity":1,"message":"693","line":81,"column":10,"nodeType":"561","messageId":"562","endLine":81,"endColumn":17},{"ruleId":"559","severity":1,"message":"652","line":82,"column":22,"nodeType":"561","messageId":"562","endLine":82,"endColumn":35},{"ruleId":"559","severity":1,"message":"687","line":93,"column":5,"nodeType":"561","messageId":"562","endLine":93,"endColumn":17},{"ruleId":"568","severity":1,"message":"657","line":189,"column":6,"nodeType":"570","endLine":189,"endColumn":8,"suggestions":"694"},{"ruleId":"559","severity":1,"message":"695","line":240,"column":9,"nodeType":"561","messageId":"562","endLine":240,"endColumn":19},{"ruleId":"559","severity":1,"message":"686","line":245,"column":9,"nodeType":"561","messageId":"562","endLine":245,"endColumn":25},{"ruleId":"559","severity":1,"message":"690","line":298,"column":9,"nodeType":"561","messageId":"562","endLine":298,"endColumn":57},{"ruleId":"648","severity":1,"message":"649","line":376,"column":34,"nodeType":"650","messageId":"651","endLine":376,"endColumn":36},{"ruleId":"648","severity":1,"message":"649","line":383,"column":28,"nodeType":"650","messageId":"651","endLine":383,"endColumn":30},{"ruleId":"559","severity":1,"message":"696","line":1,"column":17,"nodeType":"561","messageId":"562","endLine":1,"endColumn":26},{"ruleId":"559","severity":1,"message":"606","line":2,"column":10,"nodeType":"561","messageId":"562","endLine":2,"endColumn":17},{"ruleId":"559","severity":1,"message":"697","line":3,"column":15,"nodeType":"561","messageId":"562","endLine":3,"endColumn":24},{"ruleId":"559","severity":1,"message":"698","line":6,"column":8,"nodeType":"561","messageId":"562","endLine":6,"endColumn":31},{"ruleId":"559","severity":1,"message":"699","line":8,"column":10,"nodeType":"561","messageId":"562","endLine":8,"endColumn":19},{"ruleId":"559","severity":1,"message":"679","line":9,"column":10,"nodeType":"561","messageId":"562","endLine":9,"endColumn":34},{"ruleId":"559","severity":1,"message":"700","line":13,"column":11,"nodeType":"561","messageId":"562","endLine":13,"endColumn":22},{"ruleId":"559","severity":1,"message":"701","line":33,"column":10,"nodeType":"561","messageId":"562","endLine":33,"endColumn":21},{"ruleId":"559","severity":1,"message":"677","line":2,"column":18,"nodeType":"561","messageId":"562","endLine":2,"endColumn":26},{"ruleId":"559","severity":1,"message":"699","line":3,"column":22,"nodeType":"561","messageId":"562","endLine":3,"endColumn":31},{"ruleId":"559","severity":1,"message":"585","line":4,"column":9,"nodeType":"561","messageId":"562","endLine":4,"endColumn":22},{"ruleId":"702","severity":1,"message":"703","line":23,"column":7,"nodeType":"561","messageId":"704","endLine":23,"endColumn":16},{"ruleId":"559","severity":1,"message":"705","line":26,"column":23,"nodeType":"561","messageId":"562","endLine":26,"endColumn":35},{"ruleId":"568","severity":1,"message":"589","line":47,"column":8,"nodeType":"570","endLine":47,"endColumn":10,"suggestions":"706"},{"ruleId":"707","severity":1,"message":"708","line":100,"column":25,"nodeType":"709","messageId":"710","endLine":104,"endColumn":26,"fix":"711"},{"ruleId":"559","severity":1,"message":"591","line":1,"column":32,"nodeType":"561","messageId":"562","endLine":1,"endColumn":40},{"ruleId":"559","severity":1,"message":"679","line":9,"column":10,"nodeType":"561","messageId":"562","endLine":9,"endColumn":34},{"ruleId":"559","severity":1,"message":"712","line":33,"column":10,"nodeType":"561","messageId":"562","endLine":33,"endColumn":18},{"ruleId":"559","severity":1,"message":"713","line":64,"column":8,"nodeType":"561","messageId":"562","endLine":64,"endColumn":22},{"ruleId":"559","severity":1,"message":"714","line":85,"column":8,"nodeType":"561","messageId":"562","endLine":85,"endColumn":20},{"ruleId":"559","severity":1,"message":"715","line":77,"column":10,"nodeType":"561","messageId":"562","endLine":77,"endColumn":21},{"ruleId":"559","severity":1,"message":"716","line":81,"column":5,"nodeType":"561","messageId":"562","endLine":81,"endColumn":23},{"ruleId":"559","severity":1,"message":"717","line":82,"column":5,"nodeType":"561","messageId":"562","endLine":82,"endColumn":24},{"ruleId":"559","severity":1,"message":"718","line":83,"column":5,"nodeType":"561","messageId":"562","endLine":83,"endColumn":23},{"ruleId":"559","severity":1,"message":"620","line":87,"column":5,"nodeType":"561","messageId":"562","endLine":87,"endColumn":26},{"ruleId":"559","severity":1,"message":"622","line":88,"column":5,"nodeType":"561","messageId":"562","endLine":88,"endColumn":25},{"ruleId":"559","severity":1,"message":"719","line":90,"column":10,"nodeType":"561","messageId":"562","endLine":90,"endColumn":20},{"ruleId":"559","severity":1,"message":"720","line":94,"column":22,"nodeType":"561","messageId":"562","endLine":94,"endColumn":35},{"ruleId":"559","severity":1,"message":"721","line":266,"column":9,"nodeType":"561","messageId":"562","endLine":266,"endColumn":19},{"ruleId":"559","severity":1,"message":"722","line":286,"column":9,"nodeType":"561","messageId":"562","endLine":286,"endColumn":17},{"ruleId":"559","severity":1,"message":"723","line":3,"column":10,"nodeType":"561","messageId":"562","endLine":3,"endColumn":16},{"ruleId":"559","severity":1,"message":"588","line":21,"column":9,"nodeType":"561","messageId":"562","endLine":21,"endColumn":17},{"ruleId":"559","severity":1,"message":"724","line":20,"column":10,"nodeType":"561","messageId":"562","endLine":20,"endColumn":17,"suppressions":"725"},{"ruleId":"559","severity":1,"message":"696","line":1,"column":23,"nodeType":"561","messageId":"562","endLine":1,"endColumn":32},{"ruleId":"559","severity":1,"message":"726","line":6,"column":9,"nodeType":"561","messageId":"562","endLine":6,"endColumn":22},{"ruleId":"559","severity":1,"message":"727","line":20,"column":12,"nodeType":"561","messageId":"562","endLine":20,"endColumn":26},{"ruleId":"559","severity":1,"message":"728","line":16,"column":11,"nodeType":"561","messageId":"562","endLine":16,"endColumn":27},{"ruleId":"559","severity":1,"message":"609","line":23,"column":11,"nodeType":"561","messageId":"562","endLine":23,"endColumn":19},{"ruleId":"559","severity":1,"message":"729","line":56,"column":10,"nodeType":"561","messageId":"562","endLine":56,"endColumn":21},{"ruleId":"633","severity":1,"message":"634","line":74,"column":276,"nodeType":"635","messageId":"636","endLine":74,"endColumn":277,"suggestions":"730"},{"ruleId":"633","severity":1,"message":"634","line":74,"column":296,"nodeType":"635","messageId":"636","endLine":74,"endColumn":297,"suggestions":"731"},{"ruleId":"633","severity":1,"message":"634","line":74,"column":314,"nodeType":"635","messageId":"636","endLine":74,"endColumn":315,"suggestions":"732"},{"ruleId":"633","severity":1,"message":"634","line":74,"column":334,"nodeType":"635","messageId":"636","endLine":74,"endColumn":335,"suggestions":"733"},{"ruleId":"633","severity":1,"message":"634","line":74,"column":352,"nodeType":"635","messageId":"636","endLine":74,"endColumn":353,"suggestions":"734"},{"ruleId":"633","severity":1,"message":"634","line":74,"column":371,"nodeType":"635","messageId":"636","endLine":74,"endColumn":372,"suggestions":"735"},{"ruleId":"568","severity":1,"message":"645","line":101,"column":6,"nodeType":"570","endLine":101,"endColumn":8,"suggestions":"736"},{"ruleId":"559","severity":1,"message":"686","line":121,"column":9,"nodeType":"561","messageId":"562","endLine":121,"endColumn":25},{"ruleId":"559","severity":1,"message":"675","line":4,"column":28,"nodeType":"561","messageId":"562","endLine":4,"endColumn":38},{"ruleId":"559","severity":1,"message":"728","line":16,"column":11,"nodeType":"561","messageId":"562","endLine":16,"endColumn":27},{"ruleId":"559","severity":1,"message":"609","line":23,"column":11,"nodeType":"561","messageId":"562","endLine":23,"endColumn":19},{"ruleId":"633","severity":1,"message":"634","line":74,"column":137,"nodeType":"635","messageId":"636","endLine":74,"endColumn":138,"suggestions":"737"},{"ruleId":"633","severity":1,"message":"634","line":74,"column":142,"nodeType":"635","messageId":"636","endLine":74,"endColumn":143,"suggestions":"738"},{"ruleId":"633","severity":1,"message":"634","line":74,"column":162,"nodeType":"635","messageId":"636","endLine":74,"endColumn":163,"suggestions":"739"},{"ruleId":"633","severity":1,"message":"634","line":74,"column":182,"nodeType":"635","messageId":"636","endLine":74,"endColumn":183,"suggestions":"740"},{"ruleId":"633","severity":1,"message":"634","line":74,"column":202,"nodeType":"635","messageId":"636","endLine":74,"endColumn":203,"suggestions":"741"},{"ruleId":"633","severity":1,"message":"634","line":74,"column":222,"nodeType":"635","messageId":"636","endLine":74,"endColumn":223,"suggestions":"742"},{"ruleId":"633","severity":1,"message":"634","line":74,"column":242,"nodeType":"635","messageId":"636","endLine":74,"endColumn":243,"suggestions":"743"},{"ruleId":"633","severity":1,"message":"634","line":74,"column":261,"nodeType":"635","messageId":"636","endLine":74,"endColumn":262,"suggestions":"744"},{"ruleId":"568","severity":1,"message":"645","line":101,"column":6,"nodeType":"570","endLine":101,"endColumn":8,"suggestions":"745"},{"ruleId":"559","severity":1,"message":"675","line":4,"column":16,"nodeType":"561","messageId":"562","endLine":4,"endColumn":26},{"ruleId":"559","severity":1,"message":"678","line":8,"column":3,"nodeType":"561","messageId":"562","endLine":8,"endColumn":15},{"ruleId":"559","severity":1,"message":"746","line":49,"column":10,"nodeType":"561","messageId":"562","endLine":49,"endColumn":27},{"ruleId":"559","severity":1,"message":"717","line":52,"column":5,"nodeType":"561","messageId":"562","endLine":52,"endColumn":24},{"ruleId":"559","severity":1,"message":"747","line":53,"column":5,"nodeType":"561","messageId":"562","endLine":53,"endColumn":18},{"ruleId":"559","severity":1,"message":"748","line":55,"column":5,"nodeType":"561","messageId":"562","endLine":55,"endColumn":22},{"ruleId":"559","severity":1,"message":"610","line":57,"column":11,"nodeType":"561","messageId":"562","endLine":57,"endColumn":29},{"ruleId":"559","severity":1,"message":"729","line":61,"column":10,"nodeType":"561","messageId":"562","endLine":61,"endColumn":21},{"ruleId":"559","severity":1,"message":"749","line":61,"column":23,"nodeType":"561","messageId":"562","endLine":61,"endColumn":37},{"ruleId":"633","severity":1,"message":"634","line":69,"column":163,"nodeType":"635","messageId":"636","endLine":69,"endColumn":164,"suggestions":"750"},{"ruleId":"633","severity":1,"message":"634","line":69,"column":180,"nodeType":"635","messageId":"636","endLine":69,"endColumn":181,"suggestions":"751"},{"ruleId":"568","severity":1,"message":"645","line":93,"column":6,"nodeType":"570","endLine":93,"endColumn":8,"suggestions":"752"},{"ruleId":"559","severity":1,"message":"753","line":129,"column":9,"nodeType":"561","messageId":"562","endLine":129,"endColumn":33},{"ruleId":"559","severity":1,"message":"754","line":148,"column":9,"nodeType":"561","messageId":"562","endLine":148,"endColumn":20},{"ruleId":"559","severity":1,"message":"755","line":2,"column":18,"nodeType":"561","messageId":"562","endLine":2,"endColumn":28},{"ruleId":"559","severity":1,"message":"756","line":2,"column":45,"nodeType":"561","messageId":"562","endLine":2,"endColumn":60},{"ruleId":"559","severity":1,"message":"757","line":2,"column":62,"nodeType":"561","messageId":"562","endLine":2,"endColumn":76},{"ruleId":"559","severity":1,"message":"691","line":3,"column":24,"nodeType":"561","messageId":"562","endLine":3,"endColumn":27},{"ruleId":"559","severity":1,"message":"758","line":3,"column":38,"nodeType":"561","messageId":"562","endLine":3,"endColumn":44},{"ruleId":"559","severity":1,"message":"759","line":7,"column":9,"nodeType":"561","messageId":"562","endLine":7,"endColumn":16},{"ruleId":"559","severity":1,"message":"760","line":21,"column":69,"nodeType":"561","messageId":"562","endLine":21,"endColumn":76},{"ruleId":"559","severity":1,"message":"761","line":26,"column":12,"nodeType":"561","messageId":"562","endLine":26,"endColumn":17},{"ruleId":"633","severity":1,"message":"634","line":45,"column":178,"nodeType":"635","messageId":"636","endLine":45,"endColumn":179,"suggestions":"762"},{"ruleId":"633","severity":1,"message":"634","line":45,"column":186,"nodeType":"635","messageId":"636","endLine":45,"endColumn":187,"suggestions":"763"},{"ruleId":"633","severity":1,"message":"634","line":45,"column":215,"nodeType":"635","messageId":"636","endLine":45,"endColumn":216,"suggestions":"764"},{"ruleId":"633","severity":1,"message":"634","line":45,"column":224,"nodeType":"635","messageId":"636","endLine":45,"endColumn":225,"suggestions":"765"},{"ruleId":"633","severity":1,"message":"634","line":45,"column":247,"nodeType":"635","messageId":"636","endLine":45,"endColumn":248,"suggestions":"766"},{"ruleId":"633","severity":1,"message":"634","line":45,"column":264,"nodeType":"635","messageId":"636","endLine":45,"endColumn":265,"suggestions":"767"},{"ruleId":"559","severity":1,"message":"768","line":5,"column":25,"nodeType":"561","messageId":"562","endLine":5,"endColumn":37},{"ruleId":"559","severity":1,"message":"685","line":30,"column":12,"nodeType":"561","messageId":"562","endLine":30,"endColumn":16},{"ruleId":"559","severity":1,"message":"695","line":36,"column":11,"nodeType":"561","messageId":"562","endLine":36,"endColumn":21},{"ruleId":"559","severity":1,"message":"593","line":1,"column":21,"nodeType":"561","messageId":"562","endLine":1,"endColumn":31},{"ruleId":"559","severity":1,"message":"769","line":8,"column":8,"nodeType":"561","messageId":"562","endLine":8,"endColumn":20},{"ruleId":"559","severity":1,"message":"599","line":97,"column":12,"nodeType":"561","messageId":"562","endLine":97,"endColumn":29},{"ruleId":"559","severity":1,"message":"652","line":98,"column":24,"nodeType":"561","messageId":"562","endLine":98,"endColumn":37},{"ruleId":"559","severity":1,"message":"600","line":100,"column":12,"nodeType":"561","messageId":"562","endLine":100,"endColumn":33},{"ruleId":"568","severity":1,"message":"602","line":120,"column":8,"nodeType":"570","endLine":120,"endColumn":32,"suggestions":"770"},{"ruleId":"559","severity":1,"message":"723","line":2,"column":10,"nodeType":"561","messageId":"562","endLine":2,"endColumn":16},{"ruleId":"559","severity":1,"message":"771","line":2,"column":42,"nodeType":"561","messageId":"562","endLine":2,"endColumn":47},{"ruleId":"559","severity":1,"message":"772","line":6,"column":10,"nodeType":"561","messageId":"562","endLine":6,"endColumn":24},{"ruleId":"559","severity":1,"message":"773","line":34,"column":10,"nodeType":"561","messageId":"562","endLine":34,"endColumn":20},{"ruleId":"559","severity":1,"message":"774","line":36,"column":9,"nodeType":"561","messageId":"562","endLine":36,"endColumn":25},{"ruleId":"559","severity":1,"message":"775","line":37,"column":9,"nodeType":"561","messageId":"562","endLine":37,"endColumn":26},{"ruleId":"559","severity":1,"message":"591","line":1,"column":10,"nodeType":"561","messageId":"562","endLine":1,"endColumn":18},{"ruleId":"559","severity":1,"message":"723","line":2,"column":10,"nodeType":"561","messageId":"562","endLine":2,"endColumn":16},{"ruleId":"559","severity":1,"message":"776","line":3,"column":8,"nodeType":"561","messageId":"562","endLine":3,"endColumn":13},{"ruleId":"559","severity":1,"message":"777","line":7,"column":8,"nodeType":"561","messageId":"562","endLine":7,"endColumn":26},{"ruleId":"559","severity":1,"message":"685","line":36,"column":12,"nodeType":"561","messageId":"562","endLine":36,"endColumn":16},{"ruleId":"559","severity":1,"message":"746","line":37,"column":12,"nodeType":"561","messageId":"562","endLine":37,"endColumn":29},{"ruleId":"559","severity":1,"message":"778","line":37,"column":31,"nodeType":"561","messageId":"562","endLine":37,"endColumn":51},{"ruleId":"559","severity":1,"message":"779","line":38,"column":13,"nodeType":"561","messageId":"562","endLine":38,"endColumn":25},{"ruleId":"559","severity":1,"message":"717","line":38,"column":27,"nodeType":"561","messageId":"562","endLine":38,"endColumn":46},{"ruleId":"559","severity":1,"message":"747","line":38,"column":48,"nodeType":"561","messageId":"562","endLine":38,"endColumn":61},{"ruleId":"559","severity":1,"message":"622","line":38,"column":63,"nodeType":"561","messageId":"562","endLine":38,"endColumn":83},{"ruleId":"559","severity":1,"message":"695","line":44,"column":11,"nodeType":"561","messageId":"562","endLine":44,"endColumn":21},{"ruleId":"559","severity":1,"message":"753","line":49,"column":11,"nodeType":"561","messageId":"562","endLine":49,"endColumn":35},{"ruleId":"559","severity":1,"message":"723","line":2,"column":10,"nodeType":"561","messageId":"562","endLine":2,"endColumn":16},{"ruleId":"559","severity":1,"message":"776","line":3,"column":8,"nodeType":"561","messageId":"562","endLine":3,"endColumn":13},{"ruleId":"559","severity":1,"message":"685","line":33,"column":12,"nodeType":"561","messageId":"562","endLine":33,"endColumn":16},{"ruleId":"559","severity":1,"message":"695","line":39,"column":11,"nodeType":"561","messageId":"562","endLine":39,"endColumn":21},{"ruleId":"559","severity":1,"message":"691","line":3,"column":35,"nodeType":"561","messageId":"562","endLine":3,"endColumn":38},{"ruleId":"559","severity":1,"message":"583","line":7,"column":8,"nodeType":"561","messageId":"562","endLine":7,"endColumn":14},{"ruleId":"568","severity":1,"message":"780","line":137,"column":8,"nodeType":"570","endLine":137,"endColumn":10,"suggestions":"781"},{"ruleId":"568","severity":1,"message":"782","line":183,"column":8,"nodeType":"570","endLine":183,"endColumn":45,"suggestions":"783"},{"ruleId":"559","severity":1,"message":"585","line":2,"column":9,"nodeType":"561","messageId":"562","endLine":2,"endColumn":22},{"ruleId":"559","severity":1,"message":"784","line":17,"column":12,"nodeType":"561","messageId":"562","endLine":17,"endColumn":23},{"ruleId":"559","severity":1,"message":"727","line":19,"column":12,"nodeType":"561","messageId":"562","endLine":19,"endColumn":26},{"ruleId":"559","severity":1,"message":"775","line":53,"column":11,"nodeType":"561","messageId":"562","endLine":53,"endColumn":28},"@typescript-eslint/no-unused-vars","'useSalesForceDataWithTwoQueries' is defined but never used.","Identifier","unusedVar","'updateDataInSalesForce' is defined but never used.","'GetPartnersDataType' is defined but never used.","'SalesForcePartner' is defined but never used.","'Outlet' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'query' and 'transformer'. Either include them or remove the dependency array.","ArrayExpression",["785"],"React Hook useEffect has a missing dependency: 'transformer'. Either include it or remove the dependency array.",["786"],"'T' is defined but never used.","'PropsWithChildren' is defined but never used.","'Header' is defined but never used.","'USERNAME' is assigned a value but never used.","'PASSWORD' is assigned a value but never used.","'LOGIN_URL' is assigned a value but never used.","'SalesforceAuthResponse' is defined but never used.","'IncentivesProvider' is defined but never used.","'PartnerContextProvider' is defined but never used.","'styles' is defined but never used.","'isMobile' is assigned a value but never used.","'useMediaQuery' is defined but never used.","'Logo' is defined but never used.","'React' is defined but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["787"],"'useState' is defined but never used.","'getItem' is defined but never used.","'useContext' is defined but never used.","'axios' is defined but never used.","'Drawer' is defined but never used.","'Spin' is defined but never used.","'GetIncentiveDataType' is defined but never used.","'usePartnerDetails' is defined but never used.","'viewOnlyRequested' is assigned a value but never used.","'loadingPartnerDetails' is assigned a value but never used.","'incentiveFromSalesForce' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setSavedAcceptedList'. Either include it or remove the dependency array.",["788"],"'partnerStatus' is assigned a value but never used.","'List' is defined but never used.","'message' is defined but never used.","'DeleteIcon' is defined but never used.","'createDataInSalesForce' is defined but never used.","'DataType' is defined but never used.","'selectedIncentives' is assigned a value but never used.","'removeSelectedIncentive' is assigned a value but never used.","'totalMeetingsRequired' is assigned a value but never used.","'incentiveCounts' is assigned a value but never used.","'setSelectedIncentives' is assigned a value but never used.","'setIncentiveCounts' is assigned a value but never used.","'savedIncentiveCounts' is assigned a value but never used.","'setSavedIncentiveCounts' is assigned a value but never used.","'savedSelectedIncentives' is assigned a value but never used.","'setSavedSelectedIncentives' is assigned a value but never used.","'removeAcceptedPartner' is assigned a value but never used.","'removeRequestedPartner' is assigned a value but never used.","'removeDeclinePartner' is assigned a value but never used.","'setSavedAcceptedList' is assigned a value but never used.","'setSavedRequestedList' is assigned a value but never used.","'setSavedDeclinedList' is assigned a value but never used.","'setAcceptedList' is assigned a value but never used.","'setDeclinedList' is assigned a value but never used.","'setRequestedList' is assigned a value but never used.","'partnerContext' is assigned a value but never used.","'incentivesContext' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clientId' and 'handleBeforeUnload'. Either include them or remove the dependency array.",["789"],"no-useless-escape","Unnecessary escape character: \\'.","TemplateElement","unnecessaryEscape",["790","791"],["792","793"],["794","795"],["796","797"],["798","799"],["800","801"],["802","803"],["804","805"],"React Hook useEffect has a missing dependency: 'clientId'. Either include it or remove the dependency array.",["806"],"'updatedSavedAcceptedList' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setSortedInfo' is assigned a value but never used.","'richMerge' is assigned a value but never used.","'setRichMerge' is assigned a value but never used.","'menu' is assigned a value but never used.","'handleAddClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["807"],"'avatarInitials' is assigned a value but never used.","'isTablet' is assigned a value but never used.","'DeleteOutlined' is defined but never used.","'pendingMeetings' is assigned a value but never used.","'navigate' is assigned a value but never used.","'getCartCount' is assigned a value but never used.",["808","809"],["810","811"],["812","813"],["814","815"],["816","817"],["818","819"],["820","821"],["822","823"],"'Space' is defined but never used.","'Table' is defined but never used.","'Pagination' is defined but never used.","'Menu' is defined but never used.","'Checkbox' is defined but never used.","'SorterResult' is defined but never used.","'getMemberInfoFromContact' is defined but never used.","'Link' is defined but never used.","'setActiveCheckboxes' is assigned a value but never used.","'suveryLink' is assigned a value but never used.","'setSurveyLink' is assigned a value but never used.","'selectedPartner' is assigned a value but never used.","'open' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","'filteredData' is assigned a value but never used.","'onCloseDrawer' is assigned a value but never used.",["824"],"'columns' is assigned a value but never used.","'Tag' is defined but never used.","'usePartnerContext' is defined but never used.","'loading' is assigned a value but never used.",["825"],"'showDrawer' is assigned a value but never used.","'useEffect' is defined but never used.","'TabsProps' is defined but never used.","'MobileIncentivesSection' is defined but never used.","'useParams' is defined but never used.","'ContactInfo' is defined but never used.","'isModalOpen' is assigned a value but never used.","@typescript-eslint/no-redeclare","'Login' is already defined.","redeclared","'setEmailData' is assigned a value but never used.",["826"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"827","text":"828"},"'clientId' is assigned a value but never used.","'getDisplayLink' is assigned a value but never used.","'renderAvatar' is assigned a value but never used.","'isDQpartner' is assigned a value but never used.","'addAcceptedPartner' is assigned a value but never used.","'addRequestedPartner' is assigned a value but never used.","'addDeclinedPartner' is assigned a value but never used.","'isAccepted' is assigned a value but never used.","'contextHolder' is assigned a value but never used.","'onDeclined' is assigned a value but never used.","'onAccept' is assigned a value but never used.","'Button' is defined but never used.","'current' is assigned a value but never used.",["829"],"'CloseOutlined' is defined but never used.","'checkboxStates' is assigned a value but never used.","'PartnersDataType' is defined but never used.","'currentPage' is assigned a value but never used.",["830","831"],["832","833"],["834","835"],["836","837"],["838","839"],["840","841"],["842"],["843","844"],["845","846"],["847","848"],["849","850"],["851","852"],["853","854"],["855","856"],["857","858"],["859"],"'isAcceptModalOpen' is assigned a value but never used.","'requestedList' is assigned a value but never used.","'savedDeclinedList' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.",["860","861"],["862","863"],["864"],"'handleRemoveDeclineClick' is assigned a value but never used.","'visibleData' is assigned a value but never used.","'Controller' is defined but never used.","'UseFormRegister' is defined but never used.","'useFormContext' is defined but never used.","'Result' is defined but never used.","'NavLink' is defined but never used.","'control' is assigned a value but never used.","'error' is assigned a value but never used.",["865","866"],["867","868"],["869","870"],["871","872"],["873","874"],["875","876"],"'EditOutlined' is defined but never used.","'PartnerModal' is defined but never used.",["877"],"'Empty' is defined but never used.","'SearchOutlined' is defined but never used.","'inputValue' is assigned a value but never used.","'isSubmitDisabled' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'dayjs' is defined but never used.","'AcceptRequestModal' is defined but never used.","'setIsAcceptModalOpen' is assigned a value but never used.","'declinedList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'transformData'. Either include it or remove the dependency array.",["878"],"React Hook useEffect has a missing dependency: 'onSelectText'. Either include it or remove the dependency array. If 'onSelectText' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["879"],"'inputPrefix' is assigned a value but never used.",{"desc":"880","fix":"881"},{"desc":"882","fix":"883"},{"desc":"884","fix":"885"},{"desc":"886","fix":"887"},{"desc":"888","fix":"889"},{"messageId":"890","fix":"891","desc":"892"},{"messageId":"893","fix":"894","desc":"895"},{"messageId":"890","fix":"896","desc":"892"},{"messageId":"893","fix":"897","desc":"895"},{"messageId":"890","fix":"898","desc":"892"},{"messageId":"893","fix":"899","desc":"895"},{"messageId":"890","fix":"900","desc":"892"},{"messageId":"893","fix":"901","desc":"895"},{"messageId":"890","fix":"902","desc":"892"},{"messageId":"893","fix":"903","desc":"895"},{"messageId":"890","fix":"904","desc":"892"},{"messageId":"893","fix":"905","desc":"895"},{"messageId":"890","fix":"906","desc":"892"},{"messageId":"893","fix":"907","desc":"895"},{"messageId":"890","fix":"908","desc":"892"},{"messageId":"893","fix":"909","desc":"895"},{"desc":"910","fix":"911"},{"desc":"912","fix":"913"},{"messageId":"890","fix":"914","desc":"892"},{"messageId":"893","fix":"915","desc":"895"},{"messageId":"890","fix":"916","desc":"892"},{"messageId":"893","fix":"917","desc":"895"},{"messageId":"890","fix":"918","desc":"892"},{"messageId":"893","fix":"919","desc":"895"},{"messageId":"890","fix":"920","desc":"892"},{"messageId":"893","fix":"921","desc":"895"},{"messageId":"890","fix":"922","desc":"892"},{"messageId":"893","fix":"923","desc":"895"},{"messageId":"890","fix":"924","desc":"892"},{"messageId":"893","fix":"925","desc":"895"},{"messageId":"890","fix":"926","desc":"892"},{"messageId":"893","fix":"927","desc":"895"},{"messageId":"890","fix":"928","desc":"892"},{"messageId":"893","fix":"929","desc":"895"},{"desc":"912","fix":"930"},{"desc":"912","fix":"931"},{"desc":"932","fix":"933"},[4114,4114]," rel=\"noreferrer\"",{"kind":"934","justification":"935"},{"messageId":"890","fix":"936","desc":"892"},{"messageId":"893","fix":"937","desc":"895"},{"messageId":"890","fix":"938","desc":"892"},{"messageId":"893","fix":"939","desc":"895"},{"messageId":"890","fix":"940","desc":"892"},{"messageId":"893","fix":"941","desc":"895"},{"messageId":"890","fix":"942","desc":"892"},{"messageId":"893","fix":"943","desc":"895"},{"messageId":"890","fix":"944","desc":"892"},{"messageId":"893","fix":"945","desc":"895"},{"messageId":"890","fix":"946","desc":"892"},{"messageId":"893","fix":"947","desc":"895"},{"desc":"910","fix":"948"},{"messageId":"890","fix":"949","desc":"892"},{"messageId":"893","fix":"950","desc":"895"},{"messageId":"890","fix":"951","desc":"892"},{"messageId":"893","fix":"952","desc":"895"},{"messageId":"890","fix":"953","desc":"892"},{"messageId":"893","fix":"954","desc":"895"},{"messageId":"890","fix":"955","desc":"892"},{"messageId":"893","fix":"956","desc":"895"},{"messageId":"890","fix":"957","desc":"892"},{"messageId":"893","fix":"958","desc":"895"},{"messageId":"890","fix":"959","desc":"892"},{"messageId":"893","fix":"960","desc":"895"},{"messageId":"890","fix":"961","desc":"892"},{"messageId":"893","fix":"962","desc":"895"},{"messageId":"890","fix":"963","desc":"892"},{"messageId":"893","fix":"964","desc":"895"},{"desc":"910","fix":"965"},{"messageId":"890","fix":"966","desc":"892"},{"messageId":"893","fix":"967","desc":"895"},{"messageId":"890","fix":"968","desc":"892"},{"messageId":"893","fix":"969","desc":"895"},{"desc":"910","fix":"970"},{"messageId":"890","fix":"971","desc":"892"},{"messageId":"893","fix":"972","desc":"895"},{"messageId":"890","fix":"973","desc":"892"},{"messageId":"893","fix":"974","desc":"895"},{"messageId":"890","fix":"975","desc":"892"},{"messageId":"893","fix":"976","desc":"895"},{"messageId":"890","fix":"977","desc":"892"},{"messageId":"893","fix":"978","desc":"895"},{"messageId":"890","fix":"979","desc":"892"},{"messageId":"893","fix":"980","desc":"895"},{"messageId":"890","fix":"981","desc":"892"},{"messageId":"893","fix":"982","desc":"895"},{"desc":"886","fix":"983"},{"desc":"984","fix":"985"},{"desc":"986","fix":"987"},"Update the dependencies array to be: [query, transformer]",{"range":"988","text":"989"},"Update the dependencies array to be: [firstQuery, secondQueryTemplate, transformer]",{"range":"990","text":"991"},"Update the dependencies array to be: [clientId, navigate]",{"range":"992","text":"993"},"Update the dependencies array to be: [partnersFromSalesForce, setSavedAcceptedList]",{"range":"994","text":"995"},"Update the dependencies array to be: [acceptedList, requestedList, declinedList, handleBeforeUnload, clientId]",{"range":"996","text":"997"},"removeEscape",{"range":"998","text":"935"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"999","text":"1000"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1001","text":"935"},{"range":"1002","text":"1000"},{"range":"1003","text":"935"},{"range":"1004","text":"1000"},{"range":"1005","text":"935"},{"range":"1006","text":"1000"},{"range":"1007","text":"935"},{"range":"1008","text":"1000"},{"range":"1009","text":"935"},{"range":"1010","text":"1000"},{"range":"1011","text":"935"},{"range":"1012","text":"1000"},{"range":"1013","text":"935"},{"range":"1014","text":"1000"},"Update the dependencies array to be: [clientId]",{"range":"1015","text":"1016"},"Update the dependencies array to be: [fetchData]",{"range":"1017","text":"1018"},{"range":"1019","text":"935"},{"range":"1020","text":"1000"},{"range":"1021","text":"935"},{"range":"1022","text":"1000"},{"range":"1023","text":"935"},{"range":"1024","text":"1000"},{"range":"1025","text":"935"},{"range":"1026","text":"1000"},{"range":"1027","text":"935"},{"range":"1028","text":"1000"},{"range":"1029","text":"935"},{"range":"1030","text":"1000"},{"range":"1031","text":"935"},{"range":"1032","text":"1000"},{"range":"1033","text":"935"},{"range":"1034","text":"1000"},{"range":"1035","text":"1018"},{"range":"1036","text":"1018"},"Update the dependencies array to be: [navigate]",{"range":"1037","text":"1038"},"directive","",{"range":"1039","text":"935"},{"range":"1040","text":"1000"},{"range":"1041","text":"935"},{"range":"1042","text":"1000"},{"range":"1043","text":"935"},{"range":"1044","text":"1000"},{"range":"1045","text":"935"},{"range":"1046","text":"1000"},{"range":"1047","text":"935"},{"range":"1048","text":"1000"},{"range":"1049","text":"935"},{"range":"1050","text":"1000"},{"range":"1051","text":"1016"},{"range":"1052","text":"935"},{"range":"1053","text":"1000"},{"range":"1054","text":"935"},{"range":"1055","text":"1000"},{"range":"1056","text":"935"},{"range":"1057","text":"1000"},{"range":"1058","text":"935"},{"range":"1059","text":"1000"},{"range":"1060","text":"935"},{"range":"1061","text":"1000"},{"range":"1062","text":"935"},{"range":"1063","text":"1000"},{"range":"1064","text":"935"},{"range":"1065","text":"1000"},{"range":"1066","text":"935"},{"range":"1067","text":"1000"},{"range":"1068","text":"1016"},{"range":"1069","text":"935"},{"range":"1070","text":"1000"},{"range":"1071","text":"935"},{"range":"1072","text":"1000"},{"range":"1073","text":"1016"},{"range":"1074","text":"935"},{"range":"1075","text":"1000"},{"range":"1076","text":"935"},{"range":"1077","text":"1000"},{"range":"1078","text":"935"},{"range":"1079","text":"1000"},{"range":"1080","text":"935"},{"range":"1081","text":"1000"},{"range":"1082","text":"935"},{"range":"1083","text":"1000"},{"range":"1084","text":"935"},{"range":"1085","text":"1000"},{"range":"1086","text":"995"},"Update the dependencies array to be: [transformData]",{"range":"1087","text":"1088"},"Update the dependencies array to be: [onSelectText, resetCheckboxes, setResetCheckboxes]",{"range":"1089","text":"1090"},[701,703],"[query, transformer]",[2287,2320],"[firstQuery, secondQueryTemplate, transformer]",[449,459],"[clientId, navigate]",[6846,6870],"[partnersFromSalesForce, setSavedAcceptedList]",[2574,2617],"[acceptedList, requestedList, declinedList, handleBeforeUnload, clientId]",[2955,2956],[2955,2955],"\\",[2960,2961],[2960,2960],[2980,2981],[2980,2980],[3000,3001],[3000,3000],[3020,3021],[3020,3020],[3040,3041],[3040,3040],[3060,3061],[3060,3060],[3079,3080],[3079,3079],[4080,4082],"[clientId]",[4736,4738],"[fetchData]",[3742,3743],[3742,3742],[3747,3748],[3747,3747],[3767,3768],[3767,3767],[3787,3788],[3787,3787],[3807,3808],[3807,3807],[3827,3828],[3827,3827],[3847,3848],[3847,3847],[3866,3867],[3866,3866],[2114,2116],[6124,6126],[1387,1389],"[navigate]",[2447,2448],[2447,2447],[2467,2468],[2467,2467],[2485,2486],[2485,2485],[2505,2506],[2505,2505],[2523,2524],[2523,2523],[2542,2543],[2542,2542],[3601,3603],[2413,2414],[2413,2413],[2418,2419],[2418,2418],[2438,2439],[2438,2438],[2458,2459],[2458,2458],[2478,2479],[2478,2478],[2498,2499],[2498,2498],[2518,2519],[2518,2518],[2537,2538],[2537,2537],[3658,3660],[2371,2372],[2371,2371],[2388,2389],[2388,2388],[3165,3167],[1840,1841],[1840,1840],[1848,1849],[1848,1848],[1877,1878],[1877,1877],[1886,1887],[1886,1886],[1909,1910],[1909,1909],[1926,1927],[1926,1926],[5643,5667],[5047,5049],"[transformData]",[6624,6661],"[onSelectText, resetCheckboxes, setResetCheckboxes]"]