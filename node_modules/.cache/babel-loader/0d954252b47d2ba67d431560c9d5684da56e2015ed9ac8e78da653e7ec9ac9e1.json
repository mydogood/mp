{"ast":null,"code":"import _toConsumableArray from\"/Users/shannoncoakley/Documents/mp/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _createForOfIteratorHelper from\"/Users/shannoncoakley/Documents/mp/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _objectSpread from\"/Users/shannoncoakley/Documents/mp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/shannoncoakley/Documents/mp/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/shannoncoakley/Documents/mp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/shannoncoakley/Documents/mp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect,useCallback}from\"react\";import{fetchDataFromSalesForce}from\"./salesforceAuth\";export function useSalesForceData(query,transformer){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var salesForceData,transformedData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetchDataFromSalesForce(query);case 3:salesForceData=_context.sent;transformedData=salesForceData.records.map(transformer);setData(transformedData);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(\"Failed to fetch data:\",_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return _fetchData.apply(this,arguments);}void fetchData();},[]);return data;}export function useSalesForceDataWithTwoQueries(firstQuery,secondQueryTemplate,transformer){var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];useEffect(function(){function fetchData(){return _fetchData2.apply(this,arguments);}function _fetchData2(){_fetchData2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var firstSalesForceData,promises,combinedRecords,transformedData;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetchDataFromSalesForce(firstQuery);case 3:firstSalesForceData=_context3.sent;if(!(firstSalesForceData&&firstSalesForceData.records&&firstSalesForceData.records.length>0)){_context3.next=13;break;}promises=firstSalesForceData.records.map(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(record){var clientId,secondQuery,secondSalesForceData;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:clientId=record.Client_Id__c;secondQuery=secondQueryTemplate.replace(\"record.Client_Id__c\",clientId);_context2.next=4;return fetchDataFromSalesForce(secondQuery);case 4:secondSalesForceData=_context2.sent;return _context2.abrupt(\"return\",_objectSpread(_objectSpread({},record),secondSalesForceData.records.length>0?secondSalesForceData.records[0]:{}));case 6:case\"end\":return _context2.stop();}},_callee2);}));return function(_x){return _ref.apply(this,arguments);};}());_context3.next=8;return Promise.all(promises);case 8:combinedRecords=_context3.sent;transformedData=combinedRecords.map(transformer);setData(transformedData);_context3.next=14;break;case 13:console.warn(\"No records found in first request\");case 14:_context3.next=19;break;case 16:_context3.prev=16;_context3.t0=_context3[\"catch\"](0);console.error(\"Failed to fetch data:\",_context3.t0);case 19:case\"end\":return _context3.stop();}},_callee3,null,[[0,16]]);}));return _fetchData2.apply(this,arguments);}void fetchData();},[firstQuery,secondQueryTemplate]);return data;}export function useSalesForceDataWithThreeQueries(firstQuery,secondQuery,thirdQueryGenerator,transformer){var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),data=_useState6[0],setData=_useState6[1];var fetchData=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var allRecords,firstSalesForceData,secondSalesForceData,_recordIds,thirdQuery,thirdSalesForceData,_iterator,_step,_loop,transformedData;return _regeneratorRuntime().wrap(function _callee4$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.prev=0;allRecords=[];// Processing the first request\n_context5.next=4;return fetchDataFromSalesForce(firstQuery);case 4:firstSalesForceData=_context5.sent;if(firstSalesForceData&&firstSalesForceData.records){firstSalesForceData.records.forEach(function(record){allRecords.push({primaryData:record});});}// Processing the second request\n_context5.next=8;return fetchDataFromSalesForce(secondQuery);case 8:secondSalesForceData=_context5.sent;if(secondSalesForceData&&secondSalesForceData.records){secondSalesForceData.records.forEach(function(record){allRecords.push({primaryData:record});});}// Getting the ID for the third request only after the first two requests have completed\n_recordIds=allRecords.map(function(record){return record.primaryData.Id;});// Processing the third request\nthirdQuery=thirdQueryGenerator(_recordIds);_context5.next=14;return fetchDataFromSalesForce(thirdQuery);case 14:thirdSalesForceData=_context5.sent;_iterator=_createForOfIteratorHelper(thirdSalesForceData.records);_context5.prev=16;_loop=/*#__PURE__*/_regeneratorRuntime().mark(function _loop(){var relatedRecord,match;return _regeneratorRuntime().wrap(function _loop$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:relatedRecord=_step.value;match=allRecords.find(function(record){return record.primaryData.Id===relatedRecord.Client_Name__c;});if(match){// Changes to Survey_Option_Name__c processing logic\nif(!match.relatedData){match.relatedData=_objectSpread(_objectSpread({},relatedRecord),{},{Survey_Option_Name__c:Array.isArray(relatedRecord.Survey_Option_Name__c)?relatedRecord.Survey_Option_Name__c:[relatedRecord.Survey_Option_Name__c]});}else{match.relatedData.Survey_Option_Name__c=[].concat(_toConsumableArray(match.relatedData.Survey_Option_Name__c||[]),_toConsumableArray(Array.isArray(relatedRecord.Survey_Option_Name__c)?relatedRecord.Survey_Option_Name__c:[relatedRecord.Survey_Option_Name__c]));}}case 3:case\"end\":return _context4.stop();}},_loop);});_iterator.s();case 19:if((_step=_iterator.n()).done){_context5.next=23;break;}return _context5.delegateYield(_loop(),\"t0\",21);case 21:_context5.next=19;break;case 23:_context5.next=28;break;case 25:_context5.prev=25;_context5.t1=_context5[\"catch\"](16);_iterator.e(_context5.t1);case 28:_context5.prev=28;_iterator.f();return _context5.finish(28);case 31:// Data Conversion\ntransformedData=allRecords.map(function(record){return transformer(record.primaryData,record.relatedData);});setData(transformedData);_context5.next=38;break;case 35:_context5.prev=35;_context5.t2=_context5[\"catch\"](0);console.error(\"Failed to fetch data:\",_context5.t2);case 38:case\"end\":return _context5.stop();}},_callee4,null,[[0,35],[16,25,28,31]]);})),[firstQuery,secondQuery,thirdQueryGenerator,transformer]);useEffect(function(){void fetchData();},[fetchData]);return{data:data,fetchData:fetchData};}export function usePartnerDetails(partnerKey){var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),data=_useState8[0],setData=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];useEffect(function(){if(!partnerKey)return;function fetchData(){return _fetchData3.apply(this,arguments);}function _fetchData3(){_fetchData3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var response;return _regeneratorRuntime().wrap(function _callee5$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:setLoading(true);_context6.prev=1;_context6.next=4;return fetchDataFromSalesForce(\"query/?q=SELECT+Rich_Merge__c+FROM+Client_Pitch__c+WHERE+Active__c=true+AND+Custom_Outreach__c=true+AND+Client_Id__c='\".concat(partnerKey,\"'\"));case 4:response=_context6.sent;setData(response.data);_context6.next=12;break;case 8:_context6.prev=8;_context6.t0=_context6[\"catch\"](1);console.error(\"Error fetching partner details:\",_context6.t0);setData(null);case 12:_context6.prev=12;setLoading(false);return _context6.finish(12);case 15:case\"end\":return _context6.stop();}},_callee5,null,[[1,8,12,15]]);}));return _fetchData3.apply(this,arguments);}void fetchData();},[partnerKey]);return{data:data,loading:loading};}export var getMemberInfoFromContact=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(criteria){var endpoint,response,_record;return _regeneratorRuntime().wrap(function _callee6$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:endpoint=\"query/?q=SELECT+Id,Member__c,Points_Balance__c,Pending_Points__c,Partner_Referral_Link__c,Shortened_PR_Link__c,Email,Member_Survey_Link__c,Non_Profit_Top_Choice__c,Mailing_Address_Verified_Date__c,MailingStreet,MailingCity,MailingState,MailingPostalCode,MailingCountry,Charity_Name__c,AccountId+FROM+Contact+WHERE+RecordTypeId='01236000000yGps'+AND+Id='\".concat(criteria,\"'\");_context7.prev=1;_context7.next=4;return fetchDataFromSalesForce(endpoint);case 4:response=_context7.sent;if(!(response&&response.records&&response.records.length>0)){_context7.next=8;break;}_record=response.records[0];return _context7.abrupt(\"return\",{Id:_record.Id,Member__c:_record.Member__c,Pending_Points__c:_record.Pending_Points__c,Partner_Referral_Link__c:_record.Partner_Referral_Link__c,Points_Balance__c:_record.Points_Balance__c,Member_Survey_Link__c:_record.Member_Survey_Link__c,Non_Profit_Top_Choice__c:_record.Non_Profit_Top_Choice__c,Charity_Name__c:_record.Charity_Name__c,MailingStreet:_record.MailingStreet,MailingCity:_record.MailingCity,MailingState:_record.MailingState,MailingPostalCode:_record.MailingPostalCode,MailingCountry:_record.MailingCountry,Email:_record.Email,Mailing_Address_Verified_Date__c:_record.Mailing_Address_Verified_Date__c,AccountId:_record.AccountId,Shortened_PR_Link__c:_record.Shortened_PR_Link__c});case 8:return _context7.abrupt(\"return\",null);case 11:_context7.prev=11;_context7.t0=_context7[\"catch\"](1);console.error(\"Error fetching Member Info:\",_context7.t0);throw _context7.t0;case 15:case\"end\":return _context7.stop();}},_callee6,null,[[1,11]]);}));return function getMemberInfoFromContact(_x2){return _ref3.apply(this,arguments);};}();","map":{"version":3,"names":["useState","useEffect","useCallback","fetchDataFromSalesForce","useSalesForceData","query","transformer","_useState","_useState2","_slicedToArray","data","setData","fetchData","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","salesForceData","transformedData","wrap","_callee$","_context","prev","next","sent","records","map","t0","console","error","stop","useSalesForceDataWithTwoQueries","firstQuery","secondQueryTemplate","_useState3","_useState4","_fetchData2","_callee3","firstSalesForceData","promises","combinedRecords","_callee3$","_context3","length","_ref","_callee2","record","clientId","secondQuery","secondSalesForceData","_callee2$","_context2","Client_Id__c","replace","abrupt","_objectSpread","_x","Promise","all","warn","useSalesForceDataWithThreeQueries","thirdQueryGenerator","_useState5","_useState6","_callee4","allRecords","_recordIds","thirdQuery","thirdSalesForceData","_iterator","_step","_loop","_callee4$","_context5","forEach","push","primaryData","recordIds","Id","_createForOfIteratorHelper","relatedRecord","match","_loop$","_context4","value","find","Client_Name__c","relatedData","Survey_Option_Name__c","Array","isArray","concat","_toConsumableArray","s","n","done","delegateYield","t1","e","f","finish","t2","usePartnerDetails","partnerKey","_useState7","_useState8","_useState9","_useState10","loading","setLoading","_fetchData3","_callee5","response","_callee5$","_context6","getMemberInfoFromContact","_ref3","_callee6","criteria","endpoint","_record","_callee6$","_context7","Member__c","Pending_Points__c","Partner_Referral_Link__c","Points_Balance__c","Member_Survey_Link__c","Non_Profit_Top_Choice__c","Charity_Name__c","MailingStreet","MailingCity","MailingState","MailingPostalCode","MailingCountry","Email","Mailing_Address_Verified_Date__c","AccountId","Shortened_PR_Link__c","_x2"],"sources":["/Users/shannoncoakley/Documents/mp/src/getSalesForceData.ts"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from \"react\";\nimport {\n  fetchDataFromSalesForce,\n  updateDataInSalesForce,\n} from \"./salesforceAuth\";\n\ntype Transformer<T, U> = (record: T) => U;\n\nexport function useSalesForceData<T, U>(\n  query: string,\n  transformer: Transformer<T, U>\n) {\n  const [data, setData] = useState<U[]>([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const salesForceData = await fetchDataFromSalesForce(query);\n        const transformedData = salesForceData.records.map(transformer);\n        setData(transformedData);\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    }\n    void fetchData();\n  }, []);\n\n  return data;\n}\n\ntype RecordType = {\n  Client_Id__c: string;\n};\n\nexport function useSalesForceDataWithTwoQueries<T, U>(\n  firstQuery: string,\n  secondQueryTemplate: string,\n  transformer: Transformer<T, U>\n) {\n  const [data, setData] = useState<U[]>([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const firstSalesForceData = await fetchDataFromSalesForce(firstQuery);\n\n        if (\n          firstSalesForceData &&\n          firstSalesForceData.records &&\n          firstSalesForceData.records.length > 0\n        ) {\n          const promises = firstSalesForceData.records.map(\n            async (record: RecordType) => {\n              const clientId = record.Client_Id__c;\n              const secondQuery = secondQueryTemplate.replace(\n                \"record.Client_Id__c\",\n                clientId\n              );\n\n              const secondSalesForceData = await fetchDataFromSalesForce(\n                secondQuery\n              );\n\n              return {\n                ...record,\n                ...(secondSalesForceData.records.length > 0\n                  ? secondSalesForceData.records[0]\n                  : {}),\n              };\n            }\n          );\n\n          const combinedRecords = await Promise.all(promises);\n\n          const transformedData = combinedRecords.map(transformer);\n          setData(transformedData);\n        } else {\n          console.warn(\"No records found in first request\");\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    }\n\n    void fetchData();\n  }, [firstQuery, secondQueryTemplate]);\n\n  return data;\n}\n\ntype SalesForcePartner = {\n  Id: string;\n  Client_Id__c?: string;\n  Account_ID__c?: string;\n  Member_Account_ID__c?: string;\n  Client_Name__c: string;\n  Account_Name_Merge_Only__c: string;\n  Quick_Overview__c: string;\n  Client_Website__c?: string;\n  Website?: string;\n  Rich_Merge__c?: string;\n  Stage_M__c?: string;\n  Stage_MP__c?: string;\n  Sweepstakes_Type__c?: string;\n  Client_Campaign_ID__c?: string;\n  Interest_in_Partner__c?: string;\n  RecordTypeId?: string;\n  Client_Campaign__c?: string;\n  Meeting_Source__c?: string;\n  Intro_Type__c?: string;\n  Request_Submitted_Date_M__c?: string;\n  Related_Membership__c: string;\n  Related_Membership_Member__c: string;\n  Survey_Option_Name__c: string[];\n};\n\nexport function useSalesForceDataWithThreeQueries<T, U>(\n  firstQuery: string,\n  secondQuery: string,\n  thirdQueryGenerator: (recordIds: string[]) => string,\n  transformer: (\n    primaryData: SalesForcePartner,\n    relatedData?: SalesForcePartner\n  ) => U\n): {\n  data: U[];\n  fetchData: () => void;\n} {\n  const [data, setData] = useState<U[]>([]);\n\n  const fetchData = useCallback(async () => {\n    try {\n      let allRecords: {\n        primaryData: SalesForcePartner;\n        relatedData?: SalesForcePartner;\n      }[] = [];\n\n      // Processing the first request\n      const firstSalesForceData = await fetchDataFromSalesForce(firstQuery);\n      if (firstSalesForceData && firstSalesForceData.records) {\n        firstSalesForceData.records.forEach((record: any) => {\n          allRecords.push({ primaryData: record });\n        });\n      }\n\n      // Processing the second request\n      const secondSalesForceData = await fetchDataFromSalesForce(secondQuery);\n      if (secondSalesForceData && secondSalesForceData.records) {\n        secondSalesForceData.records.forEach((record: any) => {\n          allRecords.push({ primaryData: record });\n        });\n      }\n\n      // Getting the ID for the third request only after the first two requests have completed\n      const recordIds = allRecords.map((record) => record.primaryData.Id);\n\n      // Processing the third request\n      const thirdQuery = thirdQueryGenerator(recordIds);\n      const thirdSalesForceData = await fetchDataFromSalesForce(thirdQuery);\n\n      for (const relatedRecord of thirdSalesForceData.records) {\n        const match = allRecords.find(\n          (record) => record.primaryData.Id === relatedRecord.Client_Name__c\n        );\n        if (match) {\n          // Changes to Survey_Option_Name__c processing logic\n          if (!match.relatedData) {\n            match.relatedData = {\n              ...relatedRecord,\n              Survey_Option_Name__c: Array.isArray(\n                relatedRecord.Survey_Option_Name__c\n              )\n                ? relatedRecord.Survey_Option_Name__c\n                : [relatedRecord.Survey_Option_Name__c],\n            };\n          } else {\n            match.relatedData.Survey_Option_Name__c = [\n              ...(match.relatedData.Survey_Option_Name__c || []),\n              ...(Array.isArray(relatedRecord.Survey_Option_Name__c)\n                ? relatedRecord.Survey_Option_Name__c\n                : [relatedRecord.Survey_Option_Name__c]),\n            ];\n          }\n        }\n      }\n\n      // Data Conversion\n      const transformedData = allRecords.map((record) =>\n        transformer(record.primaryData, record.relatedData)\n      );\n      setData(transformedData);\n    } catch (error) {\n      console.error(\"Failed to fetch data:\", error);\n    }\n  }, [firstQuery, secondQuery, thirdQueryGenerator, transformer]);\n\n  useEffect(() => {\n    void fetchData();\n  }, [fetchData]);\n\n  return {\n    data,\n    fetchData,\n  };\n}\n\nexport function usePartnerDetails(partnerKey: string | undefined) {\n  const [data, setData] = useState<null | any>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!partnerKey) return;\n    async function fetchData() {\n      setLoading(true);\n      try {\n        const response = await fetchDataFromSalesForce(\n          `query/?q=SELECT+Rich_Merge__c+FROM+Client_Pitch__c+WHERE+Active__c=true+AND+Custom_Outreach__c=true+AND+Client_Id__c='${partnerKey}'`\n        );\n        setData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching partner details:\", error);\n        setData(null);\n      } finally {\n        setLoading(false);\n      }\n    }\n    void fetchData();\n  }, [partnerKey]);\n  return { data, loading };\n}\n\ninterface ContactInfo {\n  Id: string;\n  Member__c: string;\n  Points_Balance__c: string;\n  Pending_Points__c: string;\n  Member_Survey_Link__c: string;\n  Non_Profit_Top_Choice__c?: string;\n  Charity_Name__c?: string;\n  MailingStreet?: string;\n  MailingCity?: string;\n  MailingState?: string;\n  MailingPostalCode?: string;\n  MailingCountry?: string;\n  Mailing_Address_Verified_Date__c?: string;\n  AccountId: string;\n  Partner_Referral_Link__c: string;\n  Shortened_PR_Link__c: string;\n  Email: string;\n}\n\nexport const getMemberInfoFromContact = async (\n  criteria: string\n): Promise<ContactInfo | null> => {\n  const endpoint = `query/?q=SELECT+Id,Member__c,Points_Balance__c,Pending_Points__c,Partner_Referral_Link__c,Shortened_PR_Link__c,Email,Member_Survey_Link__c,Non_Profit_Top_Choice__c,Mailing_Address_Verified_Date__c,MailingStreet,MailingCity,MailingState,MailingPostalCode,MailingCountry,Charity_Name__c,AccountId+FROM+Contact+WHERE+RecordTypeId='01236000000yGps'+AND+Id='${criteria}'`;\n\n  try {\n    const response = await fetchDataFromSalesForce(endpoint);\n    if (response && response.records && response.records.length > 0) {\n      const record = response.records[0];\n      return {\n        Id: record.Id,\n        Member__c: record.Member__c,\n        Pending_Points__c: record.Pending_Points__c,\n        Partner_Referral_Link__c: record.Partner_Referral_Link__c,\n        Points_Balance__c: record.Points_Balance__c,\n        Member_Survey_Link__c: record.Member_Survey_Link__c,\n        Non_Profit_Top_Choice__c: record.Non_Profit_Top_Choice__c,\n        Charity_Name__c: record.Charity_Name__c,\n        MailingStreet: record.MailingStreet,\n        MailingCity: record.MailingCity,\n        MailingState: record.MailingState,\n        MailingPostalCode: record.MailingPostalCode,\n        MailingCountry: record.MailingCountry,\n        Email: record.Email,\n        Mailing_Address_Verified_Date__c:\n          record.Mailing_Address_Verified_Date__c,\n        AccountId: record.AccountId,\n        Shortened_PR_Link__c: record.Shortened_PR_Link__c,\n      };\n    }\n    return null;\n  } catch (error) {\n    console.error(\"Error fetching Member Info:\", error);\n    throw error;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}