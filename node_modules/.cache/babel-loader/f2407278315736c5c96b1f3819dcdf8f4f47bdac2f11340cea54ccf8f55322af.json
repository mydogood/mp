{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncoakley/Documents/GitHub/mp/src/components/login/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, Form, Input, message } from 'antd';\nimport { useNavigate } from \"react-router-dom\";\nimport { ReactComponent as LogoImg } from '../../images/svgIcons/do_good_logo_login.svg';\nimport styles from './style.module.sass';\nimport { fetchDataFromSalesForce } from \"../../salesforceAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst onFinishFailed = errorInfo => {\n  console.log('Failed:', errorInfo);\n};\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [messageApi, contextHolder] = message.useMessage();\n  const [emailData, setEmailData] = useState({\n    to: 'scoakley@mydogood.com',\n    subject: 'Need help logging into member portal',\n    body: 'I need help logging into the DoGood member portal.'\n  });\n  const error = () => {\n    messageApi.open({\n      type: 'error',\n      content: 'Click the \"Need help logging in?'\n    });\n  };\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedClientId = localStorage.getItem('clientId');\n    if (storedClientId) {\n      navigate(`/${storedClientId}/profile`, {\n        replace: true\n      });\n    }\n  }, []);\n  const onFinish = async values => {\n    try {\n      const query = `query/?q=SELECT+Id,Email,Member_Portal_Password__c+FROM+Contact+WHERE+RecordTypeId='01236000000yGps'+AND+(Membership_Status__c='Active'+OR+Membership_Status__c='Testing')+AND+Email='${formData.email}'+AND+Member_Portal_Password__c='${formData.password}'`;\n      const salesForceData = await fetchDataFromSalesForce(`${query}`);\n      if (salesForceData.records.length === 1) {\n        const clientId = salesForceData.records[0].Id;\n        localStorage.setItem('clientId', clientId);\n        navigate(`/${clientId}/home`, {\n          replace: true\n        });\n      } else {\n        error();\n      }\n    } catch (error) {\n      alert('Authorization error. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.loginSection,\n    children: [contextHolder, /*#__PURE__*/_jsxDEV(\"article\", {\n      className: styles.formSection,\n      children: [/*#__PURE__*/_jsxDEV(LogoImg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formContainer,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: styles.form,\n          name: \"basic\",\n          layout: 'vertical',\n          initialValues: {\n            remember: true\n          },\n          onFinish: onFinish,\n          onFinishFailed: onFinishFailed,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            className: styles.formItem,\n            label: \"Email\",\n            name: \"email\",\n            rules: [{\n              message: 'Please input your username'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: 'Enter your email associated with DoGood',\n              onChange: e => setFormData({\n                ...formData,\n                email: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            className: styles.formItem,\n            label: \"Password\",\n            name: \"password\",\n            rules: [{\n              message: 'Please input your password!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {\n              placeholder: 'Enter your password',\n              onChange: e => setFormData({\n                ...formData,\n                password: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: styles.helpLink,\n            href: `mailto:${emailData.to}?subject=${emailData.subject}&body=${emailData.body}`,\n            target: \"_blank\",\n            children: \"Need help logging in?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: styles.btn,\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Log in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"zVdzMzFZUHqyZse1SERlnIsQA8s=\", false, function () {\n  return [message.useMessage, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","Button","Form","Input","message","useNavigate","ReactComponent","LogoImg","styles","fetchDataFromSalesForce","jsxDEV","_jsxDEV","onFinishFailed","errorInfo","console","log","Login","_s","formData","setFormData","email","password","messageApi","contextHolder","useMessage","emailData","setEmailData","to","subject","body","error","open","type","content","navigate","storedClientId","localStorage","getItem","replace","onFinish","values","query","salesForceData","records","length","clientId","Id","setItem","alert","className","loginSection","children","formSection","fileName","_jsxFileName","lineNumber","columnNumber","title","formContainer","form","name","layout","initialValues","remember","autoComplete","Item","formItem","label","rules","placeholder","onChange","e","target","value","Password","helpLink","href","btn","htmlType","_c","$RefreshReg$"],"sources":["/Users/shannoncoakley/Documents/GitHub/mp/src/components/login/Login.tsx"],"sourcesContent":["import React, {FC, useEffect, useState} from 'react';\nimport { Button, Checkbox, Form, Input, message } from 'antd';\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {useMediaQuery} from \"react-responsive\";\nimport {ReactComponent as LogoImg} from '../../images/svgIcons/do_good_logo_login.svg'\nimport styles from './style.module.sass'\nimport {fetchDataFromSalesForce} from \"../../salesforceAuth\";\n\n\nconst onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n};\n\ntype FieldType = {\n    email?: string;\n    password?: string;\n};\n\ninterface Login {\n    key: string\n}\n\nconst Login: FC = () => {\n    const [formData, setFormData] = useState({ email: '', password: '' });\n    const [messageApi, contextHolder] = message.useMessage();\n    const [emailData, setEmailData] = useState({\n        to: 'scoakley@mydogood.com',\n        subject: 'Need help logging into member portal',\n        body: 'I need help logging into the DoGood member portal.',\n    });\n\n    const error = () => {\n        messageApi.open({\n            type: 'error',\n            content: 'Click the \"Need help logging in?',\n        });\n    };\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const storedClientId = localStorage.getItem('clientId');\n\n        if (storedClientId) {\n            navigate(`/${storedClientId}/profile`, { replace: true });\n        }\n    }, []);\n\n\n    const onFinish = async (values: any) => {\n        try {\n            const query = `query/?q=SELECT+Id,Email,Member_Portal_Password__c+FROM+Contact+WHERE+RecordTypeId='01236000000yGps'+AND+(Membership_Status__c='Active'+OR+Membership_Status__c='Testing')+AND+Email='${formData.email}'+AND+Member_Portal_Password__c='${formData.password}'`;\n            const salesForceData = await fetchDataFromSalesForce(`${query}`);\n\n            if (salesForceData.records.length === 1) {\n                const clientId = salesForceData.records[0].Id;\n                localStorage.setItem('clientId', clientId);\n                navigate(`/${clientId}/home`, {replace: true});\n            } else {\n                error()\n            }\n        } catch (error) {\n            alert('Authorization error. Please try again later.');\n        }\n    };\n\n    return (\n        <section className={styles.loginSection}>\n            {contextHolder}\n            <article className={styles.formSection}>\n                <LogoImg/>\n                <h1 className={styles.title}>Log in</h1>\n                <div className={styles.formContainer}>\n                    <Form\n                        className={styles.form}\n                        name=\"basic\"\n                        layout={'vertical'}\n                        initialValues={{ remember: true }}\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                        autoComplete=\"off\"\n                    >\n                        <Form.Item<FieldType>\n                            className={styles.formItem}\n                            label=\"Email\"\n                            name=\"email\"\n                            rules={[{ message: 'Please input your username' }]}\n                        >\n                            <Input placeholder={'Enter your email associated with DoGood'} onChange={(e) => setFormData({ ...formData, email: e.target.value })} />\n                        </Form.Item>\n\n                        <Form.Item<FieldType>\n                            className={styles.formItem}\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[{ message: 'Please input your password!' }]}\n                        >\n                            <Input.Password placeholder={'Enter your password'} onChange={(e) => setFormData({ ...formData, password: e.target.value })} />\n                        </Form.Item >\n                        <a\n                            className={styles.helpLink}\n                            href={`mailto:${emailData.to}?subject=${emailData.subject}&body=${emailData.body}`}\n                            target=\"_blank\"\n                        >\n                            Need help logging in?\n                        </a>\n                        <Form.Item>\n                            <Button className={styles.btn} type=\"primary\" htmlType=\"submit\">\n                                Log in\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </article>\n        </section>\n    );\n};\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}