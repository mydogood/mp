{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncoakley/Documents/GitHub/mp/src/components/sections/homeSection/PartnersSection.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from \"react\";\nimport { Space, Table, Pagination } from \"antd\";\nimport { useGetPartnersAndIncentivesContext, usePartnerContext } from \"./contexts/IncentivesContext\";\nimport PartnerDrawer from \"./PartnerDrawer\";\nimport PartnerModal from \"./PartnerModal\";\nimport styles from \"./styles.module.sass\";\nimport { ReactComponent as Filter } from \"../../../images/svgIcons/filter.svg\";\nimport { ReactComponent as AcceptIcon } from \"../../../images/svgIcons/acceptIcon.svg\";\nimport { ReactComponent as DeclineIcon } from \"../../../images/svgIcons/declineIcon.svg\";\nimport { ReactComponent as ProgressIcon } from \"../../../images/svgIcons/progressIcon.svg\";\nimport { ReactComponent as DefaultIcon } from \"../../../images/svgIcons/defaultIcon.svg\";\nimport { useParams } from \"react-router-dom\";\nimport { useSalesForceData, useSalesForceDataWithThreeQueries } from \"../../../getSalesForceData\";\nimport { fetchDataFromSalesForce } from \"../../../salesforceAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY1 = clientId => `query/?q=SELECT+Id,Client_Id__c,Client_Name__c,Related_Membership_Member__c,Quick_Overview__c,Client_Website__c,Client_Logo__c,Stage_M__c,Stage_MP__c,Sweepstakes_Type__c+FROM+Meeting__c+WHERE+Stage_M__c='Request+Queued'+AND+MemberC__c='${clientId}'`;\n_c = QUERY1;\nconst QUERY2 = `query/?q=SELECT+Id,Account_ID__c,Related_Membership__c,Account_Name_Merge_Only__c,Website,Client_Logo__c,Quick_Overview__c,Client_Campaign_ID__c+FROM+Account+WHERE+RecordTypeId='01236000000OodE'+AND+(Client_Campaign_Status__c='Active'+OR+Client_Campaign_Status__c='Testing')`;\nconst QUERY3 = recordIds => `query/?q=SELECT+Client_Name__c,Survey_Option_Name__c+FROM+Survey__c+WHERE+Client_Name__c+IN+(${recordIds.map(id => `'${id}'`).join(\",\")})`;\n_c2 = QUERY3;\nconst transformer = (primaryData, relatedData) => {\n  const surveyOptions = Array.isArray(relatedData === null || relatedData === void 0 ? void 0 : relatedData.Survey_Option_Name__c) ? relatedData.Survey_Option_Name__c : Array.isArray(relatedData === null || relatedData === void 0 ? void 0 : relatedData.Survey_Option_Name__c) ? [relatedData.Survey_Option_Name__c] : [];\n  return {\n    key: primaryData.Id,\n    clientKey: primaryData.Client_Id__c || primaryData.Account_ID__c,\n    website: primaryData.Client_Website__c || primaryData.Website,\n    partnerName: primaryData.Client_Name__c || primaryData.Account_Name_Merge_Only__c,\n    overview: primaryData.Quick_Overview__c || \"No quick overview\",\n    hasRequested: primaryData.Stage_M__c === \"Request Queued\",\n    richMerge: primaryData.Rich_Merge__c,\n    Survey_Option_Name__c: surveyOptions,\n    Stage_M__c: primaryData.Stage_M__c || \"\",\n    Stage_MP__c: primaryData.Stage_MP__c || \"\",\n    Sweepstakes_Type__c: primaryData.Sweepstakes_Type__c || \"\",\n    Client_Campaign_ID__c: primaryData.Client_Campaign_ID__c,\n    Related_Membership__c: primaryData.Related_Membership__c,\n    Related_Membership_Member__c: primaryData.Related_Membership_Member__c,\n    Client_Logo__c: primaryData.Client_Logo__c\n  };\n};\nconst QUERY_REQUESTED_MEETINGS = clientId => `query/?q=SELECT+Client_Id__c+FROM+Meeting__c+WHERE+Stage_M__c!='Request Queued'+AND+MemberC__c='${clientId}'`;\n_c3 = QUERY_REQUESTED_MEETINGS;\nconst clientIDTransformer = record => record.Client_Id__c;\nconst PartnersSection = () => {\n  _s();\n  const [filteredInfo, setFilteredInfo] = useState({});\n  const [sortedInfo, setSortedInfo] = useState({});\n  const [open, setOpen] = useState(false);\n  const [selectedPartner, setSelectedPartner] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [viewOnlyRequested, setViewOnlyRequested] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [loadingPartnerDetails, setLoadingPartnerDetails] = useState(false);\n  const [appliedViewOnlyRequested, setAppliedViewOnlyRequested] = useState(true);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const {\n    requestedList,\n    declinedList,\n    acceptedList,\n    savedAcceptedList,\n    setSavedAcceptedList\n  } = usePartnerContext();\n  const {\n    incentiveFromSalesForce\n  } = useGetPartnersAndIncentivesContext();\n  const {\n    clientId\n  } = useParams();\n  const {\n    data: partnersFromSalesForce,\n    fetchData\n  } = useSalesForceDataWithThreeQueries(QUERY1(clientId), QUERY2, QUERY3, transformer);\n  const requestedClientIDs = useSalesForceData(QUERY_REQUESTED_MEETINGS(clientId), clientIDTransformer);\n  useEffect(() => {\n    if (partnersFromSalesForce && partnersFromSalesForce.length > 0) {\n      const filteredPartners = partnersFromSalesForce.filter((partner, index, self) => {\n        return self.findIndex(p => p.clientKey === partner.clientKey) === index;\n      });\n      setSavedAcceptedList(filteredPartners);\n    }\n  }, [partnersFromSalesForce]);\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n  const showDrawer = async partner => {\n    setSelectedPartner(partner);\n    setLoadingPartnerDetails(true);\n    try {\n      const response = await fetchDataFromSalesForce(`query/?q=SELECT+Rich_Merge__c+FROM+Client_Pitch__c+WHERE+Active__c=true+AND+Custom_Outreach__c=true+AND+(Client_Id__c='${partner.clientKey}'+OR+Client_Id__c='${partner.key}')`);\n      if (response && response.records && response.records[0] && response.records[0].Rich_Merge__c) {\n        setSelectedPartner(prev => ({\n          ...prev,\n          richMerge: response.records[0].Rich_Merge__c\n        }));\n      } else {\n        console.error(\"Invalid data format:\", response);\n      }\n    } catch (error) {\n      console.error(\"Error fetching partner details:\", error);\n    } finally {\n      setLoadingPartnerDetails(false);\n    }\n    setOpen(true);\n  };\n  const onCloseDrawer = () => {\n    setSelectedPartner(null);\n    setOpen(false);\n    setTimeout(() => {\n      fetchData();\n    }, 5000);\n  };\n  const handleChangePage = page => {\n    setCurrentPage(page);\n  };\n  const getPartnerStatus = partner => {\n    if (acceptedList.some(item => item.key === partner.key)) {\n      return \"accepted\";\n    } else if (requestedList.some(item => item.key === partner.key)) {\n      return \"requested\";\n    } else if (declinedList.some(item => item.key === partner.key)) {\n      return \"declined\";\n    }\n    return \"\";\n  };\n  const handleChange = (pagination, filters, sorter) => {\n    console.log(\"Various parameters\", pagination, filters, sorter);\n    setFilteredInfo(filters);\n    setSortedInfo(sorter);\n  };\n  const handleViewOnlyRequestedChange = checked => {\n    setCurrentPage(1);\n    setViewOnlyRequested(checked);\n  };\n  const handleApply = (value, viewOnlyRequested, selectedCategories) => {\n    setSearchValue(value);\n    setAppliedViewOnlyRequested(viewOnlyRequested);\n    setSelectedCategories(selectedCategories);\n    handleOk();\n  };\n  const filteredData = useMemo(() => {\n    let filtered = [...savedAcceptedList]; // Клонировать массив, чтобы избежать мутации\n\n    if (searchValue) {\n      filtered = filtered.filter(partner => partner.partnerName.toLowerCase().includes(searchValue.toLowerCase()) || partner.overview.toLowerCase().includes(searchValue.toLowerCase()));\n    }\n    if (selectedCategories.length) {\n      filtered = filtered.map(partner => {\n        const matchingCategories = selectedCategories.filter(category => {\n          var _partner$Survey_Optio;\n          return (_partner$Survey_Optio = partner.Survey_Option_Name__c) === null || _partner$Survey_Optio === void 0 ? void 0 : _partner$Survey_Optio.some(option => option === category);\n        });\n        if (matchingCategories.length) {\n          return {\n            ...partner,\n            filterCategory: matchingCategories\n          };\n        }\n        return partner;\n      }).filter(partner => partner.filterCategory && partner.filterCategory.length);\n    }\n    if (requestedClientIDs && requestedClientIDs.length > 0) {\n      filtered = filtered.filter(partner => partner.clientKey && !requestedClientIDs.includes(partner.clientKey));\n    }\n    if (appliedViewOnlyRequested) {\n      filtered = filtered.filter(item => item.hasRequested);\n    }\n    return filtered;\n  }, [savedAcceptedList, searchValue, appliedViewOnlyRequested, selectedCategories, requestedClientIDs]);\n  const sortedData = useMemo(() => {\n    if (sortedInfo && sortedInfo.columnKey === \"name\") {\n      if (sortedInfo.order === \"ascend\") {\n        return [...filteredData].sort((a, b) => a.partnerName.localeCompare(b.partnerName));\n      } else if (sortedInfo.order === \"descend\") {\n        return [...filteredData].sort((a, b) => b.partnerName.localeCompare(a.partnerName));\n      }\n    }\n    return filteredData; // Если sortedInfo.order не 'ascend' или 'descend', возвращаем исходные данные\n  }, [filteredData, sortedInfo]);\n  const startIndex = (currentPage - 1) * 10;\n  const endIndex = startIndex + 10;\n  const paginatedData = sortedData ? sortedData.slice(startIndex, endIndex) : [];\n  const columns = [{\n    title: \"NAME\",\n    dataIndex: \"partnerName\",\n    key: \"name\",\n    filteredValue: filteredInfo.partnerName || null,\n    onFilter: (value, record) => record.partnerName.includes(value.toString()),\n    sorter: (a, b) => a.partnerName.localeCompare(b.partnerName),\n    sortOrder: sortedInfo.columnKey === \"name\" ? sortedInfo.order : null,\n    render: (text, record) => {\n      const displayText = record.hasRequested && record.partnerName ? record.partnerName.slice(0) : text;\n      const partnerStatus = getPartnerStatus(record);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.partnersNameContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.partnersName,\n          children: [partnerStatus === \"requested\" ? /*#__PURE__*/_jsxDEV(ProgressIcon, {\n            className: styles.statusIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this) : partnerStatus === \"accepted\" ? /*#__PURE__*/_jsxDEV(AcceptIcon, {\n            className: styles.statusIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this) : partnerStatus === \"declined\" ? /*#__PURE__*/_jsxDEV(DeclineIcon, {\n            className: styles.statusIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(DefaultIcon, {\n            className: styles.statusIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this), displayText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this), record.hasRequested && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.orangeStar,\n          children: \" \\u2605\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    title: \"Quick Overview\",\n    dataIndex: \"overview\",\n    key: \"overview\",\n    width: \"65%\",\n    render: (text, record) => {\n      const partnerStatus = getPartnerStatus(record);\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 16\n      }, this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.partnersContainer,\n    children: [/*#__PURE__*/_jsxDEV(PartnerModal, {\n      isModalOpen: isModalOpen,\n      onShowModal: showModal,\n      onOk: handleOk,\n      OnCancel: handleCancel,\n      onViewOnlyRequestedChange: handleViewOnlyRequestedChange,\n      onApply: handleApply\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.partnersTitleContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.partnersTitle,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Partners\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Click a partner name below for more information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showModal,\n        className: styles.filterBtn,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), \" Filter\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Space, {\n      style: {\n        marginBottom: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      onRow: record => ({\n        onClick: () => showDrawer(record)\n      }),\n      columns: columns,\n      pagination: false,\n      dataSource: paginatedData,\n      onChange: handleChange,\n      className: styles.table\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      showSizeChanger: false,\n      defaultPageSize: 10,\n      className: styles.paginationPartners,\n      defaultCurrent: currentPage,\n      total: filteredData.length,\n      onChange: handleChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      className: styles.requested,\n      children: \"Partners who have requested to meet with you.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PartnerDrawer, {\n      isOpen: open,\n      onClose: onCloseDrawer,\n      partnerDetails: selectedPartner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 398,\n    columnNumber: 5\n  }, this);\n};\n_s(PartnersSection, \"cyQPM2UxYg64nf2PmkNxbLkkT9E=\", false, function () {\n  return [usePartnerContext, useGetPartnersAndIncentivesContext, useParams, useSalesForceDataWithThreeQueries, useSalesForceData];\n});\n_c4 = PartnersSection;\nexport default PartnersSection;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"QUERY1\");\n$RefreshReg$(_c2, \"QUERY3\");\n$RefreshReg$(_c3, \"QUERY_REQUESTED_MEETINGS\");\n$RefreshReg$(_c4, \"PartnersSection\");","map":{"version":3,"names":["useEffect","useMemo","useState","Space","Table","Pagination","useGetPartnersAndIncentivesContext","usePartnerContext","PartnerDrawer","PartnerModal","styles","ReactComponent","Filter","AcceptIcon","DeclineIcon","ProgressIcon","DefaultIcon","useParams","useSalesForceData","useSalesForceDataWithThreeQueries","fetchDataFromSalesForce","jsxDEV","_jsxDEV","QUERY1","clientId","_c","QUERY2","QUERY3","recordIds","map","id","join","_c2","transformer","primaryData","relatedData","surveyOptions","Array","isArray","Survey_Option_Name__c","key","Id","clientKey","Client_Id__c","Account_ID__c","website","Client_Website__c","Website","partnerName","Client_Name__c","Account_Name_Merge_Only__c","overview","Quick_Overview__c","hasRequested","Stage_M__c","richMerge","Rich_Merge__c","Stage_MP__c","Sweepstakes_Type__c","Client_Campaign_ID__c","Related_Membership__c","Related_Membership_Member__c","Client_Logo__c","QUERY_REQUESTED_MEETINGS","_c3","clientIDTransformer","record","PartnersSection","_s","filteredInfo","setFilteredInfo","sortedInfo","setSortedInfo","open","setOpen","selectedPartner","setSelectedPartner","isModalOpen","setIsModalOpen","viewOnlyRequested","setViewOnlyRequested","currentPage","setCurrentPage","searchValue","setSearchValue","loadingPartnerDetails","setLoadingPartnerDetails","appliedViewOnlyRequested","setAppliedViewOnlyRequested","selectedCategories","setSelectedCategories","requestedList","declinedList","acceptedList","savedAcceptedList","setSavedAcceptedList","incentiveFromSalesForce","data","partnersFromSalesForce","fetchData","requestedClientIDs","length","filteredPartners","filter","partner","index","self","findIndex","p","showModal","handleOk","handleCancel","showDrawer","response","records","prev","console","error","onCloseDrawer","setTimeout","handleChangePage","page","getPartnerStatus","some","item","handleChange","pagination","filters","sorter","log","handleViewOnlyRequestedChange","checked","handleApply","value","filteredData","filtered","toLowerCase","includes","matchingCategories","category","_partner$Survey_Optio","option","filterCategory","sortedData","columnKey","order","sort","a","b","localeCompare","startIndex","endIndex","paginatedData","slice","columns","title","dataIndex","filteredValue","onFilter","toString","sortOrder","render","text","displayText","partnerStatus","className","partnersNameContainer","children","partnersName","statusIcon","fileName","_jsxFileName","lineNumber","columnNumber","orangeStar","width","partnersContainer","onShowModal","onOk","OnCancel","onViewOnlyRequestedChange","onApply","partnersTitleContainer","partnersTitle","onClick","filterBtn","style","marginBottom","onRow","dataSource","onChange","table","showSizeChanger","defaultPageSize","paginationPartners","defaultCurrent","total","requested","isOpen","onClose","partnerDetails","_c4","$RefreshReg$"],"sources":["/Users/shannoncoakley/Documents/GitHub/mp/src/components/sections/homeSection/PartnersSection.tsx"],"sourcesContent":["import { FC, useContext, useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\";\nimport type { TableProps } from \"antd\";\nimport { Space, Table, Drawer, Pagination, Spin } from \"antd\";\nimport type {\n  ColumnsType,\n  FilterValue,\n  SorterResult,\n} from \"antd/es/table/interface\";\nimport {\n  GetIncentiveDataType,\n  useGetPartnersAndIncentivesContext,\n  usePartnerContext,\n} from \"./contexts/IncentivesContext\";\nimport PartnerDrawer from \"./PartnerDrawer\";\nimport PartnerModal from \"./PartnerModal\";\nimport styles from \"./styles.module.sass\";\nimport { ReactComponent as Filter } from \"../../../images/svgIcons/filter.svg\";\nimport { ReactComponent as AcceptIcon } from \"../../../images/svgIcons/acceptIcon.svg\";\nimport { ReactComponent as DeclineIcon } from \"../../../images/svgIcons/declineIcon.svg\";\nimport { ReactComponent as ProgressIcon } from \"../../../images/svgIcons/progressIcon.svg\";\nimport { ReactComponent as DefaultIcon } from \"../../../images/svgIcons/defaultIcon.svg\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  usePartnerDetails,\n  useSalesForceData,\n  useSalesForceDataWithThreeQueries,\n  useSalesForceDataWithTwoQueries,\n} from \"../../../getSalesForceData\";\nimport { fetchDataFromSalesForce } from \"../../../salesforceAuth\";\n\ninterface PartnersDataType {\n  key: string;\n  partnerName: string;\n  clientKey?: string;\n  overview: string;\n  hasRequested: boolean;\n  website?: string;\n  richMerge?: string;\n  surveyOptionName?: string[];\n  Stage_M__c?: string;\n  Stage_MP__c?: string;\n  Sweepstakes_Type__c?: string;\n  Client_Campaign_ID__c?: string;\n  Interest_in_Partner__c?: string;\n  RecordTypeId?: string;\n  Client_Campaign__c?: string;\n  Meeting_Source__c?: string;\n  Intro_Type__c?: string;\n  Request_Submitted_Date_M__c?: string;\n  Related_Membership__c: string;\n  Related_Membership_Member__c: string;\n  Survey_Option_Name__c: string[];\n  filterCategory?: string[];\n  Client_Logo__c?: string;\n  Client_Decline_Reason__c?: string;\n}\n\ninterface SalesForcePartner {\n  Id: string;\n  Client_Id__c?: string;\n  Account_ID__c?: string;\n  Client_Name__c: string;\n  Account_Name_Merge_Only__c: string;\n  Quick_Overview__c: string;\n  Client_Website__c?: string;\n  Website?: string;\n  Rich_Merge__c?: string;\n  Stage_M__c?: string;\n  Stage_MP__c?: string;\n  Sweepstakes_Type__c?: string;\n  Client_Campaign_ID__c?: string;\n  Interest_in_Partner__c?: string;\n  RecordTypeId?: string;\n  Client_Campaign__c?: string;\n  Meeting_Source__c?: string;\n  Intro_Type__c?: string;\n  Request_Submitted_Date_M__c?: string;\n  Related_Membership__c: string;\n  Related_Membership_Member__c: string;\n  Survey_Option_Name__c: string[];\n  Client_Logo__c?: string;\n}\n\nconst QUERY1 = (clientId: string | undefined) =>\n  `query/?q=SELECT+Id,Client_Id__c,Client_Name__c,Related_Membership_Member__c,Quick_Overview__c,Client_Website__c,Client_Logo__c,Stage_M__c,Stage_MP__c,Sweepstakes_Type__c+FROM+Meeting__c+WHERE+Stage_M__c='Request+Queued'+AND+MemberC__c='${clientId}'`;\nconst QUERY2 = `query/?q=SELECT+Id,Account_ID__c,Related_Membership__c,Account_Name_Merge_Only__c,Website,Client_Logo__c,Quick_Overview__c,Client_Campaign_ID__c+FROM+Account+WHERE+RecordTypeId='01236000000OodE'+AND+(Client_Campaign_Status__c='Active'+OR+Client_Campaign_Status__c='Testing')`;\nconst QUERY3 = (recordIds: string[]) =>\n  `query/?q=SELECT+Client_Name__c,Survey_Option_Name__c+FROM+Survey__c+WHERE+Client_Name__c+IN+(${recordIds\n    .map((id) => `'${id}'`)\n    .join(\",\")})`;\nconst transformer = (primaryData: SalesForcePartner, relatedData?: any) => {\n  const surveyOptions = Array.isArray(relatedData?.Survey_Option_Name__c)\n    ? relatedData.Survey_Option_Name__c\n    : Array.isArray(relatedData?.Survey_Option_Name__c)\n    ? [relatedData.Survey_Option_Name__c]\n    : [];\n\n  return {\n    key: primaryData.Id,\n    clientKey: primaryData.Client_Id__c || primaryData.Account_ID__c,\n    website: primaryData.Client_Website__c || primaryData.Website,\n    partnerName:\n      primaryData.Client_Name__c || primaryData.Account_Name_Merge_Only__c,\n    overview: primaryData.Quick_Overview__c || \"No quick overview\",\n    hasRequested: primaryData.Stage_M__c === \"Request Queued\",\n    richMerge: primaryData.Rich_Merge__c,\n    Survey_Option_Name__c: surveyOptions,\n    Stage_M__c: primaryData.Stage_M__c || \"\",\n    Stage_MP__c: primaryData.Stage_MP__c || \"\",\n    Sweepstakes_Type__c: primaryData.Sweepstakes_Type__c || \"\",\n    Client_Campaign_ID__c: primaryData.Client_Campaign_ID__c,\n    Related_Membership__c: primaryData.Related_Membership__c,\n    Related_Membership_Member__c: primaryData.Related_Membership_Member__c,\n    Client_Logo__c: primaryData.Client_Logo__c,\n  };\n};\ntype MeetingRecord = {\n  Client_Id__c: string;\n};\ntype Transformer<T, U> = (input: T) => U;\nconst QUERY_REQUESTED_MEETINGS = (clientId: string | undefined) =>\n  `query/?q=SELECT+Client_Id__c+FROM+Meeting__c+WHERE+Stage_M__c!='Request Queued'+AND+MemberC__c='${clientId}'`;\n\nconst clientIDTransformer: Transformer<MeetingRecord, string> = (\n  record: MeetingRecord\n) => record.Client_Id__c;\n\nconst PartnersSection: FC = () => {\n  const [filteredInfo, setFilteredInfo] = useState<\n    Record<string, FilterValue | null>\n  >({});\n  const [sortedInfo, setSortedInfo] = useState<SorterResult<PartnersDataType>>(\n    {}\n  );\n  const [open, setOpen] = useState(false);\n  const [selectedPartner, setSelectedPartner] =\n    useState<PartnersDataType | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [viewOnlyRequested, setViewOnlyRequested] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchValue, setSearchValue] = useState<string>(\"\");\n  const [loadingPartnerDetails, setLoadingPartnerDetails] = useState(false);\n  const [appliedViewOnlyRequested, setAppliedViewOnlyRequested] =\n    useState(true);\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n  const {\n    requestedList,\n    declinedList,\n    acceptedList,\n    savedAcceptedList,\n    setSavedAcceptedList,\n  } = usePartnerContext();\n  const { incentiveFromSalesForce } = useGetPartnersAndIncentivesContext();\n  const { clientId } = useParams<{ clientId: string }>();\n\n  const { data: partnersFromSalesForce, fetchData } =\n    useSalesForceDataWithThreeQueries(\n      QUERY1(clientId),\n      QUERY2,\n      QUERY3,\n      transformer\n    );\n\n  const requestedClientIDs = useSalesForceData(\n    QUERY_REQUESTED_MEETINGS(clientId),\n    clientIDTransformer\n  );\n\n  useEffect(() => {\n    if (partnersFromSalesForce && partnersFromSalesForce.length > 0) {\n      const filteredPartners = partnersFromSalesForce.filter(\n        (partner, index, self) => {\n          return (\n            self.findIndex((p) => p.clientKey === partner.clientKey) === index\n          );\n        }\n      );\n      setSavedAcceptedList(filteredPartners);\n    }\n  }, [partnersFromSalesForce]);\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  const showDrawer = async (partner: PartnersDataType) => {\n    setSelectedPartner(partner);\n    setLoadingPartnerDetails(true);\n    try {\n      const response = await fetchDataFromSalesForce(\n        `query/?q=SELECT+Rich_Merge__c+FROM+Client_Pitch__c+WHERE+Active__c=true+AND+Custom_Outreach__c=true+AND+(Client_Id__c='${partner.clientKey}'+OR+Client_Id__c='${partner.key}')`\n      );\n      if (\n        response &&\n        response.records &&\n        response.records[0] &&\n        response.records[0].Rich_Merge__c\n      ) {\n        setSelectedPartner((prev) => ({\n          ...prev!,\n          richMerge: response.records[0].Rich_Merge__c,\n        }));\n      } else {\n        console.error(\"Invalid data format:\", response);\n      }\n    } catch (error) {\n      console.error(\"Error fetching partner details:\", error);\n    } finally {\n      setLoadingPartnerDetails(false);\n    }\n\n    setOpen(true);\n  };\n\n  const onCloseDrawer = () => {\n    setSelectedPartner(null);\n    setOpen(false);\n    setTimeout(() => {\n      fetchData();\n    }, 5000);\n  };\n\n  const handleChangePage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const getPartnerStatus = (partner: PartnersDataType) => {\n    if (acceptedList.some((item) => item.key === partner.key)) {\n      return \"accepted\";\n    } else if (requestedList.some((item) => item.key === partner.key)) {\n      return \"requested\";\n    } else if (declinedList.some((item) => item.key === partner.key)) {\n      return \"declined\";\n    }\n    return \"\";\n  };\n\n  const handleChange: TableProps<PartnersDataType>[\"onChange\"] = (\n    pagination,\n    filters,\n    sorter\n  ) => {\n    console.log(\"Various parameters\", pagination, filters, sorter);\n    setFilteredInfo(filters);\n    setSortedInfo(sorter as SorterResult<PartnersDataType>);\n  };\n\n  const handleViewOnlyRequestedChange = (checked: boolean) => {\n    setCurrentPage(1);\n    setViewOnlyRequested(checked);\n  };\n\n  const handleApply = (\n    value: string,\n    viewOnlyRequested: boolean,\n    selectedCategories: string[]\n  ) => {\n    setSearchValue(value);\n    setAppliedViewOnlyRequested(viewOnlyRequested);\n    setSelectedCategories(selectedCategories);\n    handleOk();\n  };\n\n  const filteredData = useMemo(() => {\n    let filtered = [...savedAcceptedList]; // Клонировать массив, чтобы избежать мутации\n\n    if (searchValue) {\n      filtered = filtered.filter(\n        (partner) =>\n          partner.partnerName\n            .toLowerCase()\n            .includes(searchValue.toLowerCase()) ||\n          partner.overview.toLowerCase().includes(searchValue.toLowerCase())\n      );\n    }\n\n    if (selectedCategories.length) {\n      filtered = filtered\n        .map((partner) => {\n          const matchingCategories = selectedCategories.filter((category) =>\n            partner.Survey_Option_Name__c?.some((option) => option === category)\n          );\n\n          if (matchingCategories.length) {\n            return {\n              ...partner,\n              filterCategory: matchingCategories,\n            };\n          }\n          return partner;\n        })\n        .filter(\n          (partner) => partner.filterCategory && partner.filterCategory.length\n        );\n    }\n\n    if (requestedClientIDs && requestedClientIDs.length > 0) {\n      filtered = filtered.filter(\n        (partner) =>\n          partner.clientKey && !requestedClientIDs.includes(partner.clientKey)\n      );\n    }\n\n    if (appliedViewOnlyRequested) {\n      filtered = filtered.filter((item) => item.hasRequested);\n    }\n\n    return filtered;\n  }, [\n    savedAcceptedList,\n    searchValue,\n    appliedViewOnlyRequested,\n    selectedCategories,\n    requestedClientIDs,\n  ]);\n\n  const sortedData = useMemo(() => {\n    if (sortedInfo && sortedInfo.columnKey === \"name\") {\n      if (sortedInfo.order === \"ascend\") {\n        return [...filteredData].sort((a, b) =>\n          a.partnerName.localeCompare(b.partnerName)\n        );\n      } else if (sortedInfo.order === \"descend\") {\n        return [...filteredData].sort((a, b) =>\n          b.partnerName.localeCompare(a.partnerName)\n        );\n      }\n    }\n    return filteredData; // Если sortedInfo.order не 'ascend' или 'descend', возвращаем исходные данные\n  }, [filteredData, sortedInfo]);\n\n  const startIndex = (currentPage - 1) * 10;\n  const endIndex = startIndex + 10;\n  const paginatedData = sortedData\n    ? sortedData.slice(startIndex, endIndex)\n    : [];\n\n  const columns: ColumnsType<PartnersDataType> = [\n    {\n      title: \"NAME\",\n      dataIndex: \"partnerName\",\n      key: \"name\",\n      filteredValue: filteredInfo.partnerName || null,\n      onFilter: (value, record) =>\n        record.partnerName.includes(value.toString()),\n      sorter: (a, b) => a.partnerName.localeCompare(b.partnerName),\n      sortOrder: sortedInfo.columnKey === \"name\" ? sortedInfo.order : null,\n      render: (text, record) => {\n        const displayText =\n          record.hasRequested && record.partnerName\n            ? record.partnerName.slice(0)\n            : text;\n        const partnerStatus = getPartnerStatus(record);\n\n        return (\n          <div className={styles.partnersNameContainer}>\n            <span className={styles.partnersName}>\n              {partnerStatus === \"requested\" ? (\n                <ProgressIcon className={styles.statusIcon} />\n              ) : partnerStatus === \"accepted\" ? (\n                <AcceptIcon className={styles.statusIcon} />\n              ) : partnerStatus === \"declined\" ? (\n                <DeclineIcon className={styles.statusIcon} />\n              ) : (\n                <DefaultIcon className={styles.statusIcon} />\n              )}\n              {displayText}\n            </span>\n            {record.hasRequested && (\n              <span className={styles.orangeStar}> ★</span>\n            )}\n          </div>\n        );\n      },\n    },\n    {\n      title: \"Quick Overview\",\n      dataIndex: \"overview\",\n      key: \"overview\",\n      width: \"65%\",\n      render: (text, record) => {\n        const partnerStatus = getPartnerStatus(record);\n        return <span>{text}</span>;\n      },\n    },\n  ];\n\n  return (\n    <section className={styles.partnersContainer}>\n      <PartnerModal\n        isModalOpen={isModalOpen}\n        onShowModal={showModal}\n        onOk={handleOk}\n        OnCancel={handleCancel}\n        onViewOnlyRequestedChange={handleViewOnlyRequestedChange}\n        onApply={handleApply}\n      />\n      <div className={styles.partnersTitleContainer}>\n        <div className={styles.partnersTitle}>\n          <h2>Partners</h2>\n          <small>Click a partner name below for more information</small>\n        </div>\n        <button onClick={showModal} className={styles.filterBtn}>\n          {\" \"}\n          <Filter /> Filter\n        </button>\n      </div>\n      <Space style={{ marginBottom: 16 }}></Space>\n      <Table\n        onRow={(record) => ({\n          onClick: () => showDrawer(record),\n        })}\n        columns={columns}\n        pagination={false}\n        dataSource={paginatedData}\n        onChange={handleChange}\n        className={styles.table}\n      />\n      <Pagination\n        showSizeChanger={false}\n        defaultPageSize={10}\n        className={styles.paginationPartners}\n        defaultCurrent={currentPage}\n        total={filteredData.length}\n        onChange={handleChangePage}\n      />\n      <small className={styles.requested}>\n        Partners who have requested to meet with you.\n      </small>\n      <PartnerDrawer\n        isOpen={open}\n        onClose={onCloseDrawer}\n        partnerDetails={selectedPartner}\n      />\n    </section>\n  );\n};\n\nexport default PartnersSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}