{"ast":null,"code":"var _jsxFileName = \"/Users/shannoncoakley/Documents/GitHub/mp/src/components/sections/homeSection/mobile/MobilePartnersSection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { List, Pagination } from 'antd';\nimport styles from \"./styles.module.sass\";\nimport PartnerDrawer from \"../PartnerDrawer\";\nimport { usePartnerContext } from \"../contexts/IncentivesContext\";\nimport { ReactComponent as Filter } from '../../../../images/svgIcons/filter.svg';\nimport PartnerFilterDrawer from \"./PartnerFilterDrawer\";\nimport { useSalesForceData, useSalesForceDataWithThreeQueries } from \"../../../../getSalesForceData\";\nimport { fetchDataFromSalesForce } from \"../../../../salesforceAuth\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY1 = clientId => `query/?q=SELECT+Id,Client_Id__c,Client_Name__c,Related_Membership_Member__c,Quick_Overview__c,Client_Website__c,Client_Logo__c,Stage_M__c,Stage_MP__c,Sweepstakes_Type__c+FROM+Meeting__c+WHERE+Stage_M__c='Request+Queued'+AND+MemberC__c='${clientId}'`;\n_c = QUERY1;\nconst QUERY2 = `query/?q=SELECT+Id,Account_ID__c,Related_Membership__c,Account_Name_Merge_Only__c,Website,Client_Logo__c,Quick_Overview__c,Client_Campaign_ID__c+FROM+Account+WHERE+RecordTypeId='01236000000OodE'+AND+(Client_Campaign_Status__c='Active'+OR+Client_Campaign_Status__c='Testing')`;\nconst QUERY3 = recordIds => `query/?q=SELECT+Client_Name__c,Survey_Option_Name__c+FROM+Survey__c+WHERE+Client_Name__c+IN+(${recordIds.map(id => `'${id}'`).join(\",\")})`;\n_c2 = QUERY3;\nconst transformer = (primaryData, relatedData) => {\n  const surveyOptions = Array.isArray(relatedData === null || relatedData === void 0 ? void 0 : relatedData.Survey_Option_Name__c) ? relatedData.Survey_Option_Name__c : Array.isArray(relatedData === null || relatedData === void 0 ? void 0 : relatedData.Survey_Option_Name__c) ? [relatedData.Survey_Option_Name__c] : [];\n  return {\n    key: primaryData.Id,\n    clientKey: primaryData.Client_Id__c || primaryData.Account_ID__c,\n    website: primaryData.Client_Website__c || primaryData.Website,\n    partnerName: primaryData.Client_Name__c || primaryData.Account_Name_Merge_Only__c,\n    overview: primaryData.Quick_Overview__c || 'No quick overview',\n    hasRequested: primaryData.Stage_M__c === 'Request Queued',\n    richMerge: primaryData.Rich_Merge__c,\n    Survey_Option_Name__c: surveyOptions,\n    Stage_M__c: primaryData.Stage_M__c || '',\n    Stage_MP__c: primaryData.Stage_MP__c || '',\n    Sweepstakes_Type__c: primaryData.Sweepstakes_Type__c || '',\n    Client_Campaign_ID__c: primaryData.Client_Campaign_ID__c,\n    Related_Membership__c: primaryData.Related_Membership__c,\n    Related_Membership_Member__c: primaryData.Related_Membership_Member__c,\n    Client_Logo__c: primaryData.Client_Logo__c\n  };\n};\nconst QUERY_REQUESTED_MEETINGS = clientId => `query/?q=SELECT+Client_Id__c+FROM+Meeting__c+WHERE+Stage_M__c='Requested by Member'+AND+MemberC__c='${clientId}'`;\n_c3 = QUERY_REQUESTED_MEETINGS;\nconst clientIDTransformer = record => record.Client_Id__c;\nconst MobilePartnersSection = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [selectedPartner, setSelectedPartner] = useState(null);\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n  const [viewOnlyRequested, setViewOnlyRequested] = useState(true);\n  const [sortedInfo, setSortedInfo] = useState({});\n  const [searchValue, setSearchValue] = useState('');\n  const [loadingPartnerDetails, setLoadingPartnerDetails] = useState(false);\n  const [appliedViewOnlyRequested, setAppliedViewOnlyRequested] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const {\n    requestedList,\n    declinedList,\n    acceptedList,\n    savedAcceptedList,\n    setSavedAcceptedList\n  } = usePartnerContext();\n  const {\n    clientId\n  } = useParams();\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const {\n    data: partnersFromSalesForce,\n    fetchData\n  } = useSalesForceDataWithThreeQueries(QUERY1(clientId), QUERY2, QUERY3, transformer);\n  const requestedClientIDs = useSalesForceData(QUERY_REQUESTED_MEETINGS(clientId), clientIDTransformer);\n  useEffect(() => {\n    if (partnersFromSalesForce && partnersFromSalesForce.length > 0) {\n      setSavedAcceptedList(partnersFromSalesForce);\n    }\n  }, [partnersFromSalesForce]);\n  const getPartnerStatus = partner => {\n    if (acceptedList.some(item => item.key === partner.key)) {\n      return 'accepted';\n    } else if (requestedList.some(item => item.key === partner.key)) {\n      return 'requested';\n    } else if (declinedList.some(item => item.key === partner.key)) {\n      return 'declined';\n    }\n    return '';\n  };\n  const showFilter = () => {\n    setIsFilterOpen(true);\n  };\n  const handleOk = () => {\n    setIsFilterOpen(false);\n  };\n  const handleCancel = () => {\n    setIsFilterOpen(false);\n  };\n  const showDrawer = async partner => {\n    setSelectedPartner(partner);\n    setLoadingPartnerDetails(true);\n    try {\n      const response = await fetchDataFromSalesForce(`query/?q=SELECT+Rich_Merge__c+FROM+Client_Pitch__c+WHERE+Active__c=true+AND+Custom_Outreach__c=true+AND+(Client_Id__c='${partner.clientKey}'+OR+Client_Id__c='${partner.key}')`);\n      if (response && response.records && response.records[0] && response.records[0].Rich_Merge__c) {\n        setSelectedPartner(prev => ({\n          ...prev,\n          richMerge: response.records[0].Rich_Merge__c\n        }));\n      } else {\n        console.error(\"Invalid data format:\", response);\n      }\n    } catch (error) {\n      console.error(\"Error fetching partner details:\", error);\n    } finally {\n      setLoadingPartnerDetails(false);\n    }\n    setOpen(true);\n  };\n  const onCloseDrawer = () => {\n    setSelectedPartner(null);\n    fetchData();\n    setOpen(false);\n  };\n  const handleViewOnlyRequestedChange = checked => {\n    setCurrentPage(1);\n    setViewOnlyRequested(checked);\n  };\n  const handleApply = (value, viewOnlyRequested, selectedCategories) => {\n    setSearchValue(value);\n    setAppliedViewOnlyRequested(viewOnlyRequested);\n    setSelectedCategories(selectedCategories);\n    handleOk();\n  };\n  const handleChangePage = page => {\n    setCurrentPage(page);\n  };\n  const filteredData = useMemo(() => {\n    let filtered = [...savedAcceptedList]; // Клонировать массив, чтобы избежать мутации\n\n    if (searchValue) {\n      filtered = filtered.filter(partner => partner.partnerName.toLowerCase().includes(searchValue.toLowerCase()) || partner.overview.toLowerCase().includes(searchValue.toLowerCase())\n      // добавьте другие поля, если хотите искать по ним\n      );\n    }\n\n    if (selectedCategories.length) {\n      filtered = filtered.map(partner => {\n        const matchingCategories = selectedCategories.filter(category => {\n          var _partner$Survey_Optio;\n          return (_partner$Survey_Optio = partner.Survey_Option_Name__c) === null || _partner$Survey_Optio === void 0 ? void 0 : _partner$Survey_Optio.some(option => option === category);\n        });\n        if (matchingCategories.length) {\n          return {\n            ...partner,\n            filterCategory: matchingCategories\n          };\n        }\n        return partner;\n      }).filter(partner => partner.filterCategory && partner.filterCategory.length);\n    }\n    if (requestedClientIDs && requestedClientIDs.length > 0) {\n      filtered = filtered.filter(partner => partner.clientKey && !requestedClientIDs.includes(partner.clientKey));\n    }\n    if (appliedViewOnlyRequested) {\n      filtered = filtered.filter(item => item.hasRequested);\n    }\n    return filtered;\n  }, [savedAcceptedList, searchValue, appliedViewOnlyRequested, selectedCategories, requestedClientIDs]);\n  const sortedData = useMemo(() => {\n    if (sortedInfo && sortedInfo.columnKey === 'name') {\n      if (sortedInfo.order === 'ascend') {\n        return [...filteredData].sort((a, b) => a.partnerName.localeCompare(b.partnerName));\n      } else if (sortedInfo.order === 'descend') {\n        return [...filteredData].sort((a, b) => b.partnerName.localeCompare(a.partnerName));\n      }\n    }\n    return filteredData;\n  }, [filteredData, sortedInfo]);\n  const startIndex = (currentPage - 1) * 10;\n  const endIndex = startIndex + 10;\n  const paginatedData = sortedData.slice(startIndex, endIndex);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.partnersContainer,\n    children: [/*#__PURE__*/_jsxDEV(PartnerFilterDrawer, {\n      isOpenFilter: isFilterOpen,\n      onCloseFilter: handleCancel,\n      onViewOnlyRequestedChange: handleViewOnlyRequestedChange,\n      onApply: handleApply\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.partnersTitleContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        className: styles.partnerInfo,\n        children: \"Click a partner name below for more information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showFilter,\n        className: styles.filterBtn,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 76\n        }, this), \"  Filter\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: styles.requested,\n        children: \"Partners who have requested to meet with you.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: styles.list,\n      itemLayout: \"horizontal\",\n      dataSource: paginatedData,\n      pagination: false,\n      renderItem: item => {\n        const partnerStatus = getPartnerStatus(item);\n        return /*#__PURE__*/_jsxDEV(List.Item, {\n          onClick: () => showDrawer(item),\n          children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n            title: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: partnerStatus === 'requested' ? styles.requestedPartner : partnerStatus === 'accepted' ? styles.acceptedPartner : partnerStatus === 'declined' ? styles.declinedPartner : '',\n              children: [item.partnerName, item.hasRequested && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.orangeStar,\n                children: \"\\u2605\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 82\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 37\n            }, this),\n            description: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: partnerStatus === 'requested' ? styles.requestedPartner : partnerStatus === 'accepted' ? styles.acceptedPartner : partnerStatus === 'declined' ? styles.declinedPartner : '',\n              children: item.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      defaultPageSize: 10,\n      className: styles.paginationPartnersMobile,\n      defaultCurrent: currentPage,\n      total: filteredData.length,\n      onChange: handleChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PartnerDrawer, {\n      isOpen: open,\n      onClose: onCloseDrawer,\n      partnerDetails: selectedPartner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 9\n  }, this);\n};\n_s(MobilePartnersSection, \"9+dT2/A1fqLl4PNpDlLvGpfeQ64=\", false, function () {\n  return [usePartnerContext, useParams, useSalesForceDataWithThreeQueries, useSalesForceData];\n});\n_c4 = MobilePartnersSection;\nexport default MobilePartnersSection;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"QUERY1\");\n$RefreshReg$(_c2, \"QUERY3\");\n$RefreshReg$(_c3, \"QUERY_REQUESTED_MEETINGS\");\n$RefreshReg$(_c4, \"MobilePartnersSection\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","List","Pagination","styles","PartnerDrawer","usePartnerContext","ReactComponent","Filter","PartnerFilterDrawer","useSalesForceData","useSalesForceDataWithThreeQueries","fetchDataFromSalesForce","useParams","jsxDEV","_jsxDEV","QUERY1","clientId","_c","QUERY2","QUERY3","recordIds","map","id","join","_c2","transformer","primaryData","relatedData","surveyOptions","Array","isArray","Survey_Option_Name__c","key","Id","clientKey","Client_Id__c","Account_ID__c","website","Client_Website__c","Website","partnerName","Client_Name__c","Account_Name_Merge_Only__c","overview","Quick_Overview__c","hasRequested","Stage_M__c","richMerge","Rich_Merge__c","Stage_MP__c","Sweepstakes_Type__c","Client_Campaign_ID__c","Related_Membership__c","Related_Membership_Member__c","Client_Logo__c","QUERY_REQUESTED_MEETINGS","_c3","clientIDTransformer","record","MobilePartnersSection","_s","open","setOpen","selectedPartner","setSelectedPartner","isFilterOpen","setIsFilterOpen","viewOnlyRequested","setViewOnlyRequested","sortedInfo","setSortedInfo","searchValue","setSearchValue","loadingPartnerDetails","setLoadingPartnerDetails","appliedViewOnlyRequested","setAppliedViewOnlyRequested","currentPage","setCurrentPage","requestedList","declinedList","acceptedList","savedAcceptedList","setSavedAcceptedList","selectedCategories","setSelectedCategories","data","partnersFromSalesForce","fetchData","requestedClientIDs","length","getPartnerStatus","partner","some","item","showFilter","handleOk","handleCancel","showDrawer","response","records","prev","console","error","onCloseDrawer","handleViewOnlyRequestedChange","checked","handleApply","value","handleChangePage","page","filteredData","filtered","filter","toLowerCase","includes","matchingCategories","category","_partner$Survey_Optio","option","filterCategory","sortedData","columnKey","order","sort","a","b","localeCompare","startIndex","endIndex","paginatedData","slice","className","partnersContainer","children","isOpenFilter","onCloseFilter","onViewOnlyRequestedChange","onApply","fileName","_jsxFileName","lineNumber","columnNumber","partnersTitleContainer","partnerInfo","onClick","filterBtn","requested","list","itemLayout","dataSource","pagination","renderItem","partnerStatus","Item","Meta","title","requestedPartner","acceptedPartner","declinedPartner","orangeStar","description","defaultPageSize","paginationPartnersMobile","defaultCurrent","total","onChange","isOpen","onClose","partnerDetails","_c4","$RefreshReg$"],"sources":["/Users/shannoncoakley/Documents/GitHub/mp/src/components/sections/homeSection/mobile/MobilePartnersSection.tsx"],"sourcesContent":["import React, { FC, useContext, useEffect, useMemo, useState } from 'react';\nimport { List, Pagination } from 'antd';\nimport styles from \"./styles.module.sass\";\nimport PartnerDrawer from \"../PartnerDrawer\";\nimport { usePartnerContext } from \"../contexts/IncentivesContext\";\n\nimport { ReactComponent as Filter } from '../../../../images/svgIcons/filter.svg'\nimport PartnerModal from \"../PartnerModal\";\nimport PartnerFilterDrawer from \"./PartnerFilterDrawer\";\nimport { useSalesForceData, useSalesForceDataWithThreeQueries } from \"../../../../getSalesForceData\";\nimport { fetchDataFromSalesForce } from \"../../../../salesforceAuth\";\nimport { useParams } from \"react-router-dom\";\nimport { SorterResult } from \"antd/es/table/interface\";\n\ninterface PartnersDataType {\n    key: string;\n    partnerName: string;\n    clientKey?: string;\n    overview: string;\n    hasRequested: boolean;\n    website?: string;\n    richMerge?: string;\n    surveyOptionName?: string[];\n    Stage_M__c?: string;\n    Stage_MP__c?: string;\n    Sweepstakes_Type__c?: string;\n    Client_Campaign_ID__c?: string;\n    Related_Membership_Member__c: string;\n    Related_Membership__c: string;\n    Survey_Option_Name__c: string[];\n    filterCategory?: string[];\n    Client_Logo__c?: string;\n}\n\ninterface SalesForcePartner {\n    Id: string;\n    Client_Id__c?: string;\n    Account_ID__c?: string;\n    Client_Name__c: string;\n    Account_Name_Merge_Only__c: string;\n    Quick_Overview__c: string;\n    Client_Website__c?: string;\n    Website?: string;\n    Rich_Merge__c?: string;\n    Stage_M__c?: string;\n    Stage_MP__c?: string;\n    Sweepstakes_Type__c?: string;\n    Client_Campaign_ID__c?: string;\n    Related_Membership_Member__c: string;\n    Related_Membership__c: string;\n    Survey_Option_Name__c: string[];\n    Client_Logo__c?: string;\n\n}\n\nconst QUERY1 = (clientId: string | undefined) => `query/?q=SELECT+Id,Client_Id__c,Client_Name__c,Related_Membership_Member__c,Quick_Overview__c,Client_Website__c,Client_Logo__c,Stage_M__c,Stage_MP__c,Sweepstakes_Type__c+FROM+Meeting__c+WHERE+Stage_M__c='Request+Queued'+AND+MemberC__c='${clientId}'`;\nconst QUERY2 = `query/?q=SELECT+Id,Account_ID__c,Related_Membership__c,Account_Name_Merge_Only__c,Website,Client_Logo__c,Quick_Overview__c,Client_Campaign_ID__c+FROM+Account+WHERE+RecordTypeId='01236000000OodE'+AND+(Client_Campaign_Status__c='Active'+OR+Client_Campaign_Status__c='Testing')`;\nconst QUERY3 = (recordIds: string[]) => `query/?q=SELECT+Client_Name__c,Survey_Option_Name__c+FROM+Survey__c+WHERE+Client_Name__c+IN+(${recordIds.map(id => `'${id}'`).join(\",\")})`;\nconst transformer = (primaryData: SalesForcePartner, relatedData?: any) => {\n    const surveyOptions = Array.isArray(relatedData?.Survey_Option_Name__c)\n        ? relatedData.Survey_Option_Name__c\n        : Array.isArray(relatedData?.Survey_Option_Name__c)\n            ? [relatedData.Survey_Option_Name__c]\n            : [];\n\n    return {\n        key: primaryData.Id,\n        clientKey: primaryData.Client_Id__c || primaryData.Account_ID__c,\n        website: primaryData.Client_Website__c || primaryData.Website,\n        partnerName: primaryData.Client_Name__c || primaryData.Account_Name_Merge_Only__c,\n        overview: primaryData.Quick_Overview__c || 'No quick overview',\n        hasRequested: primaryData.Stage_M__c === 'Request Queued',\n        richMerge: primaryData.Rich_Merge__c,\n        Survey_Option_Name__c: surveyOptions,\n        Stage_M__c: primaryData.Stage_M__c || '',\n        Stage_MP__c: primaryData.Stage_MP__c || '',\n        Sweepstakes_Type__c: primaryData.Sweepstakes_Type__c || '',\n        Client_Campaign_ID__c: primaryData.Client_Campaign_ID__c,\n        Related_Membership__c: primaryData.Related_Membership__c,\n        Related_Membership_Member__c: primaryData.Related_Membership_Member__c,\n        Client_Logo__c: primaryData.Client_Logo__c,\n    }\n};\n\ntype MeetingRecord = {\n    Client_Id__c: string;\n};\ntype Transformer<T, U> = (input: T) => U;\nconst QUERY_REQUESTED_MEETINGS = (clientId: string | undefined) => `query/?q=SELECT+Client_Id__c+FROM+Meeting__c+WHERE+Stage_M__c='Requested by Member'+AND+MemberC__c='${clientId}'`;\nconst clientIDTransformer: Transformer<MeetingRecord, string> = (record: MeetingRecord) => record.Client_Id__c;\n\n\nconst MobilePartnersSection: FC = () => {\n    const [open, setOpen] = useState(false);\n    const [selectedPartner, setSelectedPartner] = useState<PartnersDataType | null>(null);\n    const [isFilterOpen, setIsFilterOpen] = useState(false);\n    const [viewOnlyRequested, setViewOnlyRequested] = useState(true);\n    const [sortedInfo, setSortedInfo] = useState<SorterResult<PartnersDataType>>({});\n    const [searchValue, setSearchValue] = useState<string>('');\n    const [loadingPartnerDetails, setLoadingPartnerDetails] = useState(false);\n    const [appliedViewOnlyRequested, setAppliedViewOnlyRequested] = useState(true)\n    const [currentPage, setCurrentPage] = useState(1);\n    const { requestedList, declinedList, acceptedList, savedAcceptedList, setSavedAcceptedList } = usePartnerContext();\n    const { clientId } = useParams<{ clientId: string }>();\n    const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n\n    const { data: partnersFromSalesForce, fetchData } = useSalesForceDataWithThreeQueries(\n        QUERY1(clientId),\n        QUERY2,\n        QUERY3,\n        transformer\n    );\n\n    const requestedClientIDs = useSalesForceData(QUERY_REQUESTED_MEETINGS(clientId), clientIDTransformer);\n\n    useEffect(() => {\n        if (partnersFromSalesForce && partnersFromSalesForce.length > 0) {\n            setSavedAcceptedList(partnersFromSalesForce);\n        }\n    }, [partnersFromSalesForce]);\n\n    const getPartnerStatus = (partner: PartnersDataType) => {\n        if (acceptedList.some(item => item.key === partner.key)) {\n            return 'accepted';\n        } else if (requestedList.some(item => item.key === partner.key)) {\n            return 'requested';\n        } else if (declinedList.some(item => item.key === partner.key)) {\n            return 'declined';\n        }\n        return '';\n    };\n\n    const showFilter = () => {\n        setIsFilterOpen(true);\n    };\n\n    const handleOk = () => {\n        setIsFilterOpen(false);\n    };\n\n    const handleCancel = () => {\n        setIsFilterOpen(false);\n    };\n\n    const showDrawer = async (partner: PartnersDataType) => {\n        setSelectedPartner(partner);\n        setLoadingPartnerDetails(true);\n        try {\n            const response = await fetchDataFromSalesForce(`query/?q=SELECT+Rich_Merge__c+FROM+Client_Pitch__c+WHERE+Active__c=true+AND+Custom_Outreach__c=true+AND+(Client_Id__c='${partner.clientKey}'+OR+Client_Id__c='${partner.key}')`);\n\n            if (response && response.records && response.records[0] && response.records[0].Rich_Merge__c) {\n                setSelectedPartner(prev => ({\n                    ...prev!,\n                    richMerge: response.records[0].Rich_Merge__c\n                }));\n            } else {\n                console.error(\"Invalid data format:\", response);\n            }\n        } catch (error) {\n            console.error(\"Error fetching partner details:\", error);\n        } finally {\n            setLoadingPartnerDetails(false);\n        }\n\n        setOpen(true);\n    };\n\n\n    const onCloseDrawer = () => {\n        setSelectedPartner(null);\n        fetchData()\n        setOpen(false);\n    };\n\n    const handleViewOnlyRequestedChange = (checked: boolean) => {\n        setCurrentPage(1)\n        setViewOnlyRequested(checked);\n    };\n\n    const handleApply = (value: string, viewOnlyRequested: boolean, selectedCategories: string[]) => {\n        setSearchValue(value);\n        setAppliedViewOnlyRequested(viewOnlyRequested);\n        setSelectedCategories(selectedCategories)\n        handleOk();\n    };\n    const handleChangePage = (page: number) => {\n        setCurrentPage(page);\n    };\n\n    const filteredData = useMemo(() => {\n        let filtered = [...savedAcceptedList]; // Клонировать массив, чтобы избежать мутации\n\n        if (searchValue) {\n            filtered = filtered.filter(partner =>\n                partner.partnerName.toLowerCase().includes(searchValue.toLowerCase()) ||\n                partner.overview.toLowerCase().includes(searchValue.toLowerCase())\n                // добавьте другие поля, если хотите искать по ним\n            );\n        }\n\n        if (selectedCategories.length) {\n            filtered = filtered.map(partner => {\n                const matchingCategories = selectedCategories.filter(category =>\n                    partner.Survey_Option_Name__c?.some(option => option === category)\n                );\n\n                if (matchingCategories.length) {\n                    return {\n                        ...partner,\n                        filterCategory: matchingCategories\n                    };\n                }\n                return partner;\n            }).filter(partner => partner.filterCategory && partner.filterCategory.length);\n        }\n\n        if (requestedClientIDs && requestedClientIDs.length > 0) {\n            filtered = filtered.filter(partner => partner.clientKey && !requestedClientIDs.includes(partner.clientKey));\n        }\n\n        if (appliedViewOnlyRequested) {\n            filtered = filtered.filter(item => item.hasRequested);\n        }\n\n        return filtered;\n    }, [savedAcceptedList, searchValue, appliedViewOnlyRequested, selectedCategories, requestedClientIDs]);\n\n    const sortedData = useMemo(() => {\n        if (sortedInfo && sortedInfo.columnKey === 'name') {\n            if (sortedInfo.order === 'ascend') {\n                return [...filteredData].sort((a, b) => a.partnerName.localeCompare(b.partnerName));\n            } else if (sortedInfo.order === 'descend') {\n                return [...filteredData].sort((a, b) => b.partnerName.localeCompare(a.partnerName));\n            }\n        }\n        return filteredData;\n    }, [filteredData, sortedInfo]);\n\n    const startIndex = (currentPage - 1) * 10;\n    const endIndex = startIndex + 10;\n    const paginatedData = sortedData.slice(startIndex, endIndex);\n\n    return (\n        <section className={styles.partnersContainer}>\n            <PartnerFilterDrawer isOpenFilter={isFilterOpen}\n                onCloseFilter={handleCancel} onViewOnlyRequestedChange={handleViewOnlyRequestedChange} onApply={handleApply} />\n            <div className={styles.partnersTitleContainer}>\n                <small className={styles.partnerInfo}>Click a partner name below for more information</small>\n                <button onClick={showFilter} className={styles.filterBtn}> <Filter />  Filter</button>\n                <small className={styles.requested}>Partners who have requested to meet with you.</small>\n            </div>\n            <List\n                className={styles.list}\n                itemLayout=\"horizontal\"\n                dataSource={paginatedData}\n                pagination={false}\n                renderItem={(item) => {\n                    const partnerStatus = getPartnerStatus(item)\n                    return (\n                        <List.Item onClick={() => showDrawer(item)}>\n                            <List.Item.Meta\n                                title={(\n                                    <span className={partnerStatus === 'requested' ? styles.requestedPartner : partnerStatus === 'accepted' ? styles.acceptedPartner : partnerStatus === 'declined' ? styles.declinedPartner : ''}>\n                                        {item.partnerName}{item.hasRequested && (<span className={styles.orangeStar}>★</span>)}\n                                    </span>)} description={<span className={partnerStatus === 'requested' ? styles.requestedPartner : partnerStatus === 'accepted' ? styles.acceptedPartner : partnerStatus === 'declined' ? styles.declinedPartner : ''}>{item.overview}</span>} />\n                        </List.Item>\n                    )\n                }}\n            />\n            <Pagination defaultPageSize={10} className={styles.paginationPartnersMobile} defaultCurrent={currentPage} total={filteredData.length} onChange={handleChangePage} />\n            <PartnerDrawer\n                isOpen={open}\n                onClose={onCloseDrawer}\n                partnerDetails={selectedPartner}\n            />\n\n        </section>\n    );\n}\n\nexport default MobilePartnersSection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}